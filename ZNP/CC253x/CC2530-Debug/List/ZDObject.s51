///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V9.30.1.3056 for 8051               21/Nov/2018  13:52:22
// Copyright 2004-2015 IAR Systems AB.
// Standalone license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Components\stack\zdo\ZDObject.c
//    Command line       =  
//        -f "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\Source\znp.cfg"
//        (-DMAC_CFG_APP_PENDING_QUEUE=TRUE
//        "-DZSTACK_DEVICE_BUILD=(DEVICE_BUILD_COORDINATOR |
//        DEVICE_BUILD_ROUTER | DEVICE_BUILD_ENDDEVICE)" -DNWK_AUTO_POLL
//        -DZNP_RUN_WDOG=FALSE -DZNP_UART_BAUD=HAL_UART_BR_115200 -DZIGBEEPRO
//        -DZIGBEE_FRAGMENTATION -DINTER_PAN -DOSAL_CLOCK -DOSAL_SAPI=FALSE
//        -DSAPI_CB_FUNC=FALSE -DHOLD_AUTO_START -DNV_RESTORE -DNV_INIT
//        -DNUM_DISC_ATTEMPTS=0 -DMT_UTIL_FUNC -DMT_SYS_FUNC -DMT_AF_FUNC
//        -DMT_SAPI_FUNC -DMT_SAPI_CB_FUNC -DMT_ZDO_CB_FUNC -DMT_ZDO_FUNC
//        -DMT_ZDO_MGMT -DMT_ZDO_EXTENSIONS -DMT_APP_FUNC) -f
//        "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\..\Tools\CC2530DB\f8wConfig.cfg"
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
//        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
//        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440) -f
//        "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\..\Tools\CC2530DB\f8wZCL.cfg"
//        "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Components\stack\zdo\ZDObject.c" -D FEATURE_SYSTEM_STATS -D
//        POWER_SAVING -lC "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\CC2530-Debug\List" -lA
//        "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\CC2530-Debug\List" --diag_suppress
//        Pe001,Pa010 -o "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\CC2530-Debug\Obj" -e
//        --no_code_motion --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 16 -I
//        "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\" -I
//        "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\Source\" -I
//        "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\Source\" -I
//        "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\..\SE\Source\" -I
//        "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\..\ZMain\TI2530ZNP\" -I
//        "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\hal\include\"
//        -I "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\hal\target\CC2530ZNP\"
//        -I "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\mac\include\"
//        -I "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\mac\high_level\"
//        -I "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\mac\low_level\srf04\"
//        -I "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
//        -I "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\mt\" -I
//        "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\osal\include\"
//        -I "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\services\saddr\"
//        -I "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\services\sdata\"
//        -I "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\af\" -I
//        "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\nwk\"
//        -I "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\sapi\"
//        -I "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\sec\"
//        -I "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\sys\"
//        -I "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\zcl\"
//        -I "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\zdo\"
//        -I "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\zmac\" -I
//        "D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\zmac\f8w\"
//        -Ohz --require_prototypes
//    List file          =  
//        D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh
//        1.0.0\Projects\zstack\ZNP\CC253x\CC2530-Debug\List\ZDObject.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME ZDObject

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V1
        EXTERN ?V2
        EXTERN ?V3
        EXTERN ?V4
        EXTERN ?V6
        EXTERN ?V7
        EXTERN ?V5
        EXTERN ?V8
        EXTERN ?V9
        EXTERN ?V10
        EXTERN ?V11
        EXTERN ?V12
        EXTERN ?V13
        EXTERN ?V14
        EXTERN ?V15
        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?L_MOV_TO_X
        EXTERN ?MOVE_LONG8_XDATA_XDATA
        EXTERN ?PUSH_XSTACK8_X_FOUR
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?S_SHL
        EXTERN ?XLOAD_R2345
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTACK_DISP100_8
        EXTERN ?XSTACK_DISP101_8
        EXTERN ?XSTACK_DISP102_8
        EXTERN ?XSTORE_R0123
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC `??NLME_PermitJoiningTimeout::?relay`
        FUNCTION `??NLME_PermitJoiningTimeout::?relay`,0203H
        PUBLIC `??ZDMatchSendState::?relay`
        FUNCTION `??ZDMatchSendState::?relay`,0203H
        PUBLIC `??ZDO_AnyClusterMatches::?relay`
        FUNCTION `??ZDO_AnyClusterMatches::?relay`,0203H
        PUBLIC `??ZDO_BuildSimpleDescBuf::?relay`
        FUNCTION `??ZDO_BuildSimpleDescBuf::?relay`,0203H
        FUNCTION `??ZDO_CompareClusterLists::?relay`,0203H
        PUBLIC `??ZDO_ConvertOTAClusters::?relay`
        FUNCTION `??ZDO_ConvertOTAClusters::?relay`,0203H
        FUNCTION `??ZDO_CopyMatchInfo::?relay`,0203H
        FUNCTION `??ZDO_EndDeviceBindMatchTimeoutCB::?relay`,0203H
        PUBLIC `??ZDO_EndDeviceTimeoutCB::?relay`
        FUNCTION `??ZDO_EndDeviceTimeoutCB::?relay`,0203H
        PUBLIC `??ZDO_FinishProcessingMgmtNwkDiscReq::?relay`
        FUNCTION `??ZDO_FinishProcessingMgmtNwkDiscReq::?relay`,0203H
        PUBLIC `??ZDO_Init::?relay`
        FUNCTION `??ZDO_Init::?relay`,0203H
        PUBLIC `??ZDO_MatchEndDeviceBind::?relay`
        FUNCTION `??ZDO_MatchEndDeviceBind::?relay`,0203H
        PUBLIC `??ZDO_ParseAddrRsp::?relay`
        FUNCTION `??ZDO_ParseAddrRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseBindUnbindReq::?relay`
        FUNCTION `??ZDO_ParseBindUnbindReq::?relay`,0203H
        PUBLIC `??ZDO_ParseDeviceAnnce::?relay`
        FUNCTION `??ZDO_ParseDeviceAnnce::?relay`,0203H
        PUBLIC `??ZDO_ParseEPListRsp::?relay`
        FUNCTION `??ZDO_ParseEPListRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseEndDeviceBindReq::?relay`
        FUNCTION `??ZDO_ParseEndDeviceBindReq::?relay`,0203H
        PUBLIC `??ZDO_ParseEndDeviceTimeoutRsp::?relay`
        FUNCTION `??ZDO_ParseEndDeviceTimeoutRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmNwkDiscRsp::?relay`
        FUNCTION `??ZDO_ParseMgmNwkDiscRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtBindRsp::?relay`
        FUNCTION `??ZDO_ParseMgmtBindRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtLqiRsp::?relay`
        FUNCTION `??ZDO_ParseMgmtLqiRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtNwkUpdateNotify::?relay`
        FUNCTION `??ZDO_ParseMgmtNwkUpdateNotify::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtNwkUpdateReq::?relay`
        FUNCTION `??ZDO_ParseMgmtNwkUpdateReq::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtRtgRsp::?relay`
        FUNCTION `??ZDO_ParseMgmtRtgRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseNodeDescRsp::?relay`
        FUNCTION `??ZDO_ParseNodeDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ParsePowerDescRsp::?relay`
        FUNCTION `??ZDO_ParsePowerDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseServerDiscRsp::?relay`
        FUNCTION `??ZDO_ParseServerDiscRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseSimpleDescBuf::?relay`
        FUNCTION `??ZDO_ParseSimpleDescBuf::?relay`,0203H
        PUBLIC `??ZDO_ParseSimpleDescRsp::?relay`
        FUNCTION `??ZDO_ParseSimpleDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseUserDescRsp::?relay`
        FUNCTION `??ZDO_ParseUserDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ProcessActiveEPReq::?relay`
        FUNCTION `??ZDO_ProcessActiveEPReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessBindUnbindReq::?relay`
        FUNCTION `??ZDO_ProcessBindUnbindReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessDeviceAnnce::?relay`
        FUNCTION `??ZDO_ProcessDeviceAnnce::?relay`,0203H
        PUBLIC `??ZDO_ProcessEndDeviceTimeoutReq::?relay`
        FUNCTION `??ZDO_ProcessEndDeviceTimeoutReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMatchDescReq::?relay`
        FUNCTION `??ZDO_ProcessMatchDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtBindReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtBindReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtDirectJoinReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtDirectJoinReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtLeaveReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtLeaveReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtLqiReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtLqiReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtNwkDiscReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtNwkDiscReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtPermitJoinReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtPermitJoinReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtRtgReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtRtgReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessNodeDescReq::?relay`
        FUNCTION `??ZDO_ProcessNodeDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessPowerDescReq::?relay`
        FUNCTION `??ZDO_ProcessPowerDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessServerDiscReq::?relay`
        FUNCTION `??ZDO_ProcessServerDiscReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessSimpleDescReq::?relay`
        FUNCTION `??ZDO_ProcessSimpleDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessUserDescReq::?relay`
        FUNCTION `??ZDO_ProcessUserDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessUserDescSet::?relay`
        FUNCTION `??ZDO_ProcessUserDescSet::?relay`,0203H
        FUNCTION `??ZDO_RemoveMatchMemory::?relay`,0203H
        PUBLIC `??ZDO_StartDevice::?relay`
        FUNCTION `??ZDO_StartDevice::?relay`,0203H
        PUBLIC `??ZDO_UpdateAddrManager::?relay`
        FUNCTION `??ZDO_UpdateAddrManager::?relay`,0203H
        PUBLIC `??ZDO_UpdateNwkStatus::?relay`
        FUNCTION `??ZDO_UpdateNwkStatus::?relay`,0203H
        FUNCTION `??zdoSendStateChangeMsg::?relay`,0203H
        PUBLIC NLME_PermitJoiningTimeout
        FUNCTION NLME_PermitJoiningTimeout,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDMatchSendState
        FUNCTION ZDMatchSendState,0a1203H
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 45, STACK
        PUBLIC ZDO_AnyClusterMatches
        FUNCTION ZDO_AnyClusterMatches,080203H
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_BuildSimpleDescBuf
        FUNCTION ZDO_BuildSimpleDescBuf,080203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        FUNCTION ZDO_CompareClusterLists,080203H
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ConvertOTAClusters
        FUNCTION ZDO_ConvertOTAClusters,080203H
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        FUNCTION ZDO_CopyMatchInfo,0a1203H
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 18, STACK
        FUNCTION ZDO_EndDeviceBindMatchTimeoutCB,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_EndDeviceTimeoutCB
        FUNCTION ZDO_EndDeviceTimeoutCB,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        PUBLIC ZDO_FinishProcessingMgmtNwkDiscReq
        FUNCTION ZDO_FinishProcessingMgmtNwkDiscReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC ZDO_Init
        FUNCTION ZDO_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_MatchEndDeviceBind
        FUNCTION ZDO_MatchEndDeviceBind,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 30, STACK
        PUBLIC ZDO_ParseAddrRsp
        FUNCTION ZDO_ParseAddrRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParseBindUnbindReq
        FUNCTION ZDO_ParseBindUnbindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseDeviceAnnce
        FUNCTION ZDO_ParseDeviceAnnce,0a1203H
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseEPListRsp
        FUNCTION ZDO_ParseEPListRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDO_ParseEndDeviceBindReq
        FUNCTION ZDO_ParseEndDeviceBindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_ParseEndDeviceTimeoutRsp
        FUNCTION ZDO_ParseEndDeviceTimeoutRsp,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_ParseMgmNwkDiscRsp
        FUNCTION ZDO_ParseMgmNwkDiscRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseMgmtBindRsp
        FUNCTION ZDO_ParseMgmtBindRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDO_ParseMgmtLqiRsp
        FUNCTION ZDO_ParseMgmtLqiRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseMgmtNwkUpdateNotify
        FUNCTION ZDO_ParseMgmtNwkUpdateNotify,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC ZDO_ParseMgmtNwkUpdateReq
        FUNCTION ZDO_ParseMgmtNwkUpdateReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseMgmtRtgRsp
        FUNCTION ZDO_ParseMgmtRtgRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParseNodeDescRsp
        FUNCTION ZDO_ParseNodeDescRsp,080203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_ParsePowerDescRsp
        FUNCTION ZDO_ParsePowerDescRsp,080203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_ParseServerDiscRsp
        FUNCTION ZDO_ParseServerDiscRsp,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_ParseSimpleDescBuf
        FUNCTION ZDO_ParseSimpleDescBuf,0a1203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParseSimpleDescRsp
        FUNCTION ZDO_ParseSimpleDescRsp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_ParseUserDescRsp
        FUNCTION ZDO_ParseUserDescRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDO_ProcessActiveEPReq
        FUNCTION ZDO_ProcessActiveEPReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDO_ProcessBindUnbindReq
        FUNCTION ZDO_ProcessBindUnbindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 32, STACK
        PUBLIC ZDO_ProcessDeviceAnnce
        FUNCTION ZDO_ProcessDeviceAnnce,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        PUBLIC ZDO_ProcessEndDeviceTimeoutReq
        FUNCTION ZDO_ProcessEndDeviceTimeoutReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDO_ProcessMatchDescReq
        FUNCTION ZDO_ProcessMatchDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 36, STACK
        PUBLIC ZDO_ProcessMgmtBindReq
        FUNCTION ZDO_ProcessMgmtBindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC ZDO_ProcessMgmtDirectJoinReq
        FUNCTION ZDO_ProcessMgmtDirectJoinReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ProcessMgmtLeaveReq
        FUNCTION ZDO_ProcessMgmtLeaveReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDO_ProcessMgmtLqiReq
        FUNCTION ZDO_ProcessMgmtLqiReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 64, STACK
        PUBLIC ZDO_ProcessMgmtNwkDiscReq
        FUNCTION ZDO_ProcessMgmtNwkDiscReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        PUBLIC ZDO_ProcessMgmtPermitJoinReq
        FUNCTION ZDO_ProcessMgmtPermitJoinReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ProcessMgmtRtgReq
        FUNCTION ZDO_ProcessMgmtRtgReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC ZDO_ProcessNodeDescReq
        FUNCTION ZDO_ProcessNodeDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessPowerDescReq
        FUNCTION ZDO_ProcessPowerDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessServerDiscReq
        FUNCTION ZDO_ProcessServerDiscReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessSimpleDescReq
        FUNCTION ZDO_ProcessSimpleDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_ProcessUserDescReq
        FUNCTION ZDO_ProcessUserDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        PUBLIC ZDO_ProcessUserDescSet
        FUNCTION ZDO_ProcessUserDescSet,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 41, STACK
        FUNCTION ZDO_RemoveMatchMemory,021203H
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_StartDevice
        FUNCTION ZDO_StartDevice,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        PUBLIC ZDO_UpdateAddrManager
        FUNCTION ZDO_UpdateAddrManager,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 13, STACK
        PUBLIC ZDO_UpdateNwkStatus
        FUNCTION ZDO_UpdateNwkStatus,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBWEAK __Constant_3e8
        PUBLIC apsChannelMask
        PUBLIC matchED
        FUNCTION zdoSendStateChangeMsg,0a1203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC zdpExternalStateTaskID
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
APSME_BindRequest   SYMBOL "APSME_BindRequest"
`??APSME_BindRequest::?relay` SYMBOL "?relay", APSME_BindRequest
APSME_GetRequest    SYMBOL "APSME_GetRequest"
`??APSME_GetRequest::?relay` SYMBOL "?relay", APSME_GetRequest
APSME_LookupNwkAddr SYMBOL "APSME_LookupNwkAddr"
`??APSME_LookupNwkAddr::?relay` SYMBOL "?relay", APSME_LookupNwkAddr
APSME_UnBindRequest SYMBOL "APSME_UnBindRequest"
`??APSME_UnBindRequest::?relay` SYMBOL "?relay", APSME_UnBindRequest
APS_ReflectorInit   SYMBOL "APS_ReflectorInit"
`??APS_ReflectorInit::?relay` SYMBOL "?relay", APS_ReflectorInit
APS_SetEndDeviceBindTimeout SYMBOL "APS_SetEndDeviceBindTimeout"
`??APS_SetEndDeviceBindTimeout::?relay` SYMBOL "?relay", APS_SetEndDeviceBindTimeout
AddrMgrEntryLookupExt SYMBOL "AddrMgrEntryLookupExt"
`??AddrMgrEntryLookupExt::?relay` SYMBOL "?relay", AddrMgrEntryLookupExt
AddrMgrEntryLookupNwk SYMBOL "AddrMgrEntryLookupNwk"
`??AddrMgrEntryLookupNwk::?relay` SYMBOL "?relay", AddrMgrEntryLookupNwk
AddrMgrEntryUpdate  SYMBOL "AddrMgrEntryUpdate"
`??AddrMgrEntryUpdate::?relay` SYMBOL "?relay", AddrMgrEntryUpdate
AddrMgrExtAddrSet   SYMBOL "AddrMgrExtAddrSet"
`??AddrMgrExtAddrSet::?relay` SYMBOL "?relay", AddrMgrExtAddrSet
AddrMgrExtAddrValid SYMBOL "AddrMgrExtAddrValid"
`??AddrMgrExtAddrValid::?relay` SYMBOL "?relay", AddrMgrExtAddrValid
AssocChangeNwkAddr  SYMBOL "AssocChangeNwkAddr"
`??AssocChangeNwkAddr::?relay` SYMBOL "?relay", AssocChangeNwkAddr
AssocCount          SYMBOL "AssocCount"
`??AssocCount::?relay` SYMBOL "?relay", AssocCount
AssocFindDevice     SYMBOL "AssocFindDevice"
`??AssocFindDevice::?relay` SYMBOL "?relay", AssocFindDevice
AssocGetWithExt     SYMBOL "AssocGetWithExt"
`??AssocGetWithExt::?relay` SYMBOL "?relay", AssocGetWithExt
AssocRemove         SYMBOL "AssocRemove"
`??AssocRemove::?relay` SYMBOL "?relay", AssocRemove
NLME_CheckNewAddrSet SYMBOL "NLME_CheckNewAddrSet"
`??NLME_CheckNewAddrSet::?relay` SYMBOL "?relay", NLME_CheckNewAddrSet
NLME_CoordinatorInit SYMBOL "NLME_CoordinatorInit"
`??NLME_CoordinatorInit::?relay` SYMBOL "?relay", NLME_CoordinatorInit
NLME_DeviceJoiningInit SYMBOL "NLME_DeviceJoiningInit"
`??NLME_DeviceJoiningInit::?relay` SYMBOL "?relay", NLME_DeviceJoiningInit
NLME_DirectJoinRequest SYMBOL "NLME_DirectJoinRequest"
`??NLME_DirectJoinRequest::?relay` SYMBOL "?relay", NLME_DirectJoinRequest
NLME_GetCoordExtAddr SYMBOL "NLME_GetCoordExtAddr"
`??NLME_GetCoordExtAddr::?relay` SYMBOL "?relay", NLME_GetCoordExtAddr
NLME_GetCoordShortAddr SYMBOL "NLME_GetCoordShortAddr"
`??NLME_GetCoordShortAddr::?relay` SYMBOL "?relay", NLME_GetCoordShortAddr
NLME_GetExtAddr     SYMBOL "NLME_GetExtAddr"
`??NLME_GetExtAddr::?relay` SYMBOL "?relay", NLME_GetExtAddr
NLME_GetProtocolVersion SYMBOL "NLME_GetProtocolVersion"
`??NLME_GetProtocolVersion::?relay` SYMBOL "?relay", NLME_GetProtocolVersion
NLME_GetRequest     SYMBOL "NLME_GetRequest"
`??NLME_GetRequest::?relay` SYMBOL "?relay", NLME_GetRequest
NLME_GetShortAddr   SYMBOL "NLME_GetShortAddr"
`??NLME_GetShortAddr::?relay` SYMBOL "?relay", NLME_GetShortAddr
NLME_IsAddressBroadcast SYMBOL "NLME_IsAddressBroadcast"
`??NLME_IsAddressBroadcast::?relay` SYMBOL "?relay", NLME_IsAddressBroadcast
NLME_LeaveReq       SYMBOL "NLME_LeaveReq"
`??NLME_LeaveReq::?relay` SYMBOL "?relay", NLME_LeaveReq
NLME_NetworkDiscoveryRequest SYMBOL "NLME_NetworkDiscoveryRequest"
`??NLME_NetworkDiscoveryRequest::?relay` SYMBOL "?relay", NLME_NetworkDiscoveryRequest
NLME_NetworkFormationRequest SYMBOL "NLME_NetworkFormationRequest"
`??NLME_NetworkFormationRequest::?relay` SYMBOL "?relay", NLME_NetworkFormationRequest
NLME_NwkDiscReq2    SYMBOL "NLME_NwkDiscReq2"
`??NLME_NwkDiscReq2::?relay` SYMBOL "?relay", NLME_NwkDiscReq2
NLME_NwkDiscTerm    SYMBOL "NLME_NwkDiscTerm"
`??NLME_NwkDiscTerm::?relay` SYMBOL "?relay", NLME_NwkDiscTerm
NLME_OrphanJoinRequest SYMBOL "NLME_OrphanJoinRequest"
`??NLME_OrphanJoinRequest::?relay` SYMBOL "?relay", NLME_OrphanJoinRequest
NLME_PermitJoiningRequest SYMBOL "NLME_PermitJoiningRequest"
`??NLME_PermitJoiningRequest::?relay` SYMBOL "?relay", NLME_PermitJoiningRequest
NLME_SetPollRate    SYMBOL "NLME_SetPollRate"
`??NLME_SetPollRate::?relay` SYMBOL "?relay", NLME_SetPollRate
NLME_StartRouterRequest SYMBOL "NLME_StartRouterRequest"
`??NLME_StartRouterRequest::?relay` SYMBOL "?relay", NLME_StartRouterRequest
RTG_RemoveRtgEntry  SYMBOL "RTG_RemoveRtgEntry"
`??RTG_RemoveRtgEntry::?relay` SYMBOL "?relay", RTG_RemoveRtgEntry
ZDApp_GetEmptyPendingBindReq SYMBOL "ZDApp_GetEmptyPendingBindReq"
`??ZDApp_GetEmptyPendingBindReq::?relay` SYMBOL "?relay", ZDApp_GetEmptyPendingBindReq
ZDApp_NVUpdate      SYMBOL "ZDApp_NVUpdate"
`??ZDApp_NVUpdate::?relay` SYMBOL "?relay", ZDApp_NVUpdate
ZDP_BindUnbindReq   SYMBOL "ZDP_BindUnbindReq"
`??ZDP_BindUnbindReq::?relay` SYMBOL "?relay", ZDP_BindUnbindReq
ZDP_EPRsp           SYMBOL "ZDP_EPRsp"
`??ZDP_EPRsp::?relay` SYMBOL "?relay", ZDP_EPRsp
ZDP_GenericRsp      SYMBOL "ZDP_GenericRsp"
`??ZDP_GenericRsp::?relay` SYMBOL "?relay", ZDP_GenericRsp
ZDP_MgmtBindRsp     SYMBOL "ZDP_MgmtBindRsp"
`??ZDP_MgmtBindRsp::?relay` SYMBOL "?relay", ZDP_MgmtBindRsp
ZDP_MgmtLqiRsp      SYMBOL "ZDP_MgmtLqiRsp"
`??ZDP_MgmtLqiRsp::?relay` SYMBOL "?relay", ZDP_MgmtLqiRsp
ZDP_MgmtNwkDiscRsp  SYMBOL "ZDP_MgmtNwkDiscRsp"
`??ZDP_MgmtNwkDiscRsp::?relay` SYMBOL "?relay", ZDP_MgmtNwkDiscRsp
ZDP_MgmtRtgRsp      SYMBOL "ZDP_MgmtRtgRsp"
`??ZDP_MgmtRtgRsp::?relay` SYMBOL "?relay", ZDP_MgmtRtgRsp
ZDP_NodeDescMsg     SYMBOL "ZDP_NodeDescMsg"
`??ZDP_NodeDescMsg::?relay` SYMBOL "?relay", ZDP_NodeDescMsg
ZDP_NwkAddrReq      SYMBOL "ZDP_NwkAddrReq"
`??ZDP_NwkAddrReq::?relay` SYMBOL "?relay", ZDP_NwkAddrReq
ZDP_PowerDescMsg    SYMBOL "ZDP_PowerDescMsg"
`??ZDP_PowerDescMsg::?relay` SYMBOL "?relay", ZDP_PowerDescMsg
ZDP_SendData        SYMBOL "ZDP_SendData"
`??ZDP_SendData::?relay` SYMBOL "?relay", ZDP_SendData
ZDP_ServerDiscRsp   SYMBOL "ZDP_ServerDiscRsp"
`??ZDP_ServerDiscRsp::?relay` SYMBOL "?relay", ZDP_ServerDiscRsp
ZDP_SimpleDescMsg   SYMBOL "ZDP_SimpleDescMsg"
`??ZDP_SimpleDescMsg::?relay` SYMBOL "?relay", ZDP_SimpleDescMsg
ZDP_UserDescRsp     SYMBOL "ZDP_UserDescRsp"
`??ZDP_UserDescRsp::?relay` SYMBOL "?relay", ZDP_UserDescRsp
ZDSecMgrPermitJoining SYMBOL "ZDSecMgrPermitJoining"
`??ZDSecMgrPermitJoining::?relay` SYMBOL "?relay", ZDSecMgrPermitJoining
ZDSecMgrPermitJoiningTimeout SYMBOL "ZDSecMgrPermitJoiningTimeout"
`??ZDSecMgrPermitJoiningTimeout::?relay` SYMBOL "?relay", ZDSecMgrPermitJoiningTimeout
ZMacGetReq          SYMBOL "ZMacGetReq"
`??ZMacGetReq::?relay` SYMBOL "?relay", ZMacGetReq
ZMacSetReq          SYMBOL "ZMacSetReq"
`??ZMacSetReq::?relay` SYMBOL "?relay", ZMacSetReq
afEndPoints         SYMBOL "afEndPoints"
`??afEndPoints::?relay` SYMBOL "?relay", afEndPoints
afFindSimpleDesc    SYMBOL "afFindSimpleDesc"
`??afFindSimpleDesc::?relay` SYMBOL "?relay", afFindSimpleDesc
afNumEndPoints      SYMBOL "afNumEndPoints"
`??afNumEndPoints::?relay` SYMBOL "?relay", afNumEndPoints
bindAddrIndexGet    SYMBOL "bindAddrIndexGet"
`??bindAddrIndexGet::?relay` SYMBOL "?relay", bindAddrIndexGet
nwkNeighborRemoveAllStranded SYMBOL "nwkNeighborRemoveAllStranded"
`??nwkNeighborRemoveAllStranded::?relay` SYMBOL "?relay", nwkNeighborRemoveAllStranded
nwkNeighborUpdateNwkAddr SYMBOL "nwkNeighborUpdateNwkAddr"
`??nwkNeighborUpdateNwkAddr::?relay` SYMBOL "?relay", nwkNeighborUpdateNwkAddr
nwk_ScanJoiningOrphan SYMBOL "nwk_ScanJoiningOrphan"
`??nwk_ScanJoiningOrphan::?relay` SYMBOL "?relay", nwk_ScanJoiningOrphan
nwk_getNwkDescList  SYMBOL "nwk_getNwkDescList"
`??nwk_getNwkDescList::?relay` SYMBOL "?relay", nwk_getNwkDescList
osal_build_uint32   SYMBOL "osal_build_uint32"
`??osal_build_uint32::?relay` SYMBOL "?relay", osal_build_uint32
osal_mem_alloc      SYMBOL "osal_mem_alloc"
`??osal_mem_alloc::?relay` SYMBOL "?relay", osal_mem_alloc
osal_mem_free       SYMBOL "osal_mem_free"
`??osal_mem_free::?relay` SYMBOL "?relay", osal_mem_free
osal_memcpy         SYMBOL "osal_memcpy"
`??osal_memcpy::?relay` SYMBOL "?relay", osal_memcpy
osal_memset         SYMBOL "osal_memset"
`??osal_memset::?relay` SYMBOL "?relay", osal_memset
osal_msg_allocate   SYMBOL "osal_msg_allocate"
`??osal_msg_allocate::?relay` SYMBOL "?relay", osal_msg_allocate
osal_msg_find       SYMBOL "osal_msg_find"
`??osal_msg_find::?relay` SYMBOL "?relay", osal_msg_find
osal_msg_send       SYMBOL "osal_msg_send"
`??osal_msg_send::?relay` SYMBOL "?relay", osal_msg_send
osal_nv_read        SYMBOL "osal_nv_read"
`??osal_nv_read::?relay` SYMBOL "?relay", osal_nv_read
osal_nv_write       SYMBOL "osal_nv_write"
`??osal_nv_write::?relay` SYMBOL "?relay", osal_nv_write
osal_set_event      SYMBOL "osal_set_event"
`??osal_set_event::?relay` SYMBOL "?relay", osal_set_event
osal_start_timerEx  SYMBOL "osal_start_timerEx"
`??osal_start_timerEx::?relay` SYMBOL "?relay", osal_start_timerEx
sAddrExtCmp         SYMBOL "sAddrExtCmp"
`??sAddrExtCmp::?relay` SYMBOL "?relay", sAddrExtCmp
sAddrExtCpy         SYMBOL "sAddrExtCpy"
`??sAddrExtCpy::?relay` SYMBOL "?relay", sAddrExtCpy
NLME_PermitJoiningTimeout SYMBOL "NLME_PermitJoiningTimeout"
`??NLME_PermitJoiningTimeout::?relay` SYMBOL "?relay", NLME_PermitJoiningTimeout
ZDMatchSendState    SYMBOL "ZDMatchSendState"
`??ZDMatchSendState::?relay` SYMBOL "?relay", ZDMatchSendState
ZDO_AnyClusterMatches SYMBOL "ZDO_AnyClusterMatches"
`??ZDO_AnyClusterMatches::?relay` SYMBOL "?relay", ZDO_AnyClusterMatches
ZDO_BuildSimpleDescBuf SYMBOL "ZDO_BuildSimpleDescBuf"
`??ZDO_BuildSimpleDescBuf::?relay` SYMBOL "?relay", ZDO_BuildSimpleDescBuf
ZDO_ConvertOTAClusters SYMBOL "ZDO_ConvertOTAClusters"
`??ZDO_ConvertOTAClusters::?relay` SYMBOL "?relay", ZDO_ConvertOTAClusters
ZDO_EndDeviceTimeoutCB SYMBOL "ZDO_EndDeviceTimeoutCB"
`??ZDO_EndDeviceTimeoutCB::?relay` SYMBOL "?relay", ZDO_EndDeviceTimeoutCB
ZDO_FinishProcessingMgmtNwkDiscReq SYMBOL "ZDO_FinishProcessingMgmtNwkDiscReq"
`??ZDO_FinishProcessingMgmtNwkDiscReq::?relay` SYMBOL "?relay", ZDO_FinishProcessingMgmtNwkDiscReq
ZDO_Init            SYMBOL "ZDO_Init"
`??ZDO_Init::?relay` SYMBOL "?relay", ZDO_Init
ZDO_MatchEndDeviceBind SYMBOL "ZDO_MatchEndDeviceBind"
`??ZDO_MatchEndDeviceBind::?relay` SYMBOL "?relay", ZDO_MatchEndDeviceBind
ZDO_ParseAddrRsp    SYMBOL "ZDO_ParseAddrRsp"
`??ZDO_ParseAddrRsp::?relay` SYMBOL "?relay", ZDO_ParseAddrRsp
ZDO_ParseBindUnbindReq SYMBOL "ZDO_ParseBindUnbindReq"
`??ZDO_ParseBindUnbindReq::?relay` SYMBOL "?relay", ZDO_ParseBindUnbindReq
ZDO_ParseDeviceAnnce SYMBOL "ZDO_ParseDeviceAnnce"
`??ZDO_ParseDeviceAnnce::?relay` SYMBOL "?relay", ZDO_ParseDeviceAnnce
ZDO_ParseEPListRsp  SYMBOL "ZDO_ParseEPListRsp"
`??ZDO_ParseEPListRsp::?relay` SYMBOL "?relay", ZDO_ParseEPListRsp
ZDO_ParseEndDeviceBindReq SYMBOL "ZDO_ParseEndDeviceBindReq"
`??ZDO_ParseEndDeviceBindReq::?relay` SYMBOL "?relay", ZDO_ParseEndDeviceBindReq
ZDO_ParseEndDeviceTimeoutRsp SYMBOL "ZDO_ParseEndDeviceTimeoutRsp"
`??ZDO_ParseEndDeviceTimeoutRsp::?relay` SYMBOL "?relay", ZDO_ParseEndDeviceTimeoutRsp
ZDO_ParseMgmNwkDiscRsp SYMBOL "ZDO_ParseMgmNwkDiscRsp"
`??ZDO_ParseMgmNwkDiscRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmNwkDiscRsp
ZDO_ParseMgmtBindRsp SYMBOL "ZDO_ParseMgmtBindRsp"
`??ZDO_ParseMgmtBindRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmtBindRsp
ZDO_ParseMgmtLqiRsp SYMBOL "ZDO_ParseMgmtLqiRsp"
`??ZDO_ParseMgmtLqiRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmtLqiRsp
ZDO_ParseMgmtNwkUpdateNotify SYMBOL "ZDO_ParseMgmtNwkUpdateNotify"
`??ZDO_ParseMgmtNwkUpdateNotify::?relay` SYMBOL "?relay", ZDO_ParseMgmtNwkUpdateNotify
ZDO_ParseMgmtNwkUpdateReq SYMBOL "ZDO_ParseMgmtNwkUpdateReq"
`??ZDO_ParseMgmtNwkUpdateReq::?relay` SYMBOL "?relay", ZDO_ParseMgmtNwkUpdateReq
ZDO_ParseMgmtRtgRsp SYMBOL "ZDO_ParseMgmtRtgRsp"
`??ZDO_ParseMgmtRtgRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmtRtgRsp
ZDO_ParseNodeDescRsp SYMBOL "ZDO_ParseNodeDescRsp"
`??ZDO_ParseNodeDescRsp::?relay` SYMBOL "?relay", ZDO_ParseNodeDescRsp
ZDO_ParsePowerDescRsp SYMBOL "ZDO_ParsePowerDescRsp"
`??ZDO_ParsePowerDescRsp::?relay` SYMBOL "?relay", ZDO_ParsePowerDescRsp
ZDO_ParseServerDiscRsp SYMBOL "ZDO_ParseServerDiscRsp"
`??ZDO_ParseServerDiscRsp::?relay` SYMBOL "?relay", ZDO_ParseServerDiscRsp
ZDO_ParseSimpleDescBuf SYMBOL "ZDO_ParseSimpleDescBuf"
`??ZDO_ParseSimpleDescBuf::?relay` SYMBOL "?relay", ZDO_ParseSimpleDescBuf
ZDO_ParseSimpleDescRsp SYMBOL "ZDO_ParseSimpleDescRsp"
`??ZDO_ParseSimpleDescRsp::?relay` SYMBOL "?relay", ZDO_ParseSimpleDescRsp
ZDO_ParseUserDescRsp SYMBOL "ZDO_ParseUserDescRsp"
`??ZDO_ParseUserDescRsp::?relay` SYMBOL "?relay", ZDO_ParseUserDescRsp
ZDO_ProcessActiveEPReq SYMBOL "ZDO_ProcessActiveEPReq"
`??ZDO_ProcessActiveEPReq::?relay` SYMBOL "?relay", ZDO_ProcessActiveEPReq
ZDO_ProcessBindUnbindReq SYMBOL "ZDO_ProcessBindUnbindReq"
`??ZDO_ProcessBindUnbindReq::?relay` SYMBOL "?relay", ZDO_ProcessBindUnbindReq
ZDO_ProcessDeviceAnnce SYMBOL "ZDO_ProcessDeviceAnnce"
`??ZDO_ProcessDeviceAnnce::?relay` SYMBOL "?relay", ZDO_ProcessDeviceAnnce
ZDO_ProcessEndDeviceTimeoutReq SYMBOL "ZDO_ProcessEndDeviceTimeoutReq"
`??ZDO_ProcessEndDeviceTimeoutReq::?relay` SYMBOL "?relay", ZDO_ProcessEndDeviceTimeoutReq
ZDO_ProcessMatchDescReq SYMBOL "ZDO_ProcessMatchDescReq"
`??ZDO_ProcessMatchDescReq::?relay` SYMBOL "?relay", ZDO_ProcessMatchDescReq
ZDO_ProcessMgmtBindReq SYMBOL "ZDO_ProcessMgmtBindReq"
`??ZDO_ProcessMgmtBindReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtBindReq
ZDO_ProcessMgmtDirectJoinReq SYMBOL "ZDO_ProcessMgmtDirectJoinReq"
`??ZDO_ProcessMgmtDirectJoinReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtDirectJoinReq
ZDO_ProcessMgmtLeaveReq SYMBOL "ZDO_ProcessMgmtLeaveReq"
`??ZDO_ProcessMgmtLeaveReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtLeaveReq
ZDO_ProcessMgmtLqiReq SYMBOL "ZDO_ProcessMgmtLqiReq"
`??ZDO_ProcessMgmtLqiReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtLqiReq
ZDO_ProcessMgmtNwkDiscReq SYMBOL "ZDO_ProcessMgmtNwkDiscReq"
`??ZDO_ProcessMgmtNwkDiscReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtNwkDiscReq
ZDO_ProcessMgmtPermitJoinReq SYMBOL "ZDO_ProcessMgmtPermitJoinReq"
`??ZDO_ProcessMgmtPermitJoinReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtPermitJoinReq
ZDO_ProcessMgmtRtgReq SYMBOL "ZDO_ProcessMgmtRtgReq"
`??ZDO_ProcessMgmtRtgReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtRtgReq
ZDO_ProcessNodeDescReq SYMBOL "ZDO_ProcessNodeDescReq"
`??ZDO_ProcessNodeDescReq::?relay` SYMBOL "?relay", ZDO_ProcessNodeDescReq
ZDO_ProcessPowerDescReq SYMBOL "ZDO_ProcessPowerDescReq"
`??ZDO_ProcessPowerDescReq::?relay` SYMBOL "?relay", ZDO_ProcessPowerDescReq
ZDO_ProcessServerDiscReq SYMBOL "ZDO_ProcessServerDiscReq"
`??ZDO_ProcessServerDiscReq::?relay` SYMBOL "?relay", ZDO_ProcessServerDiscReq
ZDO_ProcessSimpleDescReq SYMBOL "ZDO_ProcessSimpleDescReq"
`??ZDO_ProcessSimpleDescReq::?relay` SYMBOL "?relay", ZDO_ProcessSimpleDescReq
ZDO_ProcessUserDescReq SYMBOL "ZDO_ProcessUserDescReq"
`??ZDO_ProcessUserDescReq::?relay` SYMBOL "?relay", ZDO_ProcessUserDescReq
ZDO_ProcessUserDescSet SYMBOL "ZDO_ProcessUserDescSet"
`??ZDO_ProcessUserDescSet::?relay` SYMBOL "?relay", ZDO_ProcessUserDescSet
ZDO_StartDevice     SYMBOL "ZDO_StartDevice"
`??ZDO_StartDevice::?relay` SYMBOL "?relay", ZDO_StartDevice
ZDO_UpdateAddrManager SYMBOL "ZDO_UpdateAddrManager"
`??ZDO_UpdateAddrManager::?relay` SYMBOL "?relay", ZDO_UpdateAddrManager
ZDO_UpdateNwkStatus SYMBOL "ZDO_UpdateNwkStatus"
`??ZDO_UpdateNwkStatus::?relay` SYMBOL "?relay", ZDO_UpdateNwkStatus

        EXTERN `??APSME_BindRequest::?relay`
        FUNCTION `??APSME_BindRequest::?relay`,00H
        EXTERN `??APSME_GetRequest::?relay`
        FUNCTION `??APSME_GetRequest::?relay`,00H
        EXTERN `??APSME_LookupNwkAddr::?relay`
        FUNCTION `??APSME_LookupNwkAddr::?relay`,00H
        EXTERN `??APSME_UnBindRequest::?relay`
        FUNCTION `??APSME_UnBindRequest::?relay`,00H
        EXTERN `??APS_ReflectorInit::?relay`
        FUNCTION `??APS_ReflectorInit::?relay`,00H
        EXTERN `??APS_SetEndDeviceBindTimeout::?relay`
        FUNCTION `??APS_SetEndDeviceBindTimeout::?relay`,00H
        EXTERN `??AddrMgrEntryLookupExt::?relay`
        FUNCTION `??AddrMgrEntryLookupExt::?relay`,00H
        EXTERN `??AddrMgrEntryLookupNwk::?relay`
        FUNCTION `??AddrMgrEntryLookupNwk::?relay`,00H
        EXTERN `??AddrMgrEntryUpdate::?relay`
        FUNCTION `??AddrMgrEntryUpdate::?relay`,00H
        EXTERN `??AddrMgrExtAddrSet::?relay`
        FUNCTION `??AddrMgrExtAddrSet::?relay`,00H
        EXTERN `??AddrMgrExtAddrValid::?relay`
        FUNCTION `??AddrMgrExtAddrValid::?relay`,00H
        EXTERN `??AssocChangeNwkAddr::?relay`
        FUNCTION `??AssocChangeNwkAddr::?relay`,00H
        EXTERN `??AssocCount::?relay`
        FUNCTION `??AssocCount::?relay`,00H
        EXTERN `??AssocFindDevice::?relay`
        FUNCTION `??AssocFindDevice::?relay`,00H
        EXTERN `??AssocGetWithExt::?relay`
        FUNCTION `??AssocGetWithExt::?relay`,00H
        EXTERN `??AssocRemove::?relay`
        FUNCTION `??AssocRemove::?relay`,00H
        EXTERN `??NLME_CheckNewAddrSet::?relay`
        FUNCTION `??NLME_CheckNewAddrSet::?relay`,00H
        EXTERN `??NLME_CoordinatorInit::?relay`
        FUNCTION `??NLME_CoordinatorInit::?relay`,00H
        EXTERN `??NLME_DeviceJoiningInit::?relay`
        FUNCTION `??NLME_DeviceJoiningInit::?relay`,00H
        EXTERN `??NLME_DirectJoinRequest::?relay`
        FUNCTION `??NLME_DirectJoinRequest::?relay`,00H
        EXTERN `??NLME_GetCoordExtAddr::?relay`
        FUNCTION `??NLME_GetCoordExtAddr::?relay`,00H
        EXTERN `??NLME_GetCoordShortAddr::?relay`
        FUNCTION `??NLME_GetCoordShortAddr::?relay`,00H
        EXTERN `??NLME_GetExtAddr::?relay`
        FUNCTION `??NLME_GetExtAddr::?relay`,00H
        EXTERN `??NLME_GetProtocolVersion::?relay`
        FUNCTION `??NLME_GetProtocolVersion::?relay`,00H
        EXTERN `??NLME_GetRequest::?relay`
        FUNCTION `??NLME_GetRequest::?relay`,00H
        EXTERN `??NLME_GetShortAddr::?relay`
        FUNCTION `??NLME_GetShortAddr::?relay`,00H
        EXTERN `??NLME_IsAddressBroadcast::?relay`
        FUNCTION `??NLME_IsAddressBroadcast::?relay`,00H
        EXTERN `??NLME_LeaveReq::?relay`
        FUNCTION `??NLME_LeaveReq::?relay`,00H
        EXTERN `??NLME_NetworkDiscoveryRequest::?relay`
        FUNCTION `??NLME_NetworkDiscoveryRequest::?relay`,00H
        EXTERN `??NLME_NetworkFormationRequest::?relay`
        FUNCTION `??NLME_NetworkFormationRequest::?relay`,00H
        EXTERN `??NLME_NwkDiscReq2::?relay`
        FUNCTION `??NLME_NwkDiscReq2::?relay`,00H
        EXTERN `??NLME_NwkDiscTerm::?relay`
        FUNCTION `??NLME_NwkDiscTerm::?relay`,00H
        EXTERN `??NLME_OrphanJoinRequest::?relay`
        FUNCTION `??NLME_OrphanJoinRequest::?relay`,00H
        EXTERN `??NLME_PermitJoiningRequest::?relay`
        FUNCTION `??NLME_PermitJoiningRequest::?relay`,00H
        EXTERN `??NLME_SetPollRate::?relay`
        FUNCTION `??NLME_SetPollRate::?relay`,00H
        EXTERN `??NLME_StartRouterRequest::?relay`
        FUNCTION `??NLME_StartRouterRequest::?relay`,00H
        EXTERN `??RTG_RemoveRtgEntry::?relay`
        FUNCTION `??RTG_RemoveRtgEntry::?relay`,00H
        EXTERN `??ZDApp_GetEmptyPendingBindReq::?relay`
        FUNCTION `??ZDApp_GetEmptyPendingBindReq::?relay`,00H
        EXTERN `??ZDApp_NVUpdate::?relay`
        FUNCTION `??ZDApp_NVUpdate::?relay`,00H
        EXTERN `??ZDP_BindUnbindReq::?relay`
        FUNCTION `??ZDP_BindUnbindReq::?relay`,00H
        EXTERN `??ZDP_EPRsp::?relay`
        FUNCTION `??ZDP_EPRsp::?relay`,00H
        EXTERN `??ZDP_GenericRsp::?relay`
        FUNCTION `??ZDP_GenericRsp::?relay`,00H
        EXTERN `??ZDP_MgmtBindRsp::?relay`
        FUNCTION `??ZDP_MgmtBindRsp::?relay`,00H
        EXTERN `??ZDP_MgmtLqiRsp::?relay`
        FUNCTION `??ZDP_MgmtLqiRsp::?relay`,00H
        EXTERN `??ZDP_MgmtNwkDiscRsp::?relay`
        FUNCTION `??ZDP_MgmtNwkDiscRsp::?relay`,00H
        EXTERN `??ZDP_MgmtRtgRsp::?relay`
        FUNCTION `??ZDP_MgmtRtgRsp::?relay`,00H
        EXTERN `??ZDP_NodeDescMsg::?relay`
        FUNCTION `??ZDP_NodeDescMsg::?relay`,00H
        EXTERN `??ZDP_NwkAddrReq::?relay`
        FUNCTION `??ZDP_NwkAddrReq::?relay`,00H
        EXTERN `??ZDP_PowerDescMsg::?relay`
        FUNCTION `??ZDP_PowerDescMsg::?relay`,00H
        EXTERN `??ZDP_SendData::?relay`
        FUNCTION `??ZDP_SendData::?relay`,00H
        EXTERN `??ZDP_ServerDiscRsp::?relay`
        FUNCTION `??ZDP_ServerDiscRsp::?relay`,00H
        EXTERN `??ZDP_SimpleDescMsg::?relay`
        FUNCTION `??ZDP_SimpleDescMsg::?relay`,00H
        EXTERN `??ZDP_UserDescRsp::?relay`
        FUNCTION `??ZDP_UserDescRsp::?relay`,00H
        EXTERN `??ZDSecMgrPermitJoining::?relay`
        FUNCTION `??ZDSecMgrPermitJoining::?relay`,00H
        EXTERN `??ZDSecMgrPermitJoiningTimeout::?relay`
        FUNCTION `??ZDSecMgrPermitJoiningTimeout::?relay`,00H
        EXTERN `??ZMacGetReq::?relay`
        FUNCTION `??ZMacGetReq::?relay`,00H
        EXTERN `??ZMacSetReq::?relay`
        FUNCTION `??ZMacSetReq::?relay`,00H
        EXTERN `??afEndPoints::?relay`
        FUNCTION `??afEndPoints::?relay`,00H
        EXTERN `??afFindSimpleDesc::?relay`
        FUNCTION `??afFindSimpleDesc::?relay`,00H
        EXTERN `??afNumEndPoints::?relay`
        FUNCTION `??afNumEndPoints::?relay`,00H
        EXTERN `??bindAddrIndexGet::?relay`
        FUNCTION `??bindAddrIndexGet::?relay`,00H
        EXTERN `??nwkNeighborRemoveAllStranded::?relay`
        FUNCTION `??nwkNeighborRemoveAllStranded::?relay`,00H
        EXTERN `??nwkNeighborUpdateNwkAddr::?relay`
        FUNCTION `??nwkNeighborUpdateNwkAddr::?relay`,00H
        EXTERN `??nwk_ScanJoiningOrphan::?relay`
        FUNCTION `??nwk_ScanJoiningOrphan::?relay`,00H
        EXTERN `??nwk_getNwkDescList::?relay`
        FUNCTION `??nwk_getNwkDescList::?relay`,00H
        EXTERN `??osal_build_uint32::?relay`
        FUNCTION `??osal_build_uint32::?relay`,00H
        EXTERN `??osal_mem_alloc::?relay`
        FUNCTION `??osal_mem_alloc::?relay`,00H
        EXTERN `??osal_mem_free::?relay`
        FUNCTION `??osal_mem_free::?relay`,00H
        EXTERN `??osal_memcpy::?relay`
        FUNCTION `??osal_memcpy::?relay`,00H
        EXTERN `??osal_memset::?relay`
        FUNCTION `??osal_memset::?relay`,00H
        EXTERN `??osal_msg_allocate::?relay`
        FUNCTION `??osal_msg_allocate::?relay`,00H
        EXTERN `??osal_msg_find::?relay`
        FUNCTION `??osal_msg_find::?relay`,00H
        EXTERN `??osal_msg_send::?relay`
        FUNCTION `??osal_msg_send::?relay`,00H
        EXTERN `??osal_nv_read::?relay`
        FUNCTION `??osal_nv_read::?relay`,00H
        EXTERN `??osal_nv_write::?relay`
        FUNCTION `??osal_nv_write::?relay`,00H
        EXTERN `??osal_set_event::?relay`
        FUNCTION `??osal_set_event::?relay`,00H
        EXTERN `??osal_start_timerEx::?relay`
        FUNCTION `??osal_start_timerEx::?relay`,00H
        EXTERN `??sAddrExtCmp::?relay`
        FUNCTION `??sAddrExtCmp::?relay`,00H
        EXTERN `??sAddrExtCpy::?relay`
        FUNCTION `??sAddrExtCpy::?relay`,00H
        EXTERN AIB_MaxBindingTime
        EXTERN AIB_apsUseExtendedPANID
        EXTERN APSME_BindRequest
        FUNCTION APSME_BindRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_GetRequest
        FUNCTION APSME_GetRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_LookupNwkAddr
        FUNCTION APSME_LookupNwkAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_UnBindRequest
        FUNCTION APSME_UnBindRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APS_ReflectorInit
        FUNCTION APS_ReflectorInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APS_SetEndDeviceBindTimeout
        FUNCTION APS_SetEndDeviceBindTimeout,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryLookupExt
        FUNCTION AddrMgrEntryLookupExt,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryLookupNwk
        FUNCTION AddrMgrEntryLookupNwk,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryUpdate
        FUNCTION AddrMgrEntryUpdate,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrExtAddrSet
        FUNCTION AddrMgrExtAddrSet,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrExtAddrValid
        FUNCTION AddrMgrExtAddrValid,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocChangeNwkAddr
        FUNCTION AssocChangeNwkAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocCount
        FUNCTION AssocCount,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocFindDevice
        FUNCTION AssocFindDevice,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocGetWithExt
        FUNCTION AssocGetWithExt,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocRemove
        FUNCTION AssocRemove,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MT_TaskID
        EXTERN NLME_CheckNewAddrSet
        FUNCTION NLME_CheckNewAddrSet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_CoordinatorInit
        FUNCTION NLME_CoordinatorInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_DeviceJoiningInit
        FUNCTION NLME_DeviceJoiningInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_DirectJoinRequest
        FUNCTION NLME_DirectJoinRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetCoordExtAddr
        FUNCTION NLME_GetCoordExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetCoordShortAddr
        FUNCTION NLME_GetCoordShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetExtAddr
        FUNCTION NLME_GetExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetProtocolVersion
        FUNCTION NLME_GetProtocolVersion,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetRequest
        FUNCTION NLME_GetRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetShortAddr
        FUNCTION NLME_GetShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_IsAddressBroadcast
        FUNCTION NLME_IsAddressBroadcast,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_LeaveReq
        FUNCTION NLME_LeaveReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NetworkDiscoveryRequest
        FUNCTION NLME_NetworkDiscoveryRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NetworkFormationRequest
        FUNCTION NLME_NetworkFormationRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NwkDiscReq2
        FUNCTION NLME_NwkDiscReq2,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NwkDiscTerm
        FUNCTION NLME_NwkDiscTerm,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_OrphanJoinRequest
        FUNCTION NLME_OrphanJoinRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_PermitJoiningRequest
        FUNCTION NLME_PermitJoiningRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_SetPollRate
        FUNCTION NLME_SetPollRate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_StartRouterRequest
        FUNCTION NLME_StartRouterRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN RTG_RemoveRtgEntry
        FUNCTION RTG_RemoveRtgEntry,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDAppNwkAddr
        EXTERN ZDAppTaskID
        EXTERN ZDApp_GetEmptyPendingBindReq
        FUNCTION ZDApp_GetEmptyPendingBindReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDApp_NVUpdate
        FUNCTION ZDApp_NVUpdate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDO_Config_Node_Descriptor
        EXTERN ZDO_Config_Power_Descriptor
        EXTERN ZDO_UseExtendedPANID
        EXTERN ZDP_BindUnbindReq
        FUNCTION ZDP_BindUnbindReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 45, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_EPRsp
        FUNCTION ZDP_EPRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_GenericRsp
        FUNCTION ZDP_GenericRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtBindRsp
        FUNCTION ZDP_MgmtBindRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtLqiRsp
        FUNCTION ZDP_MgmtLqiRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 64, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtNwkDiscRsp
        FUNCTION ZDP_MgmtNwkDiscRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtRtgRsp
        FUNCTION ZDP_MgmtRtgRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_NodeDescMsg
        FUNCTION ZDP_NodeDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_NwkAddrReq
        FUNCTION ZDP_NwkAddrReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_PowerDescMsg
        FUNCTION ZDP_PowerDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_SendData
        FUNCTION ZDP_SendData,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_ServerDiscRsp
        FUNCTION ZDP_ServerDiscRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_SimpleDescMsg
        FUNCTION ZDP_SimpleDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_TransID
        EXTERN ZDP_UserDescRsp
        FUNCTION ZDP_UserDescRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDSecMgrPermitJoining
        FUNCTION ZDSecMgrPermitJoining,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDSecMgrPermitJoiningTimeout
        FUNCTION ZDSecMgrPermitJoiningTimeout,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZMacGetReq
        FUNCTION ZMacGetReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZMacSetReq
        FUNCTION ZMacSetReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN _NIB
        EXTERN afEndPoints
        FUNCTION afEndPoints,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afFindSimpleDesc
        FUNCTION afFindSimpleDesc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afNumEndPoints
        FUNCTION afNumEndPoints,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN bindAddrIndexGet
        FUNCTION bindAddrIndexGet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN devState
        EXTERN epList
        EXTERN nwkNeighborRemoveAllStranded
        FUNCTION nwkNeighborRemoveAllStranded,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nwkNeighborUpdateNwkAddr
        FUNCTION nwkNeighborUpdateNwkAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nwk_ScanJoiningOrphan
        FUNCTION nwk_ScanJoiningOrphan,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nwk_getNwkDescList
        FUNCTION nwk_getNwkDescList,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_build_uint32
        FUNCTION osal_build_uint32,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memset
        FUNCTION osal_memset,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_allocate
        FUNCTION osal_msg_allocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_find
        FUNCTION osal_msg_find,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_send
        FUNCTION osal_msg_send,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_read
        FUNCTION osal_nv_read,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_write
        FUNCTION osal_nv_write,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_set_event
        FUNCTION osal_set_event,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN pNwkNotMyChildListDelete
        EXTERN sAddrExtCmp
        FUNCTION sAddrExtCmp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCpy
        FUNCTION sAddrExtCpy,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zdappMgmtNwkDiscReqInProgress
        EXTERN zdappMgmtNwkDiscRspAddr
        EXTERN zdappMgmtNwkDiscRspTransSeq
        EXTERN zdappMgmtNwkDiscStartIndex
        EXTERN zgApsUseExtendedPANID
        EXTERN zgChildAgingEnable
        EXTERN zgConfigPANID
        EXTERN zgDefaultChannelList
        EXTERN zgDefaultStartingScanDuration
        EXTERN zgDeviceLogicalType
        EXTERN zgStackProfile

// D:\1.embedded\kit\cc2530\Reference\Z-Stack Mesh 1.0.0\Components\stack\zdo\ZDObject.c
//    1 /**************************************************************************************************
//    2   Filename:       ZDObject.c
//    3   Revised:        $Date: 2014-08-04 18:42:36 -0700 (Mon, 04 Aug 2014) $
//    4   Revision:       $Revision: 39656 $
//    5 
//    6   Description:    This is the Zigbee Device Object.
//    7 
//    8 
//    9   Copyright 2004-2014 Texas Instruments Incorporated. All rights reserved.
//   10 
//   11   IMPORTANT: Your use of this Software is limited to those specific rights
//   12   granted under the terms of a software license agreement between the user
//   13   who downloaded the software, his/her employer (which must be your employer)
//   14   and Texas Instruments Incorporated (the "License"). You may not use this
//   15   Software unless you agree to abide by the terms of the License. The License
//   16   limits your use, and you acknowledge, that the Software may not be modified,
//   17   copied or distributed unless embedded on a Texas Instruments microcontroller
//   18   or used solely and exclusively in conjunction with a Texas Instruments radio
//   19   frequency transceiver, which is integrated into your product. Other than for
//   20   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   21   works of, modify, distribute, perform, display or sell this Software and/or
//   22   its documentation for any purpose.
//   23 
//   24   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   25   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   26   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   27   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   28   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   29   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   30   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   31   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   32   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   33   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   34   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   35 
//   36   Should you have any questions regarding your right to use this Software,
//   37   contact Texas Instruments Incorporated at www.TI.com.
//   38 **************************************************************************************************/
//   39 
//   40 /*********************************************************************
//   41  * INCLUDES
//   42  */
//   43 #include "ZComDef.h"
//   44 #include "OSAL.h"
//   45 #include "OSAL_Nv.h"
//   46 #include "rtg.h"
//   47 #include "NLMEDE.h"
//   48 #include "nwk_globals.h"
//   49 #include "APS.h"
//   50 #include "APSMEDE.h"
//   51 #include "AssocList.h"
//   52 #include "BindingTable.h"
//   53 #include "AddrMgr.h"
//   54 #include "AF.h"
//   55 #include "ZDObject.h"
//   56 #include "ZDProfile.h"
//   57 #include "ZDConfig.h"
//   58 #include "ZDSecMgr.h"
//   59 #include "ZDApp.h"
//   60 #include "nwk_util.h"   // NLME_IsAddressBroadcast()
//   61 #include "ZGlobals.h"
//   62 #if defined MT_ZDO_CB_FUNC
//   63 #include "MT.h"
//   64 #endif
//   65 
//   66 #if defined( LCD_SUPPORTED )
//   67   #include "OnBoard.h"
//   68 #endif
//   69 
//   70 /* HAL */
//   71 #include "hal_lcd.h"
//   72 
//   73 /*********************************************************************
//   74  * MACROS
//   75  */
//   76 
//   77 /*********************************************************************
//   78  * CONSTANTS
//   79  */
//   80 // NLME Stub Implementations
//   81 #define ZDO_ProcessMgmtPermitJoinTimeout NLME_PermitJoiningTimeout
//   82 
//   83 /*********************************************************************
//   84  * TYPEDEFS
//   85  */
//   86 #if defined ( REFLECTOR )
//   87 typedef struct
//   88 {
//   89   byte SrcTransSeq;
//   90   zAddrType_t SrcAddr;
//   91   uint16 LocalCoordinator;
//   92   byte epIntf;
//   93   uint16 ProfileID;
//   94   byte numInClusters;
//   95   uint16 *inClusters;
//   96   byte numOutClusters;
//   97   uint16 *outClusters;
//   98   byte SecurityUse;
//   99   byte status;
//  100 } ZDO_EDBind_t;
//  101 #endif // defined ( REFLECTOR )
//  102 
//  103 enum
//  104 {
//  105   ZDMATCH_INIT,           // Initialized
//  106   ZDMATCH_WAIT_REQ,       // Received first request, waiting for second
//  107   ZDMATCH_SENDING_BINDS   // Received both requests, sending unbind/binds
//  108 };
//  109 
//  110 enum
//  111 {
//  112   ZDMATCH_SENDING_NOT,
//  113   ZDMATCH_SENDING_UNBIND,
//  114   ZDMATCH_SENDING_BIND
//  115 };
//  116 
//  117 /*********************************************************************
//  118  * GLOBAL VARIABLES
//  119  */
//  120 
//  121 /*********************************************************************
//  122  * EXTERNAL VARIABLES
//  123  */
//  124 
//  125 /*********************************************************************
//  126  * EXTERNAL FUNCTIONS
//  127  */
//  128 
//  129 /*********************************************************************
//  130  * LOCAL VARIABLES
//  131  */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  132 static uint16 ZDOBuildBuf[26];  // temp area to build data without allocation
ZDOBuildBuf:
        DS 52
        REQUIRE __INIT_XDATA_Z
//  133 
//  134 #if defined ( REFLECTOR )

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  135 static ZDO_EDBind_t *ZDO_EDBind;     // Null when not used
ZDO_EDBind:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  136 #endif
//  137 
//  138 #if defined ( MANAGED_SCAN )
//  139   uint32 managedScanNextChannel = 0;
//  140   uint32 managedScanChannelMask = 0;
//  141   uint8  managedScanTimesPerChannel = 0;
//  142 #endif
//  143 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  144 ZDMatchEndDeviceBind_t *matchED = (ZDMatchEndDeviceBind_t *)NULL;
matchED:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  145 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
//  146 uint32 apsChannelMask = 0;
apsChannelMask:
        DS 4
        REQUIRE __INIT_XDATA_Z
//  147 

        RSEG XDATA_I:XDATA:NOROOT(0)
//  148 int16 zdpExternalStateTaskID = -1;
zdpExternalStateTaskID:
        DATA16
        DS 2
        REQUIRE `?<Initializer for zdpExternalStateTaskID>`
        REQUIRE __INIT_XDATA_I
//  149 
//  150 /*********************************************************************
//  151  * LOCAL FUNCTIONS
//  152  */
//  153 static void ZDODeviceSetup( void );
//  154 #if defined ( MANAGED_SCAN )
//  155   static void ZDOManagedScan_Next( void );
//  156 #endif
//  157 #if defined ( REFLECTOR )
//  158   static void ZDO_RemoveEndDeviceBind( void );
//  159   static void ZDO_SendEDBindRsp( byte TransSeq, zAddrType_t *dstAddr, byte Status, byte secUse );
//  160 #endif
//  161 #if ( ZG_BUILD_COORDINATOR_TYPE )
//  162   static byte ZDO_CompareClusterLists( byte numList1, uint16 *list1,
//  163                                        byte numList2, uint16 *list2, uint16 *pMatches );
//  164   static void ZDO_RemoveMatchMemory( void );
//  165   static uint8 ZDO_CopyMatchInfo( ZDEndDeviceBind_t *destReq, ZDEndDeviceBind_t *srcReq );
//  166   static void ZDO_EndDeviceBindMatchTimeoutCB( void );
//  167 #endif
//  168 uint8 *ZDO_ConvertOTAClusters( uint8 cnt, uint8 *inBuf, uint16 *outList );
//  169 static void zdoSendStateChangeMsg(uint8 state, uint8 taskId);
//  170 
//  171 /*********************************************************************
//  172  * @fn          ZDO_Init
//  173  *
//  174  * @brief       ZDObject and ZDProfile initialization.
//  175  *
//  176  * @param       none
//  177  *
//  178  * @return      none
//  179  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  180 void ZDO_Init( void )
ZDO_Init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function ZDO_Init
        CODE
//  181 {
        FUNCALL ZDO_Init, sAddrExtCpy
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_Init, NLME_CoordinatorInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_Init, APS_ReflectorInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_Init, NLME_DeviceJoiningInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  182   // Initialize ZD items
//  183   #if defined ( REFLECTOR )
//  184   ZDO_EDBind = NULL;
        MOV     DPTR,#ZDO_EDBind
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  185   #endif
//  186 
//  187   // Initialize default ZDO_UseExtendedPANID to the APS one.
//  188   osal_cpyExtAddr( ZDO_UseExtendedPANID, AIB_apsUseExtendedPANID );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,#AIB_apsUseExtendedPANID & 0xff
        MOV     R5,#(AIB_apsUseExtendedPANID >> 8) & 0xff
        MOV     R2,#ZDO_UseExtendedPANID & 0xff
        MOV     R3,#(ZDO_UseExtendedPANID >> 8) & 0xff
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
//  189 
//  190   // Setup the device - type of device to create.
//  191   ZDODeviceSetup();
        ; Setup parameters for call to function NLME_CoordinatorInit
        LCALL   `??NLME_CoordinatorInit::?relay`; Banked call to: NLME_CoordinatorInit
        ; Setup parameters for call to function APS_ReflectorInit
        LCALL   `??APS_ReflectorInit::?relay`; Banked call to: APS_ReflectorInit
        ; Setup parameters for call to function NLME_DeviceJoiningInit
        LCALL   `??NLME_DeviceJoiningInit::?relay`; Banked call to: NLME_DeviceJoiningInit
//  192 }
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock0
//  193 
//  194 #if defined ( MANAGED_SCAN )
//  195 /*********************************************************************
//  196  * @fn      ZDOManagedScan_Next()
//  197  *
//  198  * @brief   Setup a managed scan.
//  199  *
//  200  * @param   none
//  201  *
//  202  * @return  none
//  203  */
//  204 static void ZDOManagedScan_Next( void )
//  205 {
//  206   // Is it the first time
//  207   if ( managedScanNextChannel == 0 && managedScanTimesPerChannel == 0 )
//  208   {
//  209     // Setup the defaults
//  210     managedScanNextChannel  = 1;
//  211 
//  212     while( managedScanNextChannel && (zgDefaultChannelList & managedScanNextChannel) == 0 )
//  213       managedScanNextChannel <<= 1;
//  214 
//  215     managedScanChannelMask = managedScanNextChannel;
//  216     managedScanTimesPerChannel = MANAGEDSCAN_TIMES_PRE_CHANNEL;
//  217   }
//  218   else
//  219   {
//  220     // Do we need to go to the next channel
//  221     if ( managedScanTimesPerChannel == 0 )
//  222     {
//  223       // Find next active channel
//  224       managedScanChannelMask  = managedScanNextChannel;
//  225       managedScanTimesPerChannel = MANAGEDSCAN_TIMES_PRE_CHANNEL;
//  226     }
//  227     else
//  228     {
//  229       managedScanTimesPerChannel--;
//  230 
//  231       if ( managedScanTimesPerChannel == 0 )
//  232       {
//  233         managedScanNextChannel  <<= 1;
//  234         while( managedScanNextChannel && (zgDefaultChannelList & managedScanNextChannel) == 0 )
//  235           managedScanNextChannel <<= 1;
//  236 
//  237         if ( managedScanNextChannel == 0 )
//  238           zdoDiscCounter  = NUM_DISC_ATTEMPTS + 1; // Stop
//  239       }
//  240     }
//  241   }
//  242 }
//  243 #endif // MANAGED_SCAN
//  244 
//  245 /*********************************************************************
//  246  * @fn      ZDODeviceSetup()
//  247  *
//  248  * @brief   Call set functions depending on the type of device compiled.
//  249  *
//  250  * @param   none
//  251  *
//  252  * @return  none
//  253  */
//  254 static void ZDODeviceSetup( void )
//  255 {
//  256   if ( ZG_BUILD_COORDINATOR_TYPE )
//  257   {
//  258     NLME_CoordinatorInit();
//  259   }
//  260 
//  261 #if defined ( REFLECTOR )
//  262   APS_ReflectorInit();
//  263 #endif
//  264 
//  265   if ( ZG_BUILD_JOINING_TYPE )
//  266   {
//  267     NLME_DeviceJoiningInit();
//  268   }
//  269 }
//  270 
//  271 /*********************************************************************
//  272  * @fn          ZDO_StartDevice
//  273  *
//  274  * @brief       This function starts a device in a network.
//  275  *
//  276  * @param       logicalType     - Device type to start
//  277  *              startMode       - indicates mode of device startup
//  278  *              beaconOrder     - indicates time betwen beacons
//  279  *              superframeOrder - indicates length of active superframe
//  280  *
//  281  * @return      none
//  282  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  283 void ZDO_StartDevice( byte logicalType, devStartModes_t startMode, byte beaconOrder, byte superframeOrder )
ZDO_StartDevice:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function ZDO_StartDevice
        CODE
//  284 {
        FUNCALL ZDO_StartDevice, NLME_NetworkFormationRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, NLME_StartRouterRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, NLME_NetworkDiscoveryRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, nwk_ScanJoiningOrphan
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, NLME_OrphanJoinRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        MOV     A,#-0xd
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
        ; Saved register size: 13
        ; Auto size: 11
        MOV     A,#-0xb
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V1,R1
        MOV     ?V0,R2
        MOV     ?V2,R3
//  285   ZStatus_t ret;
//  286 #if defined ( ZIGBEE_FREQ_AGILITY )
//  287   static uint8 discRetries = 0;
//  288 #endif
//  289 #if defined ( ZIGBEE_COMMISSIONING )
//  290   static uint8 scanCnt = 0;
//  291 #endif
//  292 
//  293   ret = ZUnsupportedMode;
//  294 
//  295   if ( ZG_BUILD_COORDINATOR_TYPE && logicalType == NODETYPE_COORDINATOR )
        MOV     A,R1
        JNZ     ??ZDO_StartDevice_0
//  296   {
//  297     if ( startMode == MODE_HARD )
        MOV     A,#0x2
        XRL     A,?V0
        JNZ     ??ZDO_StartDevice_1
//  298     {
//  299       devState = DEV_COORD_STARTING;
        MOV     DPTR,#devState
        MOV     A,#0x8
        MOVX    @DPTR,A
//  300       ret = NLME_NetworkFormationRequest( zgConfigPANID, zgApsUseExtendedPANID, zgDefaultChannelList,
//  301                                           zgDefaultStartingScanDuration, beaconOrder,
//  302                                           superframeOrder, false );
        ; Setup parameters for call to function NLME_NetworkFormationRequest
        MOV     ?V4,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     A,R4
        MOV     ?V4,A
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,R3
        MOV     ?V4,A
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     DPTR,#zgDefaultChannelList
        LCALL   ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     DPTR,#zgDefaultStartingScanDuration
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     R4,#zgApsUseExtendedPANID & 0xff
        MOV     R5,#(zgApsUseExtendedPANID >> 8) & 0xff
        MOV     DPTR,#zgConfigPANID
        LCALL   ??Subroutine241_0 & 0xFFFF
//  303     }
??CrossCallReturnLabel_479:
        LCALL   `??NLME_NetworkFormationRequest::?relay`; Banked call to: NLME_NetworkFormationRequest
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        LJMP    ??ZDO_StartDevice_2 & 0xFFFF
//  304     else if ( startMode == MODE_RESUME )
??ZDO_StartDevice_1:
        MOV     A,#0x1
        XRL     A,?V0
        JZ      $+5
        LJMP    ??ZDO_StartDevice_3 & 0xFFFF
//  305     {
//  306       // Just start the coordinator
//  307       devState = DEV_COORD_STARTING;
        MOV     DPTR,#devState
        MOV     A,#0x8
        MOVX    @DPTR,A
//  308       ret = NLME_StartRouterRequest( beaconOrder, beaconOrder, false );
        ; Setup parameters for call to function NLME_StartRouterRequest
        MOV     R3,#0x0
        MOV     R2,?V2
        MOV     R1,?V2
        LCALL   `??NLME_StartRouterRequest::?relay`; Banked call to: NLME_StartRouterRequest
        LJMP    ??ZDO_StartDevice_2 & 0xFFFF
//  309     }
//  310     else
//  311     {
//  312 #if defined( LCD_SUPPORTED )
//  313       HalLcdWriteScreen( "StartDevice ERR", "MODE unknown" );
//  314 #endif
//  315     }
//  316   }
//  317 
//  318   if ( ZG_BUILD_JOINING_TYPE && (logicalType == NODETYPE_ROUTER || logicalType == NODETYPE_DEVICE) )
??ZDO_StartDevice_0:
        MOV     A,#0x1
        XRL     A,?V1
        JZ      ??ZDO_StartDevice_4
        MOV     A,#0x2
        XRL     A,?V1
        JZ      $+5
        LJMP    ??ZDO_StartDevice_3 & 0xFFFF
//  319   {
//  320     if ( (startMode == MODE_JOIN) || (startMode == MODE_REJOIN) )
??ZDO_StartDevice_4:
        MOV     A,R2
        JZ      ??ZDO_StartDevice_5
        MOV     A,#0x3
        XRL     A,?V0
        JNZ     ??ZDO_StartDevice_6
//  321     {
//  322       devState = DEV_NWK_DISC;
??ZDO_StartDevice_5:
        MOV     DPTR,#devState
        MOV     A,#0x2
        LCALL   ?Subroutine48 & 0xFFFF
//  323 
//  324   #if defined( MANAGED_SCAN )
//  325       ZDOManagedScan_Next();
//  326       ret = NLME_NetworkDiscoveryRequest( managedScanChannelMask, BEACON_ORDER_15_MSEC );
//  327   #else
//  328       ret = NLME_NetworkDiscoveryRequest( zgDefaultChannelList, zgDefaultStartingScanDuration );
??CrossCallReturnLabel_74:
        LCALL   ?XLOAD_R2345
        LCALL   `??NLME_NetworkDiscoveryRequest::?relay`; Banked call to: NLME_NetworkDiscoveryRequest
        MOV     A,R1
        MOV     R1,A
//  329     #if defined ( ZIGBEE_FREQ_AGILITY )
//  330       if ( !( ZDO_Config_Node_Descriptor.CapabilityFlags & CAPINFO_RCVR_ON_IDLE ) &&
//  331             ( ret == ZSuccess ) && ( ++discRetries == 4 ) )
        MOV     DPTR,#ZDO_Config_Node_Descriptor + 2
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.3
        JC      ??CrossCallReturnLabel_29
        MOV     A,R1
        JNZ     ??CrossCallReturnLabel_29
        MOV     DPTR,#??discRetries
        MOVX    A,@DPTR
        INC     A
        MOVX    @DPTR,A
        XRL     A,#0x4
        JNZ     ??CrossCallReturnLabel_29
//  332       {
//  333         // For devices with RxOnWhenIdle equals to FALSE, any network channel
//  334         // change will not be recieved. On these devices or routers that have
//  335         // lost the network, an active scan shall be conducted on the Default
//  336         // Channel list using the extended PANID to find the network. If the
//  337         // extended PANID isn't found using the Default Channel list, an scan
//  338         // should be completed using all channels.
//  339         zgDefaultChannelList = MAX_CHANNELS_24GHZ;
        LCALL   ?Subroutine26 & 0xFFFF
//  340       }
//  341     #endif // ZIGBEE_FREQ_AGILITY
//  342     #if defined ( ZIGBEE_COMMISSIONING )
//  343       if (startMode == MODE_REJOIN && scanCnt++ >= 5 )
??CrossCallReturnLabel_29:
        MOV     A,#0x3
        XRL     A,?V0
        JNZ     ??ZDO_StartDevice_7
        MOV     DPTR,#??scanCnt
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x1
        ADD     A,R0
        MOVX    @DPTR,A
        MOV     A,R0
        CLR     C
        SUBB    A,#0x5
        JC      ??ZDO_StartDevice_7
//  344       {
//  345         // When ApsUseExtendedPanID is commissioned to a non zero value via
//  346         // application specific means, the device shall conduct an active scan
//  347         // on the Default Channel list and join the PAN with the same
//  348         // ExtendedPanID. If the PAN is not found, an scan should be completed
//  349         // on all channels.
//  350         // When devices rejoin the network and the PAN is not found from
//  351         zgDefaultChannelList = MAX_CHANNELS_24GHZ;
        LCALL   ?Subroutine26 & 0xFFFF
//  352       }
//  353     #endif // ZIGBEE_COMMISSIONING
//  354   #endif
//  355     }
??CrossCallReturnLabel_30:
        SJMP    ??ZDO_StartDevice_7
//  356     else if ( startMode == MODE_RESUME )
??ZDO_StartDevice_6:
        MOV     A,#0x1
        XRL     A,?V0
        JNZ     ??ZDO_StartDevice_3
//  357     {
//  358       if ( logicalType == NODETYPE_ROUTER )
        MOV     A,#0x1
        XRL     A,?V1
        MOV     DPTR,#devState
        JNZ     ??ZDO_StartDevice_8
//  359       {
//  360         ZMacScanCnf_t scanCnf;
//  361         devState = DEV_NWK_ORPHAN;
        MOV     A,#0xa
        MOVX    @DPTR,A
//  362 
//  363         /* if router and nvram is available, fake successful orphan scan */
//  364         scanCnf.hdr.Status = ZSUCCESS;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
//  365         scanCnf.ScanType = ZMAC_ORPHAN_SCAN;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x3
        MOVX    @DPTR,A
//  366         scanCnf.UnscannedChannels = 0;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  367         scanCnf.ResultListSize = 0;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
//  368         nwk_ScanJoiningOrphan(&scanCnf);
        ; Setup parameters for call to function nwk_ScanJoiningOrphan
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   `??nwk_ScanJoiningOrphan::?relay`; Banked call to: nwk_ScanJoiningOrphan
//  369 
//  370         ret = ZSuccess;
        SJMP    ??ZDO_StartDevice_9
//  371       }
//  372       else
//  373       {
//  374         devState = DEV_NWK_ORPHAN;
??ZDO_StartDevice_8:
        MOV     A,#0xa
        LCALL   ?Subroutine48 & 0xFFFF
//  375         ret = NLME_OrphanJoinRequest( zgDefaultChannelList,
//  376                                       zgDefaultStartingScanDuration );
//  377       }
//  378     }
//  379     else
//  380     {
//  381 #if defined( LCD_SUPPORTED )
//  382       HalLcdWriteScreen( "StartDevice ERR", "MODE unknown" );
//  383 #endif
//  384     }
//  385   }
??CrossCallReturnLabel_75:
        LCALL   ?XLOAD_R2345
        LCALL   `??NLME_OrphanJoinRequest::?relay`; Banked call to: NLME_OrphanJoinRequest
??ZDO_StartDevice_2:
        MOV     A,R1
        MOV     R1,A
//  386 
//  387   if ( ret != ZSuccess )
??ZDO_StartDevice_7:
        MOV     A,R1
        JZ      ??ZDO_StartDevice_9
//  388   {
//  389     osal_start_timerEx(ZDAppTaskID, ZDO_NETWORK_INIT, NWK_RETRY_DELAY );
??ZDO_StartDevice_3:
        ; Setup parameters for call to function osal_start_timerEx
        MOV     DPTR,#__Constant_3e8
        LCALL   ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOV     DPTR,#ZDAppTaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??osal_start_timerEx::?relay`; Banked call to: osal_start_timerEx
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
//  390   }
//  391 }
??ZDO_StartDevice_9:
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     R7,#0x5
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock1

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine48:
          CFI Block cfiCond2 Using cfiCommon0
          CFI Function ZDO_StartDevice
          CFI Conditional ??CrossCallReturnLabel_74
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond3 Using cfiCommon0
          CFI (cfiCond3) Function ZDO_StartDevice
          CFI (cfiCond3) Conditional ??CrossCallReturnLabel_75
          CFI (cfiCond3) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond3) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond3) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond3) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond3) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond3) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond3) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond3) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond3) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond3) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond3) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond3) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond3) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond3) CFA_SP SP+-2
          CFI (cfiCond3) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker4 Using cfiCommon1
          CFI (cfiPicker4) NoFunction
          CFI (cfiPicker4) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function NLME_NetworkDiscoveryRequest
        ; Setup parameters for call to function NLME_OrphanJoinRequest
        MOV     DPTR,#zgDefaultStartingScanDuration
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPTR,#zgDefaultChannelList
        RET
          CFI EndBlock cfiCond2
          CFI EndBlock cfiCond3
          CFI EndBlock cfiPicker4

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine26:
          CFI Block cfiCond5 Using cfiCommon0
          CFI Function ZDO_StartDevice
          CFI Conditional ??CrossCallReturnLabel_29
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond6 Using cfiCommon0
          CFI (cfiCond6) Function ZDO_StartDevice
          CFI (cfiCond6) Conditional ??CrossCallReturnLabel_30
          CFI (cfiCond6) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond6) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond6) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond6) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond6) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond6) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond6) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond6) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond6) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond6) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond6) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond6) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond6) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond6) CFA_SP SP+-2
          CFI (cfiCond6) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker7 Using cfiCommon1
          CFI (cfiPicker7) NoFunction
          CFI (cfiPicker7) Picker
        MOV     DPTR,#zgDefaultChannelList
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x8
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x7
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond5
          CFI EndBlock cfiCond6
          CFI EndBlock cfiPicker7

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
??discRetries:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
??scanCnt:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  392 
//  393 /**************************************************************************************************
//  394  * @fn          zdoSendStateChangeMsg
//  395  *
//  396  * @brief       Helper function for ZDO_UpdateNwkStatus.
//  397  *
//  398  * input parameters
//  399  *
//  400  * @param       taskId - The OSAL task identifier to which to send the ZDO_STATE_CHANGE_EVT.
//  401  * @param       state - The current device state.
//  402  *
//  403  * output parameters
//  404  *
//  405  * None.
//  406  *
//  407  * @return      None.
//  408  **************************************************************************************************
//  409  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  410 static void zdoSendStateChangeMsg(uint8 state, uint8 taskId)
zdoSendStateChangeMsg:
          CFI Block cfiBlock8 Using cfiCommon0
          CFI Function zdoSendStateChangeMsg
        CODE
//  411 {
        FUNCALL zdoSendStateChangeMsg, osal_msg_find
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdoSendStateChangeMsg, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdoSendStateChangeMsg, osal_set_event
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdoSendStateChangeMsg, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R1
        MOV     R7,A
        MOV     A,R2
        MOV     R6,A
//  412   osal_event_hdr_t *pMsg = (osal_event_hdr_t *)osal_msg_find(taskId, ZDO_STATE_CHANGE);
        ; Setup parameters for call to function osal_msg_find
        MOV     R2,#-0x2f
        MOV     R1,A
        LCALL   `??osal_msg_find::?relay`; Banked call to: osal_msg_find
        MOV     DPL,R2
        MOV     DPH,R3
//  413 
//  414   if (NULL == pMsg)
        MOV     A,DPL
        ORL     A,DPH
        JNZ     ??zdoSendStateChangeMsg_0
//  415   {
//  416     if (NULL == (pMsg = (osal_event_hdr_t *)osal_msg_allocate(sizeof(osal_event_hdr_t))))
        ; Setup parameters for call to function osal_msg_allocate
        MOV     R2,#0x2
        MOV     R3,#0x0
        LCALL   `??osal_msg_allocate::?relay`; Banked call to: osal_msg_allocate
        MOV     A,R2
        ORL     A,R3
        JNZ     ??zdoSendStateChangeMsg_1
//  417     {
//  418       // Upon failure to notify any EndPoint of the state change, re-set the ZDO event to
//  419       // try again later when more Heap may be available.
//  420       osal_set_event(ZDAppTaskID, ZDO_STATE_CHANGE_EVT);
        ; Setup parameters for call to function osal_set_event
        MOV     R2,#0x10
        MOV     R3,#0x0
        MOV     DPTR,#ZDAppTaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??osal_set_event::?relay`; Banked call to: osal_set_event
        SJMP    ??zdoSendStateChangeMsg_2
//  421     }
//  422     else
//  423     {
//  424       pMsg->event = ZDO_STATE_CHANGE;
??zdoSendStateChangeMsg_1:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x2f
        MOVX    @DPTR,A
//  425       pMsg->status = state;
        MOV     A,R7
        INC     DPTR
        MOVX    @DPTR,A
//  426 
//  427       (void)osal_msg_send(taskId, (uint8 *)pMsg);
        ; Setup parameters for call to function osal_msg_send
        MOV     A,R6
        MOV     R1,A
        LCALL   `??osal_msg_send::?relay`; Banked call to: osal_msg_send
        SJMP    ??zdoSendStateChangeMsg_2
//  428     }
//  429   }
//  430   else
//  431   {
//  432     // Modify in place the status of an existing ZDO_STATE_CHANGE message to the EndPoint.
//  433     pMsg->status = state;
??zdoSendStateChangeMsg_0:
        MOV     A,R7
        INC     DPTR
        MOVX    @DPTR,A
//  434   }
//  435 }
??zdoSendStateChangeMsg_2:
        LJMP    ??Subroutine210_0 & 0xFFFF
          CFI EndBlock cfiBlock8
//  436 
//  437 /**************************************************************************************************
//  438  * @fn          ZDO_UpdateNwkStatus
//  439  *
//  440  * @brief       This function sends a ZDO_STATE_CHANGE message to the task of every EndPoint
//  441  *              registered with AF (except, of course, the ZDO_EP). Even if a single task has more
//  442  *              than one registered EndPoint, it will only receive one notification per state
//  443  *              change. Although the device may go through a sequence of state changes, the
//  444  *              Application task may only receive notification of the final, steady-state state
//  445  *              because it has the lowest priority and never even runs to receive the intermediate
//  446  *              state change notifications.
//  447  *
//  448  * input parameters
//  449  *
//  450  * @param       state - The current device state.
//  451  *
//  452  * output parameters
//  453  *
//  454  * None.
//  455  *
//  456  * @return      None.
//  457  **************************************************************************************************
//  458  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  459 void ZDO_UpdateNwkStatus(devStates_t state)
ZDO_UpdateNwkStatus:
          CFI Block cfiBlock9 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
        CODE
//  460 {
        FUNCALL ZDO_UpdateNwkStatus, zdoSendStateChangeMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, zdoSendStateChangeMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     ?V0,R1
//  461   epList_t *pItem = epList;
        MOV     DPTR,#epList
        LCALL   ??Subroutine256_0 & 0xFFFF
??CrossCallReturnLabel_609:
        MOV     R7,A
//  462 
//  463 #if defined MT_ZDO_CB_FUNC
//  464   if ( zdpExternalStateTaskID == -1 )
        MOV     DPTR,#zdpExternalStateTaskID
        MOVX    A,@DPTR
        CPL     A
        JNZ     ??ZDO_UpdateNwkStatus_0
        INC     DPTR
        MOVX    A,@DPTR
        CPL     A
??ZDO_UpdateNwkStatus_0:
        JNZ     ??CrossCallReturnLabel_131
//  465   {
//  466     zdpExternalStateTaskID = MT_TaskID;
        MOV     DPTR,#MT_TaskID
        MOVX    A,@DPTR
        MOV     DPTR,#zdpExternalStateTaskID
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        SJMP    ??CrossCallReturnLabel_131
//  467   }
//  468 #endif
//  469 
//  470   while (pItem != NULL)
//  471   {
//  472     if (pItem->epDesc->endPoint != ZDO_EP)
??ZDO_UpdateNwkStatus_1:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_397:
        JZ      ??ZDO_UpdateNwkStatus_2
//  473     {
//  474       zdoSendStateChangeMsg(state, *(pItem->epDesc->task_id));
        ; Setup parameters for call to function zdoSendStateChangeMsg
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine62 & 0xFFFF
//  475     }
??CrossCallReturnLabel_399:
        MOV     R2,A
        MOV     R1,?V0
        LCALL   `??zdoSendStateChangeMsg::?relay`; Banked call to: zdoSendStateChangeMsg
//  476 
//  477     pItem = pItem->nextDesc;
??ZDO_UpdateNwkStatus_2:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine81 & 0xFFFF
//  478   }
??CrossCallReturnLabel_131:
        MOV     A,R6
        ORL     A,R7
        JNZ     ??ZDO_UpdateNwkStatus_1
//  479   
//  480   if ( zdpExternalStateTaskID != -1 )
        MOV     DPTR,#zdpExternalStateTaskID
        MOVX    A,@DPTR
        CPL     A
        JNZ     ??ZDO_UpdateNwkStatus_3
        INC     DPTR
        MOVX    A,@DPTR
        CPL     A
??ZDO_UpdateNwkStatus_3:
        JZ      ??ZDO_UpdateNwkStatus_4
//  481   {  
//  482     zdoSendStateChangeMsg( state, zdpExternalStateTaskID );
        ; Setup parameters for call to function zdoSendStateChangeMsg
        MOV     DPTR,#zdpExternalStateTaskID
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     R1,?V0
        LCALL   `??zdoSendStateChangeMsg::?relay`; Banked call to: zdoSendStateChangeMsg
//  483   }
//  484   
//  485   ZDAppNwkAddr.addr.shortAddr = NLME_GetShortAddr();
??ZDO_UpdateNwkStatus_4:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?Subroutine51 & 0xFFFF
//  486   (void)NLME_GetExtAddr();  // Load the saveExtAddr pointer.
??CrossCallReturnLabel_333:
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
//  487 }
          CFI EndBlock cfiBlock9
        REQUIRE ?Subroutine2
        ; // Fall through to label ?Subroutine2

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock10 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock10
//  488 
//  489 #if defined ( REFLECTOR )
//  490 /*********************************************************************
//  491  * @fn          ZDO_RemoveEndDeviceBind
//  492  *
//  493  * @brief       Remove the end device bind
//  494  *
//  495  * @param  none
//  496  *
//  497  * @return      none
//  498  */
//  499 static void ZDO_RemoveEndDeviceBind( void )
//  500 {
//  501   if ( ZDO_EDBind != NULL )
//  502   {
//  503     // Free the RAM
//  504     if ( ZDO_EDBind->inClusters != NULL )
//  505     {
//  506       osal_mem_free( ZDO_EDBind->inClusters );
//  507     }
//  508     if ( ZDO_EDBind->outClusters != NULL )
//  509     {
//  510       osal_mem_free( ZDO_EDBind->outClusters );
//  511     }
//  512     osal_mem_free( ZDO_EDBind );
//  513     ZDO_EDBind = NULL;
//  514   }
//  515 }
//  516 #endif // REFLECTOR
//  517 
//  518 #if defined ( REFLECTOR )
//  519 /*********************************************************************
//  520  * @fn          ZDO_RemoveEndDeviceBind
//  521  *
//  522  * @brief       Remove the end device bind
//  523  *
//  524  * @param  none
//  525  *
//  526  * @return      none
//  527  */
//  528 static void ZDO_SendEDBindRsp( byte TransSeq, zAddrType_t *dstAddr, byte Status, byte secUse )
//  529 {
//  530   ZDP_EndDeviceBindRsp( TransSeq, dstAddr, Status, secUse );
//  531 
//  532 #if defined( LCD_SUPPORTED )
//  533   HalLcdWriteString( "End Device Bind", HAL_LCD_LINE_1 );
//  534   if ( Status == ZDP_SUCCESS )
//  535   {
//  536     HalLcdWriteString( "Success Sent", HAL_LCD_LINE_2 );
//  537   }
//  538   else
//  539   {
//  540     HalLcdWriteString( "Timeout", HAL_LCD_LINE_2 );
//  541   }
//  542 #endif
//  543 
//  544 }
//  545 #endif // REFLECTOR
//  546 
//  547 #if ( ZG_BUILD_COORDINATOR_TYPE )
//  548 /*********************************************************************
//  549  * @fn          ZDO_CompareClusterLists
//  550  *
//  551  * @brief       Compare one list to another list
//  552  *
//  553  * @param       numList1 - number of items in list 1
//  554  * @param       list1 - first list of cluster IDs
//  555  * @param       numList2 - number of items in list 2
//  556  * @param       list2 - second list of cluster IDs
//  557  * @param       pMatches - buffer to put matches
//  558  *
//  559  * @return      number of matches
//  560  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  561 static byte ZDO_CompareClusterLists( byte numList1, uint16 *list1,
ZDO_CompareClusterLists:
          CFI Block cfiBlock11 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
        CODE
//  562                           byte numList2, uint16 *list2, uint16 *pMatches )
//  563 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     ?V3,R1
        MOV     ?V4,R4
//  564   byte x, y;
//  565   uint16 z;
//  566   byte numMatches = 0;
        MOV     ?V0,#0x0
//  567 
//  568   // Check the first in against the seconds out
//  569   for ( x = 0; x < numList1; x++ )
        MOV     ?V1,#0x0
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_160:
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_132:
        SJMP    ??ZDO_CompareClusterLists_0
//  570   {
//  571     for ( y = 0; y < numList2; y++ )
//  572     {
//  573       z = list2[y];
??ZDO_CompareClusterLists_1:
        MOV     R0,?V2
        LCALL   ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_180:
        MOV     ?V6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V7,A
//  574       if ( list1[x] == z )
        MOV     R0,?V1
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_182:
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,?V6
        JNZ     ??ZDO_CompareClusterLists_2
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V7
??ZDO_CompareClusterLists_2:
        JNZ     ??ZDO_CompareClusterLists_3
//  575       {
//  576         pMatches[numMatches++] = z;
        LCALL   ?Subroutine118 & 0xFFFF
//  577       }
//  578     }
??CrossCallReturnLabel_330:
        MOV     A,R6
        ADD     A,R0
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,R1
        MOV     DPH,A
        MOV     A,?V6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V7
        MOVX    @DPTR,A
        INC     ?V0
??ZDO_CompareClusterLists_3:
        INC     ?V2
??ZDO_CompareClusterLists_4:
        MOV     A,?V2
        CLR     C
        SUBB    A,?V4
        JC      ??ZDO_CompareClusterLists_1
        INC     ?V1
??ZDO_CompareClusterLists_0:
        MOV     A,?V1
        CLR     C
        SUBB    A,?V3
        JNC     ??ZDO_CompareClusterLists_5
        MOV     ?V2,#0x0
        SJMP    ??ZDO_CompareClusterLists_4
//  579   }
//  580 
//  581   return ( numMatches );
??ZDO_CompareClusterLists_5:
        MOV     R1,?V0
        SJMP    ??Subroutine207_0
//  582 }
          CFI EndBlock cfiBlock11

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine118:
          CFI Block cfiCond12 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_330
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond13 Using cfiCommon0
          CFI (cfiCond13) Function ZDO_ConvertOTAClusters
          CFI (cfiCond13) Conditional ??CrossCallReturnLabel_331
          CFI (cfiCond13) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond13) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond13) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond13) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond13) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond13) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond13) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond13) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond13) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond13) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond13) CFA_SP SP+-2
          CFI (cfiCond13) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker14 Using cfiCommon1
          CFI (cfiPicker14) NoFunction
          CFI (cfiPicker14) Picker
        MOV     R0,?V0
          CFI EndBlock cfiCond12
          CFI EndBlock cfiCond13
          CFI EndBlock cfiPicker14
        REQUIRE ??Subroutine206_0
        ; // Fall through to label ??Subroutine206_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine206_0:
          CFI Block cfiCond15 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_328
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond16 Using cfiCommon0
          CFI (cfiCond16) Function ZDO_ParseAddrRsp
          CFI (cfiCond16) Conditional ??CrossCallReturnLabel_329
          CFI (cfiCond16) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond16) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond16) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond16) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond16) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond16) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond16) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond16) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond16) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond16) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond16) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond16) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond16) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond16) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond16) CFA_SP SP+-2
          CFI (cfiCond16) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond17 Using cfiCommon0
          CFI (cfiCond17) Function ZDO_CompareClusterLists
          CFI (cfiCond17) Conditional ??CrossCallReturnLabel_330
          CFI (cfiCond17) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond17) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond17) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond17) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond17) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond17) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond17) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond17) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond17) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond17) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond17) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond17) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond17) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond17) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond17) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond17) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond17) CFA_SP SP+-2
          CFI (cfiCond17) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond18 Using cfiCommon0
          CFI (cfiCond18) Function ZDO_ConvertOTAClusters
          CFI (cfiCond18) Conditional ??CrossCallReturnLabel_331
          CFI (cfiCond18) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond18) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond18) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond18) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond18) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond18) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond18) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond18) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond18) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond18) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond18) CFA_SP SP+-2
          CFI (cfiCond18) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker19 Using cfiCommon1
          CFI (cfiPicker19) NoFunction
          CFI (cfiPicker19) Picker
        MOV     A,R0
        ADD     A,R0
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        RET
          CFI EndBlock cfiCond15
          CFI EndBlock cfiCond16
          CFI EndBlock cfiCond17
          CFI EndBlock cfiCond18
          CFI EndBlock cfiPicker19

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine81:
          CFI Block cfiCond20 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_131
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond21 Using cfiCommon0
          CFI (cfiCond21) Function ZDO_CompareClusterLists
          CFI (cfiCond21) Conditional ??CrossCallReturnLabel_132
          CFI (cfiCond21) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond21) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond21) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond21) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond21) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond21) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond21) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond21) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond21) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond21) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond21) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond21) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond21) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond21) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond21) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond21) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond21) CFA_SP SP+-2
          CFI (cfiCond21) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond22 Using cfiCommon0
          CFI (cfiCond22) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond22) Conditional ??CrossCallReturnLabel_133
          CFI (cfiCond22) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond22) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond22) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond22) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond22) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond22) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond22) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond22) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond22) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond22) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond22) CFA_SP SP+-2
          CFI (cfiCond22) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker23 Using cfiCommon1
          CFI (cfiPicker23) NoFunction
          CFI (cfiPicker23) Picker
        LCALL   ?Subroutine175 & 0xFFFF
??CrossCallReturnLabel_454:
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
        RET
          CFI EndBlock cfiCond20
          CFI EndBlock cfiCond21
          CFI EndBlock cfiCond22
          CFI EndBlock cfiPicker23

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiBlock24 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R2,?V2
        MOV     R3,?V3
          CFI EndBlock cfiBlock24
        REQUIRE ??Subroutine207_0
        ; // Fall through to label ??Subroutine207_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine207_0:
          CFI Block cfiBlock25 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock25
//  583 #endif // ZG_BUILD_COORDINATOR_TYPE
//  584 
//  585 /*********************************************************************
//  586  * Utility functions
//  587  */
//  588 
//  589 /*********************************************************************
//  590  * @fn          ZDO_CompareByteLists
//  591  *
//  592  * @brief       Compares two lists for matches.
//  593  *
//  594  * @param       ACnt  - number of entries in list A
//  595  * @param       AList  - List A
//  596  * @param       BCnt  - number of entries in list B
//  597  * @param       BList  - List B
//  598  *
//  599  * @return      true if a match is found
//  600  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  601 byte ZDO_AnyClusterMatches( byte ACnt, uint16 *AList, byte BCnt, uint16 *BList )
ZDO_AnyClusterMatches:
          CFI Block cfiBlock26 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
        CODE
//  602 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V3,R1
        MOV     ?V2,R4
//  603   byte x, y;
//  604 
//  605   for ( x = 0; x < ACnt; x++ )
        MOV     ?V0,#0x0
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_161:
        SJMP    ??ZDO_AnyClusterMatches_0
??ZDO_AnyClusterMatches_1:
        INC     ?V0
??ZDO_AnyClusterMatches_0:
        MOV     A,?V0
        CLR     C
        SUBB    A,?V3
        JNC     ??ZDO_AnyClusterMatches_2
//  606   {
//  607     for ( y = 0; y < BCnt; y++ )
        MOV     ?V1,#0x0
        SJMP    ??ZDO_AnyClusterMatches_3
??ZDO_AnyClusterMatches_4:
        INC     ?V1
??ZDO_AnyClusterMatches_3:
        MOV     A,?V1
        CLR     C
        SUBB    A,?V2
        JNC     ??ZDO_AnyClusterMatches_1
//  608     {
//  609       if ( AList[x] == BList[y] )
        MOV     R0,?V0
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_183:
        LCALL   ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_613:
        MOV     R7,A
        MOV     R0,?V1
        LCALL   ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_181:
        XRL     A,R6
        JNZ     ??ZDO_AnyClusterMatches_5
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R7
??ZDO_AnyClusterMatches_5:
        JNZ     ??ZDO_AnyClusterMatches_4
//  610       {
//  611         return true;
        MOV     R1,#0x1
        SJMP    ??ZDO_AnyClusterMatches_6
//  612       }
//  613     }
//  614   }
//  615 
//  616   return false;
??ZDO_AnyClusterMatches_2:
        MOV     R1,#0x0
??ZDO_AnyClusterMatches_6:
        SJMP    ??Subroutine208_0
//  617 }
          CFI EndBlock cfiBlock26

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine116:
          CFI Block cfiCond27 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_182
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond28 Using cfiCommon0
          CFI (cfiCond28) Function ZDO_AnyClusterMatches
          CFI (cfiCond28) Conditional ??CrossCallReturnLabel_183
          CFI (cfiCond28) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond28) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond28) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond28) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond28) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond28) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond28) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond28) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond28) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond28) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond28) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond28) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond28) CFA_SP SP+-2
          CFI (cfiCond28) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker29 Using cfiCommon1
          CFI (cfiPicker29) NoFunction
          CFI (cfiPicker29) Picker
        MOV     A,R0
        ADD     A,R0
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     A,R2
        ADD     A,R0
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,R1
        RET
          CFI EndBlock cfiCond27
          CFI EndBlock cfiCond28
          CFI EndBlock cfiPicker29

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine115:
          CFI Block cfiCond30 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_180
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond31 Using cfiCommon0
          CFI (cfiCond31) Function ZDO_AnyClusterMatches
          CFI (cfiCond31) Conditional ??CrossCallReturnLabel_181
          CFI (cfiCond31) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond31) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond31) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond31) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond31) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond31) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond31) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond31) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond31) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond31) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond31) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond31) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond31) CFA_SP SP+-2
          CFI (cfiCond31) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker32 Using cfiCommon1
          CFI (cfiPicker32) NoFunction
          CFI (cfiPicker32) Picker
        MOV     A,R0
        ADD     A,R0
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     A,R4
        ADD     A,R0
        MOV     DPL,A
        MOV     A,R5
        ADDC    A,R1
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond30
          CFI EndBlock cfiCond31
          CFI EndBlock cfiPicker32

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine103:
          CFI Block cfiCond33 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_160
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond34 Using cfiCommon0
          CFI (cfiCond34) Function ZDO_AnyClusterMatches
          CFI (cfiCond34) Conditional ??CrossCallReturnLabel_161
          CFI (cfiCond34) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond34) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond34) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond34) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond34) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond34) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond34) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond34) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond34) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond34) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond34) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond34) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond34) CFA_SP SP+-2
          CFI (cfiCond34) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker35 Using cfiCommon1
          CFI (cfiPicker35) NoFunction
          CFI (cfiPicker35) Picker
        LCALL   ?Subroutine175 & 0xFFFF
??CrossCallReturnLabel_455:
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
        RET
          CFI EndBlock cfiCond33
          CFI EndBlock cfiCond34
          CFI EndBlock cfiPicker35

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine175:
          CFI Block cfiCond36 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_454, ??CrossCallReturnLabel_131
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond37 Using cfiCommon0
          CFI (cfiCond37) Function ZDO_CompareClusterLists
          CFI (cfiCond37) Conditional ??CrossCallReturnLabel_454, ??CrossCallReturnLabel_132
          CFI (cfiCond37) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond37) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond37) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond37) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond37) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond37) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond37) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond37) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond37) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond37) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond37) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond37) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond37) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond37) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond37) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond37) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond37) CFA_SP SP+-4
          CFI (cfiCond37) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond38 Using cfiCommon0
          CFI (cfiCond38) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond38) Conditional ??CrossCallReturnLabel_454, ??CrossCallReturnLabel_133
          CFI (cfiCond38) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond38) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond38) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond38) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond38) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond38) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond38) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond38) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond38) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond38) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond38) CFA_SP SP+-4
          CFI (cfiCond38) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond39 Using cfiCommon0
          CFI (cfiCond39) Function ZDO_CompareClusterLists
          CFI (cfiCond39) Conditional ??CrossCallReturnLabel_455, ??CrossCallReturnLabel_160
          CFI (cfiCond39) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond39) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond39) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond39) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond39) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond39) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond39) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond39) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond39) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond39) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond39) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond39) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond39) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond39) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond39) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond39) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond39) CFA_SP SP+-4
          CFI (cfiCond39) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond40 Using cfiCommon0
          CFI (cfiCond40) Function ZDO_AnyClusterMatches
          CFI (cfiCond40) Conditional ??CrossCallReturnLabel_455, ??CrossCallReturnLabel_161
          CFI (cfiCond40) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond40) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond40) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond40) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond40) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond40) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond40) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond40) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond40) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond40) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond40) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond40) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond40) CFA_SP SP+-4
          CFI (cfiCond40) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond41 Using cfiCommon0
          CFI (cfiCond41) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond41) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_446
          CFI (cfiCond41) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond41) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond41) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond41) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond41) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond41) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond41) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond41) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond41) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond41) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond41) CFA_SP SP+-4
          CFI (cfiCond41) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond42 Using cfiCommon0
          CFI (cfiCond42) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond42) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_447
          CFI (cfiCond42) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond42) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond42) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond42) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond42) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond42) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond42) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond42) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond42) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond42) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond42) CFA_SP SP+-4
          CFI (cfiCond42) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond43 Using cfiCommon0
          CFI (cfiCond43) Function ZDO_RemoveMatchMemory
          CFI (cfiCond43) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_448
          CFI (cfiCond43) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond43) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond43) CFA_SP SP+-9
          CFI Block cfiCond44 Using cfiCommon0
          CFI (cfiCond44) Function ZDO_RemoveMatchMemory
          CFI (cfiCond44) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_449
          CFI (cfiCond44) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond44) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond44) CFA_SP SP+-9
          CFI Block cfiCond45 Using cfiCommon0
          CFI (cfiCond45) Function ZDO_RemoveMatchMemory
          CFI (cfiCond45) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_450
          CFI (cfiCond45) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond45) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond45) CFA_SP SP+-9
          CFI Block cfiCond46 Using cfiCommon0
          CFI (cfiCond46) Function ZDO_RemoveMatchMemory
          CFI (cfiCond46) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_451
          CFI (cfiCond46) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond46) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond46) CFA_SP SP+-9
          CFI Block cfiCond47 Using cfiCommon0
          CFI (cfiCond47) Function ZDO_RemoveMatchMemory
          CFI (cfiCond47) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_452
          CFI (cfiCond47) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond47) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond47) CFA_SP SP+-9
          CFI Block cfiCond48 Using cfiCommon0
          CFI (cfiCond48) Function ZDO_RemoveMatchMemory
          CFI (cfiCond48) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_453
          CFI (cfiCond48) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond48) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond48) CFA_SP SP+-9
          CFI Block cfiCond49 Using cfiCommon0
          CFI (cfiCond49) Function ZDO_CopyMatchInfo
          CFI (cfiCond49) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_444
          CFI (cfiCond49) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond49) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond49) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond49) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond49) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond49) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond49) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond49) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond49) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond49) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond49) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond49) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond49) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond49) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond49) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond49) CFA_SP SP+-4
          CFI (cfiCond49) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond50 Using cfiCommon0
          CFI (cfiCond50) Function ZDO_CopyMatchInfo
          CFI (cfiCond50) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_445
          CFI (cfiCond50) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond50) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond50) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond50) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond50) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond50) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond50) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond50) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond50) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond50) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond50) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond50) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond50) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond50) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond50) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond50) CFA_SP SP+-4
          CFI (cfiCond50) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond51 Using cfiCommon0
          CFI (cfiCond51) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond51) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_430
          CFI (cfiCond51) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond51) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond51) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond51) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond51) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond51) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond51) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond51) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond51) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond51) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond51) CFA_SP SP+-4
          CFI (cfiCond51) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond52 Using cfiCommon0
          CFI (cfiCond52) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond52) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_431
          CFI (cfiCond52) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond52) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond52) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond52) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond52) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond52) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond52) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond52) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond52) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond52) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond52) CFA_SP SP+-4
          CFI (cfiCond52) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond53 Using cfiCommon0
          CFI (cfiCond53) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond53) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_432
          CFI (cfiCond53) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond53) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond53) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond53) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond53) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond53) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond53) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond53) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond53) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond53) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond53) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond53) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond53) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond53) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond53) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond53) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond53) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond53) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond53) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond53) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond53) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond53) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond53) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond53) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond53) CFA_SP SP+-4
          CFI (cfiCond53) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond54 Using cfiCommon0
          CFI (cfiCond54) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond54) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_433
          CFI (cfiCond54) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond54) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond54) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond54) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond54) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond54) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond54) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond54) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond54) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond54) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond54) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond54) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond54) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond54) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond54) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond54) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond54) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond54) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond54) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond54) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond54) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond54) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond54) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond54) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond54) CFA_SP SP+-4
          CFI (cfiCond54) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond55 Using cfiCommon0
          CFI (cfiCond55) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond55) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_434
          CFI (cfiCond55) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond55) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond55) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond55) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond55) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond55) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond55) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond55) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond55) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond55) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond55) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond55) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond55) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond55) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond55) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond55) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond55) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond55) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond55) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond55) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond55) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond55) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond55) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond55) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond55) CFA_SP SP+-4
          CFI (cfiCond55) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond56 Using cfiCommon0
          CFI (cfiCond56) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond56) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_435
          CFI (cfiCond56) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond56) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond56) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond56) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond56) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond56) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond56) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond56) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond56) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond56) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond56) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond56) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond56) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond56) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond56) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond56) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond56) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond56) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond56) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond56) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond56) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond56) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond56) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond56) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond56) CFA_SP SP+-4
          CFI (cfiCond56) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond57 Using cfiCommon0
          CFI (cfiCond57) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond57) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_436
          CFI (cfiCond57) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond57) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond57) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond57) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond57) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond57) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond57) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond57) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond57) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond57) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond57) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond57) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond57) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond57) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond57) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond57) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond57) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond57) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond57) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond57) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond57) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond57) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond57) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond57) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond57) CFA_SP SP+-4
          CFI (cfiCond57) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond58 Using cfiCommon0
          CFI (cfiCond58) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond58) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_437
          CFI (cfiCond58) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond58) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond58) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond58) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond58) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond58) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond58) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond58) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond58) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond58) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond58) CFA_SP SP+-4
          CFI (cfiCond58) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond59 Using cfiCommon0
          CFI (cfiCond59) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond59) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_438
          CFI (cfiCond59) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond59) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond59) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond59) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond59) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond59) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond59) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond59) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond59) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond59) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond59) CFA_SP SP+-4
          CFI (cfiCond59) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond60 Using cfiCommon0
          CFI (cfiCond60) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond60) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_439
          CFI (cfiCond60) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond60) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond60) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond60) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond60) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond60) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond60) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond60) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond60) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond60) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond60) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond60) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond60) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond60) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond60) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond60) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond60) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond60) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond60) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond60) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond60) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond60) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond60) CFA_SP SP+-4
          CFI (cfiCond60) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond61 Using cfiCommon0
          CFI (cfiCond61) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond61) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_440
          CFI (cfiCond61) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond61) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond61) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond61) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond61) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond61) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond61) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond61) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond61) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond61) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond61) CFA_SP SP+-4
          CFI (cfiCond61) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond62 Using cfiCommon0
          CFI (cfiCond62) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond62) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_441
          CFI (cfiCond62) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond62) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond62) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond62) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond62) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond62) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond62) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond62) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond62) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond62) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond62) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond62) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond62) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond62) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond62) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond62) CFA_SP SP+-4
          CFI (cfiCond62) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond63 Using cfiCommon0
          CFI (cfiCond63) Function ZDO_RemoveMatchMemory
          CFI (cfiCond63) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_442
          CFI (cfiCond63) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond63) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond63) CFA_SP SP+-9
          CFI Block cfiCond64 Using cfiCommon0
          CFI (cfiCond64) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond64) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_443
          CFI (cfiCond64) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond64) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond64) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond64) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond64) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond64) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond64) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond64) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond64) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond64) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond64) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond64) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond64) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond64) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond64) CFA_SP SP+-4
          CFI (cfiCond64) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker65 Using cfiCommon1
          CFI (cfiPicker65) NoFunction
          CFI (cfiPicker65) Picker
        LCALL   ?Subroutine199 & 0xFFFF
??CrossCallReturnLabel_461:
        MOV     A,R0
        RET
          CFI EndBlock cfiCond36
          CFI EndBlock cfiCond37
          CFI EndBlock cfiCond38
          CFI EndBlock cfiCond39
          CFI EndBlock cfiCond40
          CFI EndBlock cfiCond41
          CFI EndBlock cfiCond42
          CFI EndBlock cfiCond43
          CFI EndBlock cfiCond44
          CFI EndBlock cfiCond45
          CFI EndBlock cfiCond46
          CFI EndBlock cfiCond47
          CFI EndBlock cfiCond48
          CFI EndBlock cfiCond49
          CFI EndBlock cfiCond50
          CFI EndBlock cfiCond51
          CFI EndBlock cfiCond52
          CFI EndBlock cfiCond53
          CFI EndBlock cfiCond54
          CFI EndBlock cfiCond55
          CFI EndBlock cfiCond56
          CFI EndBlock cfiCond57
          CFI EndBlock cfiCond58
          CFI EndBlock cfiCond59
          CFI EndBlock cfiCond60
          CFI EndBlock cfiCond61
          CFI EndBlock cfiCond62
          CFI EndBlock cfiCond63
          CFI EndBlock cfiCond64
          CFI EndBlock cfiPicker65

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiBlock66 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock66
        REQUIRE ??Subroutine208_0
        ; // Fall through to label ??Subroutine208_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine208_0:
          CFI Block cfiBlock67 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock67
//  618 
//  619 /*********************************************************************
//  620  * Callback functions from ZDProfile
//  621  */
//  622 
//  623 /*********************************************************************
//  624  * @fn          ZDO_ProcessNodeDescReq
//  625  *
//  626  * @brief       This function processes and responds to the
//  627  *              Node_Desc_req message.
//  628  *
//  629  * @param       inMsg - incoming message
//  630  *
//  631  * @return      none
//  632  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  633 void ZDO_ProcessNodeDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessNodeDescReq:
          CFI Block cfiBlock68 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
        CODE
//  634 {
        FUNCALL ZDO_ProcessNodeDescReq, ZDP_NodeDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessNodeDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine60 & 0xFFFF
//  635   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
//  636   NodeDescriptorFormat_t *desc = NULL;
//  637 
//  638   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??CrossCallReturnLabel_93:
        JNZ     ??ZDO_ProcessNodeDescReq_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R5
??ZDO_ProcessNodeDescReq_0:
        JNZ     ??ZDO_ProcessNodeDescReq_1
//  639   {
//  640     desc = &ZDO_Config_Node_Descriptor;
//  641   }
//  642 
//  643   if ( desc != NULL )
//  644   {
//  645     ZDP_NodeDescMsg( inMsg, aoi, desc );
        ; Setup parameters for call to function ZDP_NodeDescMsg
        MOV     ?V0,#ZDO_Config_Node_Descriptor & 0xff
        MOV     ?V1,#(ZDO_Config_Node_Descriptor >> 8) & 0xff
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R6
        MOV     R2,A
        LCALL   `??ZDP_NodeDescMsg::?relay`; Banked call to: ZDP_NodeDescMsg
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        SJMP    ??ZDO_ProcessNodeDescReq_2
//  646   }
//  647   else
//  648   {
//  649     ZDP_GenericRsp( inMsg->TransSeq, &(inMsg->srcAddr),
//  650               ZDP_INVALID_REQTYPE, aoi, Node_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessNodeDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV     ?V0,#0x2
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0,R4
        MOV     ?V1,R5
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine65 & 0xFFFF
//  651   }
??CrossCallReturnLabel_102:
        LCALL   `??ZDP_GenericRsp::?relay`; Banked call to: ZDP_GenericRsp
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  652 }
??ZDO_ProcessNodeDescReq_2:
        SJMP    ??Subroutine210_0
          CFI EndBlock cfiBlock68

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock69 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x2
          CFI EndBlock cfiBlock69
        REQUIRE ??Subroutine209_0
        ; // Fall through to label ??Subroutine209_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine209_0:
          CFI Block cfiBlock70 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock70
        REQUIRE ??Subroutine210_0
        ; // Fall through to label ??Subroutine210_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine210_0:
          CFI Block cfiBlock71 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock71
//  653 
//  654 /*********************************************************************
//  655  * @fn          ZDO_ProcessPowerDescReq
//  656  *
//  657  * @brief       This function processes and responds to the
//  658  *              Node_Power_req message.
//  659  *
//  660  * @param       inMsg  - incoming request
//  661  *
//  662  * @return      none
//  663  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  664 void ZDO_ProcessPowerDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessPowerDescReq:
          CFI Block cfiBlock72 Using cfiCommon0
          CFI Function ZDO_ProcessPowerDescReq
        CODE
//  665 {
        FUNCALL ZDO_ProcessPowerDescReq, ZDP_PowerDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessPowerDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine60 & 0xFFFF
//  666   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
//  667   NodePowerDescriptorFormat_t *desc = NULL;
//  668 
//  669   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??CrossCallReturnLabel_94:
        JNZ     ??ZDO_ProcessPowerDescReq_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R5
??ZDO_ProcessPowerDescReq_0:
        JNZ     ??ZDO_ProcessPowerDescReq_1
//  670   {
//  671     desc = &ZDO_Config_Power_Descriptor;
//  672   }
//  673 
//  674   if ( desc != NULL )
//  675   {
//  676     ZDP_PowerDescMsg( inMsg, aoi, desc );
        ; Setup parameters for call to function ZDP_PowerDescMsg
        MOV     ?V0,#ZDO_Config_Power_Descriptor & 0xff
        MOV     ?V1,#(ZDO_Config_Power_Descriptor >> 8) & 0xff
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R6
        MOV     R2,A
        LCALL   `??ZDP_PowerDescMsg::?relay`; Banked call to: ZDP_PowerDescMsg
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        SJMP    ??ZDO_ProcessPowerDescReq_2
//  677   }
//  678   else
//  679   {
//  680     ZDP_GenericRsp( inMsg->TransSeq, &(inMsg->srcAddr),
//  681               ZDP_INVALID_REQTYPE, aoi, Power_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessPowerDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV     ?V0,#0x3
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0,R4
        MOV     ?V1,R5
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine65 & 0xFFFF
//  682   }
??CrossCallReturnLabel_103:
        LCALL   `??ZDP_GenericRsp::?relay`; Banked call to: ZDP_GenericRsp
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  683 }
??ZDO_ProcessPowerDescReq_2:
        SJMP    ??Subroutine210_0
          CFI EndBlock cfiBlock72

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine65:
          CFI Block cfiCond73 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_102
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond74 Using cfiCommon0
          CFI (cfiCond74) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond74) Conditional ??CrossCallReturnLabel_103
          CFI (cfiCond74) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond74) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond74) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond74) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond74) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond74) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond74) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond74) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond74) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond74) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond74) CFA_SP SP+-2
          CFI (cfiCond74) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker75 Using cfiCommon1
          CFI (cfiPicker75) NoFunction
          CFI (cfiPicker75) Picker
        LCALL   ?Subroutine180 & 0xFFFF
??CrossCallReturnLabel_601:
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R4,#-0x80
        LCALL   ?Subroutine181 & 0xFFFF
??CrossCallReturnLabel_296:
        RET
          CFI EndBlock cfiCond73
          CFI EndBlock cfiCond74
          CFI EndBlock cfiPicker75

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine60:
          CFI Block cfiCond76 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_93
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond77 Using cfiCommon0
          CFI (cfiCond77) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond77) Conditional ??CrossCallReturnLabel_94
          CFI (cfiCond77) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond77) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond77) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond77) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond77) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond77) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond77) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond77) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond77) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond77) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond77) CFA_SP SP+-2
          CFI (cfiCond77) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker78 Using cfiCommon1
          CFI (cfiPicker78) NoFunction
          CFI (cfiPicker78) Picker
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        LCALL   ?Subroutine165 & 0xFFFF
??CrossCallReturnLabel_280:
        MOV     R4,A
        CLR     A
        ADDC    A,R1
        MOV     R5,A
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,R4
        RET
          CFI EndBlock cfiCond76
          CFI EndBlock cfiCond77
          CFI EndBlock cfiPicker78
//  684 
//  685 /*********************************************************************
//  686  * @fn          ZDO_ProcessSimpleDescReq
//  687  *
//  688  * @brief       This function processes and responds to the
//  689  *              Simple_Desc_req message.
//  690  *
//  691  * @param       inMsg - incoming message (request)
//  692  *
//  693  * @return      none
//  694  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  695 void ZDO_ProcessSimpleDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessSimpleDescReq:
          CFI Block cfiBlock79 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
        CODE
//  696 {
        FUNCALL ZDO_ProcessSimpleDescReq, afFindSimpleDesc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessSimpleDescReq, ZDP_SimpleDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessSimpleDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  697   SimpleDescriptionFormat_t *sDesc = NULL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ?Subroutine35 & 0xFFFF
//  698   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
??CrossCallReturnLabel_47:
        LCALL   ??Subroutine230_0 & 0xFFFF
??CrossCallReturnLabel_412:
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R4
        MOV     R2,A
//  699   byte endPoint = inMsg->asdu[2];
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
//  700   byte free = false;
        MOV     ?V1,#0x0
//  701   byte stat = ZDP_SUCCESS;
        MOV     ?V0,#0x0
//  702 
//  703   if ( (endPoint == ZDO_EP) || (endPoint > MAX_ENDPOINTS) )
        JZ      ??ZDO_ProcessSimpleDescReq_0
        MOV     A,#-0x1
        XRL     A,R1
        JNZ     ??ZDO_ProcessSimpleDescReq_1
//  704   {
//  705     stat = ZDP_INVALID_EP;
??ZDO_ProcessSimpleDescReq_0:
        MOV     ?V0,#-0x7e
        SJMP    ??ZDO_ProcessSimpleDescReq_2
//  706   }
//  707   else if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??ZDO_ProcessSimpleDescReq_1:
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,R2
        JNZ     ??ZDO_ProcessSimpleDescReq_3
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R3
??ZDO_ProcessSimpleDescReq_3:
        JNZ     ??ZDO_ProcessSimpleDescReq_4
//  708   {
//  709     free = afFindSimpleDesc( &sDesc, endPoint );
        ; Setup parameters for call to function afFindSimpleDesc
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   `??afFindSimpleDesc::?relay`; Banked call to: afFindSimpleDesc
        MOV     A,R1
        MOV     R2,A
//  710     if ( sDesc == NULL )
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine234_0 & 0xFFFF
??CrossCallReturnLabel_430:
        JNZ     ??ZDO_ProcessSimpleDescReq_5
//  711     {
//  712       stat = ZDP_NOT_ACTIVE;
        MOV     ?V0,#-0x7d
??ZDO_ProcessSimpleDescReq_5:
        MOV     ?V1,R2
        SJMP    ??ZDO_ProcessSimpleDescReq_2
//  713     }
//  714   }
//  715   else
//  716   {
//  717     if ( ZSTACK_ROUTER_BUILD )
??ZDO_ProcessSimpleDescReq_4:
        MOV     DPTR,#zgDeviceLogicalType
        MOVX    A,@DPTR
        JZ      ??ZDO_ProcessSimpleDescReq_6
        XRL     A,#0x1
        JNZ     ??ZDO_ProcessSimpleDescReq_7
//  718     {
//  719       stat = ZDP_DEVICE_NOT_FOUND;
??ZDO_ProcessSimpleDescReq_6:
        MOV     ?V0,#-0x7f
        SJMP    ??ZDO_ProcessSimpleDescReq_2
//  720     }
//  721     else if ( ZSTACK_END_DEVICE_BUILD )
??ZDO_ProcessSimpleDescReq_7:
        MOVX    A,@DPTR
        XRL     A,#0x2
        JNZ     ??ZDO_ProcessSimpleDescReq_2
//  722     {
//  723       stat = ZDP_INVALID_REQTYPE;
        MOV     ?V0,#-0x80
//  724     }
//  725   }
//  726 
//  727   ZDP_SimpleDescMsg( inMsg, stat, sDesc );
??ZDO_ProcessSimpleDescReq_2:
        ; Setup parameters for call to function ZDP_SimpleDescMsg
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine250_0 & 0xFFFF
??CrossCallReturnLabel_555:
        MOV     R5,A
        MOV     R1,?V0
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??ZDP_SimpleDescMsg::?relay`; Banked call to: ZDP_SimpleDescMsg
//  728 
//  729   if ( free && sDesc )
        MOV     A,?V1
        JZ      ??ZDO_ProcessSimpleDescReq_8
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine234_0 & 0xFFFF
??CrossCallReturnLabel_431:
        JZ      ??ZDO_ProcessSimpleDescReq_8
//  730   {
//  731     osal_mem_free( sDesc );
        ; Setup parameters for call to function osal_mem_free
        LCALL   ??Subroutine240_0 & 0xFFFF
//  732   }
??CrossCallReturnLabel_503:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
//  733 }
??ZDO_ProcessSimpleDescReq_8:
        LJMP    ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock79
//  734 
//  735 /*********************************************************************
//  736  * @fn          ZDO_ProcessActiveEPReq
//  737  *
//  738  * @brief       This function processes and responds to the
//  739  *              Active_EP_req message.
//  740  *
//  741  * @param       inMsg  - incoming message (request)
//  742  *
//  743  * @return      none
//  744  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  745 void ZDO_ProcessActiveEPReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessActiveEPReq:
          CFI Block cfiBlock80 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
        CODE
//  746 {
        FUNCALL ZDO_ProcessActiveEPReq, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, afNumEndPoints
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, afEndPoints
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  747   byte cnt = 0;
        MOV     ?V0,#0x0
//  748   uint16 aoi;
//  749   byte stat = ZDP_SUCCESS;
        MOV     ?V1,#0x0
//  750 
//  751   aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_110:
        MOV     ?V2,A
        CLR     A
        ADDC    A,R1
        MOV     ?V3,A
//  752 
//  753   if ( aoi == NLME_GetShortAddr() )
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV     A,R2
        XRL     A,?V2
        JNZ     ??ZDO_ProcessActiveEPReq_0
        MOV     A,R3
        XRL     A,?V3
??ZDO_ProcessActiveEPReq_0:
        JNZ     ??ZDO_ProcessActiveEPReq_1
//  754   {
//  755     cnt = afNumEndPoints() - 1;  // -1 for ZDO endpoint descriptor
        ; Setup parameters for call to function afNumEndPoints
        LCALL   `??afNumEndPoints::?relay`; Banked call to: afNumEndPoints
        MOV     A,R1
        DEC     A
        MOV     ?V0,A
//  756     afEndPoints( (uint8 *)ZDOBuildBuf, true );
        ; Setup parameters for call to function afEndPoints
        MOV     R1,#0x1
        MOV     R2,#ZDOBuildBuf & 0xff
        MOV     R3,#(ZDOBuildBuf >> 8) & 0xff
        LCALL   `??afEndPoints::?relay`; Banked call to: afEndPoints
        SJMP    ??ZDO_ProcessActiveEPReq_2
//  757   }
//  758   else
//  759   {
//  760     stat = ZDP_INVALID_REQTYPE;
??ZDO_ProcessActiveEPReq_1:
        MOV     ?V1,#-0x80
//  761   }
//  762 
//  763   ZDP_ActiveEPRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat,
//  764                   aoi, cnt, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse );
??ZDO_ProcessActiveEPReq_2:
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL   ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_552:
        MOV     ?V4,A
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     ?V4,#ZDOBuildBuf & 0xff
        MOV     ?V5,#(ZDOBuildBuf >> 8) & 0xff
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,?V1
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        LCALL   ?Subroutine182 & 0xFFFF
??CrossCallReturnLabel_408:
        LCALL   ??Subroutine249_0 & 0xFFFF
??CrossCallReturnLabel_541:
        MOV     R1,A
        MOV     R2,#0x5
        MOV     R3,#-0x80
        LCALL   `??ZDP_EPRsp::?relay`; Banked call to: ZDP_EPRsp
        MOV     A,#0x7
        LJMP    ?Subroutine5 & 0xFFFF
//  765 }
          CFI EndBlock cfiBlock80
//  766 
//  767 /*********************************************************************
//  768  * @fn          ZDO_ConvertOTAClusters
//  769  *
//  770  * @brief       This function will convert the over-the-air cluster list
//  771  *              format to an internal format.
//  772  *
//  773  * @param       inMsg  - incoming message (request)
//  774  *
//  775  * @return      pointer to incremented inBuf
//  776  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  777 uint8 *ZDO_ConvertOTAClusters( uint8 cnt, uint8 *inBuf, uint16 *outList )
ZDO_ConvertOTAClusters:
          CFI Block cfiBlock81 Using cfiCommon0
          CFI Function ZDO_ConvertOTAClusters
        CODE
//  778 {
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     ?V1,R1
//  779   uint8 x;
//  780 
//  781   for ( x = 0; x < cnt; x++ )
        MOV     ?V0,#0x0
        SJMP    ??ZDO_ConvertOTAClusters_0
//  782   {
//  783     // convert ota format to internal
//  784     outList[x] = BUILD_UINT16( inBuf[0], inBuf[1] );
??ZDO_ConvertOTAClusters_1:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine256_0 & 0xFFFF
??CrossCallReturnLabel_610:
        MOV     R0,A
        CLR     A
        XCH     A,R0
        MOV     R1,A
        MOV     A,R6
        ADD     A,R0
        CLR     A
        ADDC    A,R1
        MOV     R7,A
        LCALL   ?Subroutine118 & 0xFFFF
??CrossCallReturnLabel_331:
        MOV     A,R4
        ADD     A,R0
        MOV     DPL,A
        MOV     A,R5
        ADDC    A,R1
        MOV     DPH,A
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        MOVX    @DPTR,A
//  785     inBuf += sizeof( uint16 );
        MOV     A,R2
        ADD     A,#0x2
        MOV     R2,A
        JNC     ??ZDO_ConvertOTAClusters_2
        INC     R3
//  786   }
??ZDO_ConvertOTAClusters_2:
        INC     ?V0
??ZDO_ConvertOTAClusters_0:
        MOV     A,?V0
        CLR     C
        SUBB    A,?V1
        JC      ??ZDO_ConvertOTAClusters_1
//  787   return ( inBuf );
        LJMP    ??Subroutine210_0 & 0xFFFF
//  788 }
          CFI EndBlock cfiBlock81
//  789 
//  790 /*********************************************************************
//  791  * @fn          ZDO_ProcessMatchDescReq
//  792  *
//  793  * @brief       This function processes and responds to the
//  794  *              Match_Desc_req message.
//  795  *
//  796  * @param       inMsg  - incoming message (request)
//  797  *
//  798  * @return      none
//  799  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  800 void ZDO_ProcessMatchDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMatchDescReq:
          CFI Block cfiBlock82 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
        CODE
//  801 {
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_AnyClusterMatches
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_AnyClusterMatches
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 5
        MOV     A,#-0x5
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     ?V14,R2
        MOV     ?V15,R3
//  802   uint8 epCnt = 0;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
//  803   uint8 numInClusters;
//  804   uint16 *inClusters = NULL;
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  805   uint8 numOutClusters;
//  806   uint16 *outClusters = NULL;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  807   epList_t *epDesc;
//  808   SimpleDescriptionFormat_t *sDesc = NULL;
//  809   uint8 allocated;
//  810   uint8 *msg;
//  811   uint16 aoi;
//  812   uint16 profileID;
//  813 
//  814   // Parse the incoming message
//  815   msg = inMsg->asdu;
        LCALL   ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_388:
        ADDC    A,?V15
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_339:
        MOV     ?V3,A
//  816   aoi = BUILD_UINT16( msg[0], msg[1] );
        MOV     DPL,?V2
        MOV     DPH,A
        LCALL   ??Subroutine270_0 & 0xFFFF
??CrossCallReturnLabel_687:
        MOV     R6,A
        CLR     A
        ADDC    A,R1
        MOV     R7,A
//  817   profileID = BUILD_UINT16( msg[2], msg[3] );
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        MOV     ?V0,A
        CLR     A
        ADDC    A,R1
        MOV     ?V1,A
//  818   msg += 4;
//  819 
//  820   if ( ADDR_BCAST_NOT_ME == NLME_IsAddressBroadcast(aoi) )
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??NLME_IsAddressBroadcast::?relay`; Banked call to: NLME_IsAddressBroadcast
        MOV     A,R1
        XRL     A,#0x1
        JZ      ??ZDO_ProcessMatchDescReq_0
//  821   {
//  822     ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_INVALID_REQTYPE,
//  823                           ZDAppNwkAddr.addr.shortAddr, 0, NULL, inMsg->SecurityUse );
//  824     return;
//  825   }
//  826   else if ( (ADDR_NOT_BCAST == NLME_IsAddressBroadcast(aoi)) && (aoi != ZDAppNwkAddr.addr.shortAddr) )
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??NLME_IsAddressBroadcast::?relay`; Banked call to: NLME_IsAddressBroadcast
        MOV     A,R1
        JNZ     ??ZDO_ProcessMatchDescReq_1
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,R6
        JNZ     ??ZDO_ProcessMatchDescReq_2
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R7
??ZDO_ProcessMatchDescReq_2:
        JZ      ??ZDO_ProcessMatchDescReq_1
//  827   {
//  828     ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_INVALID_REQTYPE,
//  829                              ZDAppNwkAddr.addr.shortAddr, 0, NULL, inMsg->SecurityUse );
??ZDO_ProcessMatchDescReq_0:
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_348:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        CLR     A
        MOV     ?V0,A
        MOV     ?V1,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     ?V0,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        LCALL   ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_208:
        LCALL   `??ZDP_EPRsp::?relay`; Banked call to: ZDP_EPRsp
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
//  830     return;
        LJMP    ??ZDO_ProcessMatchDescReq_3 & 0xFFFF
//  831   }
//  832 
//  833   if ((numInClusters = *msg++) &&
//  834       (inClusters = (uint16*)osal_mem_alloc( numInClusters * sizeof( uint16 ) )))
??ZDO_ProcessMatchDescReq_1:
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V8,A
        MOV     A,?V2
        ADD     A,#0x5
        MOV     ?V2,A
        JNC     ??ZDO_ProcessMatchDescReq_4
        INC     ?V3
??ZDO_ProcessMatchDescReq_4:
        MOV     A,?V8
        JZ      ??ZDO_ProcessMatchDescReq_5
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ??Subroutine266_0 & 0xFFFF
??CrossCallReturnLabel_668:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_73:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine234_0 & 0xFFFF
??CrossCallReturnLabel_432:
        JZ      ??ZDO_ProcessMatchDescReq_5
//  835   {
//  836     msg = ZDO_ConvertOTAClusters( numInClusters, msg, inClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine106 & 0xFFFF
//  837   }
??CrossCallReturnLabel_164:
        MOV     R1,?V8
        LCALL   `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        MOV     ?V2,R2
        MOV     ?V3,R3
        SJMP    ??ZDO_ProcessMatchDescReq_6
//  838   else
//  839   {
//  840     numInClusters = 0;
??ZDO_ProcessMatchDescReq_5:
        MOV     ?V8,#0x0
//  841   }
//  842 
//  843   if ((numOutClusters = *msg++) &&
//  844       (outClusters = (uint16 *)osal_mem_alloc( numOutClusters * sizeof( uint16 ) )))
??ZDO_ProcessMatchDescReq_6:
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_154:
        JZ      ??ZDO_ProcessMatchDescReq_7
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ??Subroutine266_0 & 0xFFFF
??CrossCallReturnLabel_669:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_334:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine234_0 & 0xFFFF
??CrossCallReturnLabel_433:
        JZ      ??ZDO_ProcessMatchDescReq_7
//  845   {
//  846     msg = ZDO_ConvertOTAClusters( numOutClusters, msg, outClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine106 & 0xFFFF
//  847   }
??CrossCallReturnLabel_165:
        MOV     R1,?V7
        LCALL   `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        SJMP    ??ZDO_ProcessMatchDescReq_8
//  848   else
//  849   {
//  850     numOutClusters = 0;
??ZDO_ProcessMatchDescReq_7:
        MOV     ?V7,#0x0
//  851   }
//  852 
//  853   // First count the number of endpoints that match.
//  854   epDesc = epList;
??ZDO_ProcessMatchDescReq_8:
        MOV     DPTR,#epList
        SJMP    ??ZDO_ProcessMatchDescReq_9
//  855   while ( epDesc )
//  856   {
//  857     // Don't search endpoint 0 and check if response is allowed
//  858     if ( epDesc->epDesc->endPoint != ZDO_EP && (epDesc->flags&eEP_AllowMatch) )
//  859     {
//  860       if ( epDesc->pfnDescCB )
//  861       {
//  862         sDesc = (SimpleDescriptionFormat_t *)epDesc->pfnDescCB( AF_DESCRIPTOR_SIMPLE, epDesc->epDesc->endPoint );
//  863         allocated = TRUE;
//  864       }
//  865       else
//  866       {
//  867         sDesc = epDesc->epDesc->simpleDesc;
//  868         allocated = FALSE;
//  869       }
//  870 
//  871       // Allow specific ProfileId or Wildcard ProfileID
//  872       if ( sDesc && ( ( sDesc->AppProfId == profileID ) || ( profileID == ZDO_WILDCARD_PROFILE_ID ) ) )
//  873       {
//  874         uint8 *uint8Buf = (uint8 *)ZDOBuildBuf;
//  875 
//  876         // Are there matching input clusters?
//  877         if ((ZDO_AnyClusterMatches( numInClusters, inClusters,
//  878                    sDesc->AppNumInClusters, sDesc->pAppInClusterList )) ||
//  879             // Are there matching output clusters?
//  880             (ZDO_AnyClusterMatches( numOutClusters, outClusters,
//  881                    sDesc->AppNumOutClusters, sDesc->pAppOutClusterList )))
//  882         {
//  883           // Notify the endpoint of the match.
//  884           uint8 bufLen = sizeof( ZDO_MatchDescRspSent_t ) + (numOutClusters + numInClusters) * sizeof(uint16);
//  885           ZDO_MatchDescRspSent_t *pRspSent = (ZDO_MatchDescRspSent_t *) osal_msg_allocate( bufLen );
//  886 
//  887           if (pRspSent)
//  888           {
//  889             pRspSent->hdr.event = ZDO_MATCH_DESC_RSP_SENT;
//  890             pRspSent->nwkAddr = inMsg->srcAddr.addr.shortAddr;
//  891             pRspSent->numInClusters = numInClusters;
//  892             pRspSent->numOutClusters = numOutClusters;
//  893 
//  894             if (numInClusters)
//  895             {
//  896               pRspSent->pInClusters = (uint16*) (pRspSent + 1);
//  897               osal_memcpy(pRspSent->pInClusters, inClusters, numInClusters * sizeof(uint16));
//  898             }
//  899             else
//  900             {
//  901               pRspSent->pInClusters = NULL;
//  902             }
//  903 
//  904             if (numOutClusters)
//  905             {
//  906               pRspSent->pOutClusters = (uint16*)(pRspSent + 1) + numInClusters;
//  907               osal_memcpy(pRspSent->pOutClusters, outClusters, numOutClusters * sizeof(uint16));
//  908             }
//  909             else
//  910             {
//  911               pRspSent->pOutClusters = NULL;
??ZDO_ProcessMatchDescReq_10:
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  912             }
//  913 
//  914             osal_msg_send( *epDesc->epDesc->task_id, (uint8 *)pRspSent );
??ZDO_ProcessMatchDescReq_11:
        ; Setup parameters for call to function osal_msg_send
        MOV     R2,?V2
        MOV     R3,?V3
        MOV     DPL,?V12
        MOV     DPH,?V13
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        LCALL   ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_400:
        MOV     R1,A
        LCALL   `??osal_msg_send::?relay`; Banked call to: osal_msg_send
//  915           }
//  916 
//  917           uint8Buf[epCnt++] = sDesc->EndPoint;
??ZDO_ProcessMatchDescReq_12:
        MOV     DPL,?V10
        MOV     DPH,?V11
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#ZDOBuildBuf & 0xff
        ADD     A,R0
        MOV     DPL,A
        CLR     A
        ADDC    A,#(ZDOBuildBuf >> 8) & 0xff
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine28 & 0xFFFF
??CrossCallReturnLabel_33:
        INC     A
        MOVX    @DPTR,A
//  918         }
//  919       }
//  920 
//  921       if ( allocated )
??ZDO_ProcessMatchDescReq_13:
        MOV     A,?V9
        MOV     C,0xE0 /* A   */.0
        JNC     ??ZDO_ProcessMatchDescReq_14
//  922       {
//  923         osal_mem_free( sDesc );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V10
        MOV     R3,?V11
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
//  924       }
//  925     }
//  926     epDesc = epDesc->nextDesc;
??ZDO_ProcessMatchDescReq_14:
        MOV     DPL,?V12
        MOV     DPH,?V13
??ZDO_ProcessMatchDescReq_9:
        MOVX    A,@DPTR
        MOV     ?V12,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V13,A
        MOV     A,?V12
        ORL     A,?V13
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_15 & 0xFFFF
        MOV     DPL,?V12
        MOV     DPH,?V13
        INC     DPTR
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_398:
        JZ      ??ZDO_ProcessMatchDescReq_14
        MOV     DPL,?V12
        MOV     DPH,?V13
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.0
        JNC     ??ZDO_ProcessMatchDescReq_14
        MOV     DPL,?V12
        MOV     DPH,?V13
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine234_0 & 0xFFFF
??CrossCallReturnLabel_434:
        MOV     DPL,?V12
        MOV     DPH,?V13
        INC     DPTR
        INC     DPTR
        JZ      ??ZDO_ProcessMatchDescReq_16
        ; Setup parameters for indirect call
        LCALL   ??Subroutine228_0 & 0xFFFF
??CrossCallReturnLabel_392:
        MOV     R2,A
        MOV     R1,#0x1
        MOV     DPL,?V12
        MOV     DPH,?V13
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_176:
        LCALL   ?CALL_IND
        MOV     ?V10,R2
        MOV     ?V11,R3
        MOV     ?V9,#0x1
        SJMP    ??ZDO_ProcessMatchDescReq_17
??ZDO_ProcessMatchDescReq_16:
        LCALL   ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_177:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V10,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V11,A
        MOV     ?V9,#0x0
??ZDO_ProcessMatchDescReq_17:
        MOV     A,?V10
        ORL     A,?V11
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_13 & 0xFFFF
        MOV     DPL,?V10
        MOV     DPH,?V11
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0
        JNZ     ??ZDO_ProcessMatchDescReq_18
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V1
??ZDO_ProcessMatchDescReq_18:
        JZ      ??ZDO_ProcessMatchDescReq_19
        MOV     A,#-0x1
        XRL     A,?V0
        JNZ     ??ZDO_ProcessMatchDescReq_20
        MOV     A,#-0x1
        XRL     A,?V1
??ZDO_ProcessMatchDescReq_20:
        JZ      $+5
        LJMP    ??ZDO_ProcessMatchDescReq_13 & 0xFFFF
??ZDO_ProcessMatchDescReq_19:
        ; Setup parameters for call to function ZDO_AnyClusterMatches
        MOV     DPL,?V10
        MOV     DPH,?V11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     DPL,?V10
        MOV     DPH,?V11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_480:
        MOV     R1,?V8
        LCALL   `??ZDO_AnyClusterMatches::?relay`; Banked call to: ZDO_AnyClusterMatches
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R1
        JNZ     ??ZDO_ProcessMatchDescReq_21
        ; Setup parameters for call to function ZDO_AnyClusterMatches
        MOV     DPL,?V10
        MOV     DPH,?V11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     DPL,?V10
        MOV     DPH,?V11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_481:
        MOV     R1,?V7
        LCALL   `??ZDO_AnyClusterMatches::?relay`; Banked call to: ZDO_AnyClusterMatches
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R1
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_13 & 0xFFFF
??ZDO_ProcessMatchDescReq_21:
        ; Setup parameters for call to function osal_msg_allocate
        MOV     A,?V7
        ADD     A,?V8
        CLR     C
        RLC     A
        ADD     A,#0xa
        MOV     R2,A
        MOV     R3,#0x0
        LCALL   `??osal_msg_allocate::?relay`; Banked call to: osal_msg_allocate
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     A,R2
        ORL     A,?V3
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_12 & 0xFFFF
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x2e
        MOVX    @DPTR,A
        MOV     DPL,?V14
        MOV     DPH,?V15
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine232_0 & 0xFFFF
??CrossCallReturnLabel_413:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_34:
        INC     DPTR
        MOV     A,?V8
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_10:
        MOV     A,?V7
        MOVX    @DPTR,A
        MOV     A,?V8
        JZ      ??ZDO_ProcessMatchDescReq_22
        LCALL   ?Subroutine187 & 0xFFFF
??CrossCallReturnLabel_618:
        ADDC    A,?V3
        MOV     R3,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_71:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_146:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     R4,?V8
        MOV     A,R4
        ADD     A,R4
        MOV     R4,A
        CLR     A
        RLC     A
        MOV     R5,A
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        SJMP    ??ZDO_ProcessMatchDescReq_23
??ZDO_ProcessMatchDescReq_22:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
??ZDO_ProcessMatchDescReq_23:
        MOV     A,?V7
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_10 & 0xFFFF
        MOV     R0,?V8
        LCALL   ??Subroutine206_0 & 0xFFFF
??CrossCallReturnLabel_328:
        MOV     A,?V2
        ADD     A,R0
        MOV     R0,A
        MOV     A,?V3
        ADDC    A,R1
        MOV     R1,A
        MOV     A,R0
        LCALL   ??Subroutine258_0 & 0xFFFF
??CrossCallReturnLabel_615:
        ADDC    A,R1
        MOV     R3,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_335:
        ; Setup parameters for call to function osal_memcpy
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine89 & 0xFFFF
//  927   }
??CrossCallReturnLabel_147:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     R4,?V7
        MOV     A,R4
        ADD     A,R4
        MOV     R4,A
        CLR     A
        RLC     A
        MOV     R5,A
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        LJMP    ??ZDO_ProcessMatchDescReq_11 & 0xFFFF
//  928 
//  929   if ( epCnt )
??ZDO_ProcessMatchDescReq_15:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        JZ      ??ZDO_ProcessMatchDescReq_24
//  930   {
//  931     // Send the message if at least one match found.
//  932     if ( ZSuccess == ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_SUCCESS,
//  933               ZDAppNwkAddr.addr.shortAddr, epCnt, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse ) )
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL   ?Subroutine78 & 0xFFFF
//  934     {
//  935 #if defined( LCD_SUPPORTED )
//  936       HalLcdWriteScreen( "Match Desc Req", "Rsp Sent" );
//  937 #endif
//  938     }
//  939   }
??CrossCallReturnLabel_349:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0,#ZDOBuildBuf & 0xff
        MOV     ?V1,#(ZDOBuildBuf >> 8) & 0xff
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_343:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     ?V0,#0x0
        SJMP    ??ZDO_ProcessMatchDescReq_25
          CFI CFA_XSP16 add(XSP16, 29)
//  940   else
//  941   {
//  942     // No match found
//  943     if (ADDR_NOT_BCAST == NLME_IsAddressBroadcast(aoi))
??ZDO_ProcessMatchDescReq_24:
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??NLME_IsAddressBroadcast::?relay`; Banked call to: NLME_IsAddressBroadcast
        MOV     A,R1
        JNZ     ??ZDO_ProcessMatchDescReq_26
//  944     {
//  945       // send response message with match length = 0
//  946       ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_SUCCESS,
//  947                         ZDAppNwkAddr.addr.shortAddr, 0, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL   ?Subroutine78 & 0xFFFF
//  948 #if defined( LCD_SUPPORTED )
//  949       HalLcdWriteScreen( "Match Desc Req", "Rsp Non Matched" );
//  950 #endif
//  951     }
//  952     else
//  953     {
//  954       // no response mesage for broadcast message
//  955 #if defined( LCD_SUPPORTED )
//  956       HalLcdWriteScreen( "Match Desc Req", "Non Matched" );
//  957 #endif
//  958     }
//  959   }
??CrossCallReturnLabel_350:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0,#ZDOBuildBuf & 0xff
        MOV     ?V1,#(ZDOBuildBuf >> 8) & 0xff
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 35)
??ZDO_ProcessMatchDescReq_25:
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        LCALL   ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_209:
        LCALL   `??ZDP_EPRsp::?relay`; Banked call to: ZDP_EPRsp
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
//  960 
//  961   if ( inClusters != NULL )
??ZDO_ProcessMatchDescReq_26:
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine234_0 & 0xFFFF
??CrossCallReturnLabel_435:
        JZ      ??ZDO_ProcessMatchDescReq_27
//  962   {
//  963     osal_mem_free( inClusters );
        ; Setup parameters for call to function osal_mem_free
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine241_0 & 0xFFFF
//  964   }
??CrossCallReturnLabel_482:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
//  965 
//  966   if ( outClusters != NULL )
??ZDO_ProcessMatchDescReq_27:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine234_0 & 0xFFFF
??CrossCallReturnLabel_436:
        JZ      ??ZDO_ProcessMatchDescReq_3
//  967   {
//  968     osal_mem_free( outClusters );
        ; Setup parameters for call to function osal_mem_free
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine241_0 & 0xFFFF
//  969   }
??CrossCallReturnLabel_483:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
//  970 }
??ZDO_ProcessMatchDescReq_3:
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     R7,#0x10
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock82

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine132:
          CFI Block cfiCond83 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_208
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond84 Using cfiCommon0
          CFI (cfiCond84) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond84) Conditional ??CrossCallReturnLabel_209
          CFI (cfiCond84) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond84) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond84) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond84) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond84) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond84) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond84) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond84) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond84) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond84) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond84) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond84) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond84) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond84) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond84) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond84) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond84) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond84) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond84) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond84) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond84) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond84) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond84) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond84) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond84) CFA_SP SP+-2
          CFI (cfiCond84) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker85 Using cfiCommon1
          CFI (cfiPicker85) NoFunction
          CFI (cfiPicker85) Picker
        MOV     A,?V14
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,?V15
        MOV     R5,A
        MOV     A,?V14
        ADD     A,#0xf
        MOV     DPL,A
        CLR     A
        ADDC    A,?V15
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     R2,#0x6
        MOV     R3,#-0x80
        RET
          CFI EndBlock cfiCond83
          CFI EndBlock cfiCond84
          CFI EndBlock cfiPicker85

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine112:
          CFI Block cfiCond86 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_176
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond87 Using cfiCommon0
          CFI (cfiCond87) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond87) Conditional ??CrossCallReturnLabel_177
          CFI (cfiCond87) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond87) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond87) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond87) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond87) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond87) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond87) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond87) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond87) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond87) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond87) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond87) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond87) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond87) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond87) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond87) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond87) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond87) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond87) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond87) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond87) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond87) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond87) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond87) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond87) CFA_SP SP+-2
          CFI (cfiCond87) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker88 Using cfiCommon1
          CFI (cfiPicker88) NoFunction
          CFI (cfiPicker88) Picker
        LCALL   ?Subroutine169 & 0xFFFF
??CrossCallReturnLabel_402:
        RET
          CFI EndBlock cfiCond86
          CFI EndBlock cfiCond87
          CFI EndBlock cfiPicker88

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine169:
          CFI Block cfiCond89 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_402, ??CrossCallReturnLabel_176
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond90 Using cfiCommon0
          CFI (cfiCond90) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond90) Conditional ??CrossCallReturnLabel_402, ??CrossCallReturnLabel_177
          CFI (cfiCond90) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond90) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond90) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond90) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond90) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond90) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond90) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond90) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond90) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond90) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond90) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond90) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond90) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond90) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond90) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond90) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond90) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond90) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond90) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond90) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond90) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond90) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond90) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond90) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond90) CFA_SP SP+-4
          CFI (cfiCond90) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond91 Using cfiCommon0
          CFI (cfiCond91) Function ZDO_UpdateNwkStatus
          CFI (cfiCond91) Conditional ??CrossCallReturnLabel_403, ??CrossCallReturnLabel_399
          CFI (cfiCond91) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond91) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond91) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond91) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond91) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond91) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond91) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond91) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond91) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond91) CFA_SP SP+-4
          CFI (cfiCond91) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond92 Using cfiCommon0
          CFI (cfiCond92) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond92) Conditional ??CrossCallReturnLabel_403, ??CrossCallReturnLabel_400
          CFI (cfiCond92) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond92) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond92) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond92) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond92) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond92) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond92) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond92) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond92) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond92) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond92) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond92) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond92) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond92) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond92) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond92) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond92) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond92) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond92) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond92) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond92) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond92) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond92) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond92) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond92) CFA_SP SP+-4
          CFI (cfiCond92) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond93 Using cfiCommon0
          CFI (cfiCond93) Function ZDO_UpdateNwkStatus
          CFI (cfiCond93) Conditional ??CrossCallReturnLabel_403, ??CrossCallReturnLabel_397
          CFI (cfiCond93) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond93) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond93) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond93) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond93) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond93) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond93) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond93) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond93) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond93) CFA_SP SP+-4
          CFI (cfiCond93) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond94 Using cfiCommon0
          CFI (cfiCond94) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond94) Conditional ??CrossCallReturnLabel_403, ??CrossCallReturnLabel_398
          CFI (cfiCond94) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond94) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond94) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond94) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond94) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond94) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond94) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond94) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond94) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond94) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond94) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond94) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond94) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond94) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond94) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond94) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond94) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond94) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond94) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond94) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond94) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond94) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond94) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond94) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond94) CFA_SP SP+-4
          CFI (cfiCond94) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond95 Using cfiCommon0
          CFI (cfiCond95) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond95) Conditional ??CrossCallReturnLabel_403, ??CrossCallReturnLabel_392
          CFI (cfiCond95) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond95) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond95) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond95) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond95) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond95) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond95) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond95) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond95) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond95) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond95) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond95) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond95) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond95) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond95) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond95) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond95) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond95) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond95) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond95) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond95) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond95) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond95) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond95) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond95) CFA_SP SP+-4
          CFI (cfiCond95) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond96 Using cfiCommon0
          CFI (cfiCond96) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond96) Conditional ??CrossCallReturnLabel_403, ??CrossCallReturnLabel_393
          CFI (cfiCond96) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond96) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond96) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond96) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond96) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond96) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond96) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond96) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond96) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond96) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond96) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond96) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond96) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond96) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond96) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond96) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond96) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond96) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond96) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond96) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond96) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond96) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond96) CFA_SP SP+-4
          CFI (cfiCond96) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond97 Using cfiCommon0
          CFI (cfiCond97) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond97) Conditional ??CrossCallReturnLabel_403, ??CrossCallReturnLabel_394
          CFI (cfiCond97) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond97) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond97) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond97) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond97) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond97) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond97) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond97) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond97) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond97) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond97) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond97) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond97) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond97) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond97) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond97) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond97) CFA_SP SP+-4
          CFI (cfiCond97) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond98 Using cfiCommon0
          CFI (cfiCond98) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond98) Conditional ??CrossCallReturnLabel_403, ??CrossCallReturnLabel_395
          CFI (cfiCond98) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond98) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond98) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond98) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond98) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond98) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond98) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond98) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond98) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond98) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond98) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond98) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond98) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond98) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond98) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond98) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond98) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond98) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond98) CFA_SP SP+-4
          CFI (cfiCond98) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond99 Using cfiCommon0
          CFI (cfiCond99) Function ZDO_ParseEndDeviceTimeoutRsp
          CFI (cfiCond99) Conditional ??CrossCallReturnLabel_403, ??CrossCallReturnLabel_396
          CFI (cfiCond99) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond99) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond99) CFA_SP SP+-9
          CFI Block cfiCond100 Using cfiCommon0
          CFI (cfiCond100) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond100) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_123
          CFI (cfiCond100) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond100) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond100) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond100) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond100) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond100) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond100) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond100) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond100) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond100) CFA_SP SP+-4
          CFI (cfiCond100) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond101 Using cfiCommon0
          CFI (cfiCond101) Function ZDMatchSendState
          CFI (cfiCond101) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_124
          CFI (cfiCond101) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond101) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond101) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond101) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond101) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond101) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond101) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond101) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond101) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond101) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond101) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond101) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond101) CFA_SP SP+-4
          CFI (cfiCond101) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker102 Using cfiCommon1
          CFI (cfiPicker102) NoFunction
          CFI (cfiPicker102) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        RET
          CFI EndBlock cfiCond89
          CFI EndBlock cfiCond90
          CFI EndBlock cfiCond91
          CFI EndBlock cfiCond92
          CFI EndBlock cfiCond93
          CFI EndBlock cfiCond94
          CFI EndBlock cfiCond95
          CFI EndBlock cfiCond96
          CFI EndBlock cfiCond97
          CFI EndBlock cfiCond98
          CFI EndBlock cfiCond99
          CFI EndBlock cfiCond100
          CFI EndBlock cfiCond101
          CFI EndBlock cfiPicker102

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine106:
          CFI Block cfiCond103 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_164
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond104 Using cfiCommon0
          CFI (cfiCond104) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond104) Conditional ??CrossCallReturnLabel_165
          CFI (cfiCond104) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond104) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond104) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond104) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond104) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond104) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond104) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond104) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond104) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond104) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond104) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond104) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond104) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond104) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond104) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond104) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond104) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond104) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond104) CFA_SP SP+-2
          CFI (cfiCond104) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker105 Using cfiCommon1
          CFI (cfiPicker105) NoFunction
          CFI (cfiPicker105) Picker
        LCALL   ??Subroutine250_0 & 0xFFFF
??CrossCallReturnLabel_558:
        MOV     R5,A
        MOV     R2,?V2
        MOV     R3,?V3
        RET
          CFI EndBlock cfiCond103
          CFI EndBlock cfiCond104
          CFI EndBlock cfiPicker105

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine89:
          CFI Block cfiCond106 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_146
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond107 Using cfiCommon0
          CFI (cfiCond107) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond107) Conditional ??CrossCallReturnLabel_147
          CFI (cfiCond107) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond107) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond107) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond107) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond107) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond107) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond107) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond107) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond107) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond107) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond107) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond107) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond107) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond107) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond107) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond107) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond107) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond107) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond107) CFA_SP SP+-2
          CFI (cfiCond107) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker108 Using cfiCommon1
          CFI (cfiPicker108) NoFunction
          CFI (cfiPicker108) Picker
        MOVX    A,@DPTR
        MOV     ?V4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V5,A
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        RET
          CFI EndBlock cfiCond106
          CFI EndBlock cfiCond107
          CFI EndBlock cfiPicker108

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine51:
          CFI Block cfiCond109 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_333
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond110 Using cfiCommon0
          CFI (cfiCond110) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond110) Conditional ??CrossCallReturnLabel_334
          CFI (cfiCond110) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond110) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond110) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond110) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond110) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond110) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond110) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond110) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond110) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond110) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond110) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond110) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond110) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond110) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond110) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond110) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond110) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond110) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond110) CFA_SP SP+-2
          CFI (cfiCond110) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond111 Using cfiCommon0
          CFI (cfiCond111) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond111) Conditional ??CrossCallReturnLabel_335
          CFI (cfiCond111) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond111) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond111) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond111) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond111) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond111) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond111) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond111) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond111) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond111) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond111) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond111) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond111) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond111) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond111) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond111) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond111) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond111) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond111) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond111) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond111) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond111) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond111) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond111) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond111) CFA_SP SP+-2
          CFI (cfiCond111) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond112 Using cfiCommon0
          CFI (cfiCond112) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond112) Conditional ??CrossCallReturnLabel_336
          CFI (cfiCond112) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond112) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond112) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond112) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond112) CFA_SP SP+-2
          CFI (cfiCond112) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond113 Using cfiCommon0
          CFI (cfiCond113) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond113) Conditional ??CrossCallReturnLabel_337
          CFI (cfiCond113) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond113) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond113) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond113) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond113) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond113) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond113) CFA_SP SP+-2
          CFI (cfiCond113) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker114 Using cfiCommon1
          CFI (cfiPicker114) NoFunction
          CFI (cfiPicker114) Picker
        MOV     A,R2
          CFI EndBlock cfiCond109
          CFI EndBlock cfiCond110
          CFI EndBlock cfiCond111
          CFI EndBlock cfiCond112
          CFI EndBlock cfiCond113
          CFI EndBlock cfiPicker114
        REQUIRE ??Subroutine211_0
        ; // Fall through to label ??Subroutine211_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine211_0:
          CFI Block cfiCond115 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_332
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond116 Using cfiCommon0
          CFI (cfiCond116) Function ZDO_UpdateNwkStatus
          CFI (cfiCond116) Conditional ??CrossCallReturnLabel_333
          CFI (cfiCond116) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond116) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond116) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond116) CFA_SP SP+-2
          CFI (cfiCond116) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond117 Using cfiCommon0
          CFI (cfiCond117) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond117) Conditional ??CrossCallReturnLabel_334
          CFI (cfiCond117) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond117) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond117) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond117) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond117) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond117) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond117) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond117) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond117) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond117) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond117) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond117) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond117) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond117) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond117) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond117) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond117) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond117) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond117) CFA_SP SP+-2
          CFI (cfiCond117) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond118 Using cfiCommon0
          CFI (cfiCond118) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond118) Conditional ??CrossCallReturnLabel_335
          CFI (cfiCond118) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond118) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond118) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond118) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond118) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond118) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond118) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond118) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond118) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond118) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond118) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond118) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond118) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond118) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond118) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond118) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond118) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond118) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond118) CFA_SP SP+-2
          CFI (cfiCond118) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond119 Using cfiCommon0
          CFI (cfiCond119) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond119) Conditional ??CrossCallReturnLabel_336
          CFI (cfiCond119) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond119) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond119) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond119) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond119) CFA_SP SP+-2
          CFI (cfiCond119) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond120 Using cfiCommon0
          CFI (cfiCond120) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond120) Conditional ??CrossCallReturnLabel_337
          CFI (cfiCond120) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond120) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond120) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond120) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond120) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond120) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond120) CFA_SP SP+-2
          CFI (cfiCond120) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker121 Using cfiCommon1
          CFI (cfiPicker121) NoFunction
          CFI (cfiPicker121) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond115
          CFI EndBlock cfiCond116
          CFI EndBlock cfiCond117
          CFI EndBlock cfiCond118
          CFI EndBlock cfiCond119
          CFI EndBlock cfiCond120
          CFI EndBlock cfiPicker121
//  971 
//  972 #if defined ( REFLECTOR )
//  973 /*********************************************************************
//  974  * @fn      ZDO_ProcessBindUnbindReq()
//  975  *
//  976  * @brief   Called to process a Bind or Unbind Request message.
//  977  *
//  978  * @param   inMsg  - incoming message (request)
//  979  * @param   pReq - place to put parsed information
//  980  *
//  981  * @return  none
//  982  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  983 void ZDO_ProcessBindUnbindReq( zdoIncomingMsg_t *inMsg, ZDO_BindUnbindReq_t *pReq )
ZDO_ProcessBindUnbindReq:
          CFI Block cfiBlock122 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
        CODE
//  984 {
        FUNCALL ZDO_ProcessBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_LookupNwkAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDApp_GetEmptyPendingBindReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, bindAddrIndexGet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDP_NwkAddrReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_BindRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_UnBindRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDApp_NVUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
//  985   zAddrType_t SourceAddr;       // Binding Source addres
//  986   byte bindStat;
//  987 
//  988   SourceAddr.addrMode = Addr64Bit;
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x3
        MOVX    @DPTR,A
//  989   osal_cpyExtAddr( SourceAddr.addr.extAddr, pReq->srcAddress );
        ; Setup parameters for call to function sAddrExtCpy
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
//  990 
//  991   // If the local device is not the primary binding cache
//  992   // check the src address of the bind request.
//  993   // If it is not the local device's extended address
//  994   // discard the request.
//  995   if ( !osal_ExtAddrEqual( SourceAddr.addr.extAddr, NLME_GetExtAddr()) ||
//  996         (pReq->dstAddress.addrMode != Addr64Bit &&
//  997          pReq->dstAddress.addrMode != AddrGroup) )
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     R4,?V2
        MOV     R5,?V3
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV     A,R1
        JZ      ??ZDO_ProcessBindUnbindReq_0
        LCALL   ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_193:
        JZ      ??ZDO_ProcessBindUnbindReq_1
        MOVX    A,@DPTR
        XRL     A,#0x1
        JZ      ??ZDO_ProcessBindUnbindReq_1
//  998   {
//  999     bindStat = ZDP_NOT_SUPPORTED;
??ZDO_ProcessBindUnbindReq_0:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7c
        LJMP    ??ZDO_ProcessBindUnbindReq_2 & 0xFFFF
// 1000   }
// 1001   else
// 1002   {
// 1003     // Check source & destination endpoints
// 1004     if ( (pReq->srcEndpoint == 0 || pReq->srcEndpoint > MAX_ENDPOINTS)
// 1005         || (( pReq->dstAddress.addrMode == Addr64Bit ) &&
// 1006             (pReq->dstEndpoint == 0 || pReq->dstEndpoint > MAX_ENDPOINTS)) )
??ZDO_ProcessBindUnbindReq_1:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        JZ      ??ZDO_ProcessBindUnbindReq_3
        CPL     A
        JZ      ??ZDO_ProcessBindUnbindReq_3
        LCALL   ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_194:
        JNZ     ??ZDO_ProcessBindUnbindReq_4
        MOV     A,R6
        ADD     A,#0x14
        LCALL   ??Subroutine249_0 & 0xFFFF
??CrossCallReturnLabel_542:
        JZ      ??ZDO_ProcessBindUnbindReq_3
        CPL     A
        JNZ     ??ZDO_ProcessBindUnbindReq_4
// 1007     {
// 1008       bindStat = ZDP_INVALID_EP;
??ZDO_ProcessBindUnbindReq_3:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7e
        LJMP    ??ZDO_ProcessBindUnbindReq_2 & 0xFFFF
// 1009     }
// 1010     else
// 1011     {
// 1012       if ( inMsg->clusterID == Bind_req )
??ZDO_ProcessBindUnbindReq_4:
        LCALL   ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_224:
        MOVX    A,@DPTR
        XRL     A,#0x21
        JNZ     ??ZDO_ProcessBindUnbindReq_5
        INC     DPTR
        MOVX    A,@DPTR
??ZDO_ProcessBindUnbindReq_5:
        JZ      $+5
        LJMP    ??ZDO_ProcessBindUnbindReq_6 & 0xFFFF
// 1013       {
// 1014         // Assume the table is full
// 1015         bindStat = ZDP_TABLE_FULL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x74
        LCALL   ?Subroutine35 & 0xFFFF
// 1016 
// 1017 #if defined( APP_TP ) || defined( APP_TP2 )
// 1018         // For ZigBee Conformance Testing
// 1019         if ( bindNumOfEntries() < gNWK_MAX_BINDING_ENTRIES )
// 1020 #endif
// 1021         {
// 1022 #if !defined ( ZDP_BIND_SKIP_VALIDATION )
// 1023           uint16 nwkAddr;
// 1024 
// 1025           // Verifies that a valid NWK address exists for the device
// 1026           // before creating a Binding entry. If NWK address does not
// 1027           // exist the request is sent out and the BindReq is saved, to
// 1028           // create the Bind Entry once the NwkAddrRsp is received
// 1029           if ( ( pReq->dstAddress.addrMode == Addr64Bit ) &&
// 1030                ( APSME_LookupNwkAddr( pReq->dstAddress.addr.extAddr, &nwkAddr ) == FALSE ) )
??CrossCallReturnLabel_48:
        XRL     A,#0x3
        JZ      $+5
        LJMP    ??ZDO_ProcessBindUnbindReq_7 & 0xFFFF
        ; Setup parameters for call to function APSME_LookupNwkAddr
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP102_8
        LCALL   ?Subroutine144 & 0xFFFF
??CrossCallReturnLabel_229:
        LCALL   `??APSME_LookupNwkAddr::?relay`; Banked call to: APSME_LookupNwkAddr
        MOV     A,R1
        JZ      $+5
        LJMP    ??ZDO_ProcessBindUnbindReq_7 & 0xFFFF
// 1031           {
// 1032             // find an empty bind slot in the pending Bind Req list
// 1033             ZDO_PendingBindReq_t *pPendingBind;
// 1034 
// 1035             if ( ( pPendingBind = ZDApp_GetEmptyPendingBindReq() ) != NULL )
        ; Setup parameters for call to function ZDApp_GetEmptyPendingBindReq
        LCALL   `??ZDApp_GetEmptyPendingBindReq::?relay`; Banked call to: ZDApp_GetEmptyPendingBindReq
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     A,R2
        ORL     A,?V3
        JNZ     $+5
        LJMP    ??ZDO_ProcessBindUnbindReq_8 & 0xFFFF
// 1036             {
// 1037               // copy the received request into the empty slot and all required info
// 1038               osal_memcpy( &(pPendingBind->bindReq), pReq, sizeof( ZDO_BindUnbindReq_t ) );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V4,R6
        MOV     ?V5,R7
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     R4,#0x15
        MOV     R5,#0x0
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
// 1039 
// 1040               pPendingBind->srcAddr = inMsg->srcAddr;
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        MOV     A,?V2
        ADD     A,#0x15
        MOV     R4,A
        CLR     A
        ADDC    A,?V3
        MOV     R5,A
        MOV     A,#0x9
        LCALL   ?MOVE_LONG8_XDATA_XDATA
// 1041               pPendingBind->securityUse = inMsg->SecurityUse;
        LCALL   ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_210:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V2
        ADD     A,#0x1e
        MOV     DPL,A
        CLR     A
        ADDC    A,?V3
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine30 & 0xFFFF
// 1042               pPendingBind->transSeq = inMsg->TransSeq;
??CrossCallReturnLabel_37:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V2
        ADD     A,#0x1f
        MOV     DPL,A
        CLR     A
        ADDC    A,?V3
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1043               pPendingBind->age = MAX_TIME_ADDR_REQ;
        MOV     A,?V2
        ADD     A,#0x20
        MOV     DPL,A
        CLR     A
        ADDC    A,?V3
        MOV     DPH,A
        MOV     A,#0x5
        MOVX    @DPTR,A
// 1044 
// 1045               // create an entry in Address Manager
// 1046               ( void )bindAddrIndexGet( &(pReq->dstAddress) );
        MOV     A,R6
        ADD     A,#0xb
        MOV     R6,A
        JNC     ??ZDO_ProcessBindUnbindReq_9
        INC     R7
??ZDO_ProcessBindUnbindReq_9:
        ; Setup parameters for call to function bindAddrIndexGet
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??bindAddrIndexGet::?relay`; Banked call to: bindAddrIndexGet
// 1047 
// 1048               ZDP_NwkAddrReq( pReq->dstAddress.addr.extAddr, ZDP_ADDR_REQTYPE_SINGLE, 0, 0 );
        ; Setup parameters for call to function ZDP_NwkAddrReq
        MOV     R5,#0x0
        MOV     R4,#0x0
        MOV     R1,#0x0
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??ZDP_NwkAddrReq::?relay`; Banked call to: ZDP_NwkAddrReq
// 1049 
// 1050               osal_start_timerEx( ZDAppTaskID, ZDO_PENDING_BIND_REQ_EVT,
// 1051                                   AGE_OUT_PEND_BIND_REQ_DELAY );
        ; Setup parameters for call to function osal_start_timerEx
        MOV     DPTR,#__Constant_3e8
        LCALL   ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     R2,#0x0
        MOV     R3,#0x10
        MOV     DPTR,#ZDAppTaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??osal_start_timerEx::?relay`; Banked call to: osal_start_timerEx
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
// 1052               return;
        SJMP    ??ZDO_ProcessBindUnbindReq_10
// 1053             }
// 1054           }
// 1055           // Add Bind entry
// 1056           else if ( APSME_BindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1057                                        &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
??ZDO_ProcessBindUnbindReq_7:
        ; Setup parameters for call to function APSME_BindRequest
        LCALL   ?Subroutine129 & 0xFFFF
// 1058           {
// 1059             // valid entry
// 1060             bindStat = ZDP_SUCCESS;
// 1061 
// 1062             // Notify to save info into NV
// 1063             ZDApp_NVUpdate();
// 1064           }
// 1065 #else // ZDP_BIND_SKIP_VALIDATION  is defined
// 1066           // Create binding entry first independently of existance of  valid NWK addres
// 1067           // if NWK address does not exist a request is sent out
// 1068           if ( APSME_BindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1069                          &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
// 1070           {
// 1071             uint16 nwkAddr;
// 1072 
// 1073             // valid entry
// 1074             bindStat = ZDP_SUCCESS;
// 1075 
// 1076             // Notify to save info into NV
// 1077             ZDApp_NVUpdate();
// 1078 
// 1079             // Check for the destination address
// 1080             if ( pReq->dstAddress.addrMode == Addr64Bit )
// 1081             {
// 1082               if ( APSME_LookupNwkAddr( pReq->dstAddress.addr.extAddr, &nwkAddr ) == FALSE )
// 1083               {
// 1084                 ZDP_NwkAddrReq( pReq->dstAddress.addr.extAddr, ZDP_ADDR_REQTYPE_SINGLE, 0, 0 );
// 1085               }
// 1086             }
// 1087           }
// 1088 #endif
// 1089         }
// 1090       }
??CrossCallReturnLabel_206:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_104:
        LCALL   `??APSME_BindRequest::?relay`; Banked call to: APSME_BindRequest
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,R1
        JNZ     ??ZDO_ProcessBindUnbindReq_8
        SJMP    ??ZDO_ProcessBindUnbindReq_11
// 1091       else // Unbind_req
// 1092       {
// 1093         if ( APSME_UnBindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1094                        &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
??ZDO_ProcessBindUnbindReq_6:
        ; Setup parameters for call to function APSME_UnBindRequest
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_207:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_105:
        LCALL   `??APSME_UnBindRequest::?relay`; Banked call to: APSME_UnBindRequest
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,R1
        JNZ     ??ZDO_ProcessBindUnbindReq_12
// 1095         {
// 1096           bindStat = ZDP_SUCCESS;
??ZDO_ProcessBindUnbindReq_11:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1097 
// 1098           // Notify to save info into NV
// 1099           ZDApp_NVUpdate();
        ; Setup parameters for call to function ZDApp_NVUpdate
        LCALL   `??ZDApp_NVUpdate::?relay`; Banked call to: ZDApp_NVUpdate
        SJMP    ??ZDO_ProcessBindUnbindReq_8
// 1100         }
// 1101         else
// 1102           bindStat = ZDP_NO_ENTRY;
??ZDO_ProcessBindUnbindReq_12:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x78
??ZDO_ProcessBindUnbindReq_2:
        MOVX    @DPTR,A
// 1103       }
// 1104     }
// 1105   }
// 1106 
// 1107   // Send back a response message
// 1108   ZDP_SendData( &(inMsg->TransSeq), &(inMsg->srcAddr),
// 1109                (inMsg->clusterID | ZDO_RESPONSE_BIT), 1, &bindStat,
// 1110                inMsg->SecurityUse );
??ZDO_ProcessBindUnbindReq_8:
        ; Setup parameters for call to function ZDP_SendData
        LCALL   ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_211:
        MOV     ?V2,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     A,?V0
        ADD     A,#0xc
        MOV     DPL,A
        CLR     A
        ADDC    A,?V1
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_340:
        ORL     A,#0x80
        MOV     ?V3,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        LCALL   ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_213:
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
// 1111 }
??ZDO_ProcessBindUnbindReq_10:
        MOV     A,#0xc
          CFI EndBlock cfiBlock122
        REQUIRE ?Subroutine9
        ; // Fall through to label ?Subroutine9

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine9:
          CFI Block cfiBlock123 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Valid
        SJMP    ??Subroutine213_0
          CFI EndBlock cfiBlock123

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine129:
          CFI Block cfiCond124 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_206
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond125 Using cfiCommon0
          CFI (cfiCond125) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond125) Conditional ??CrossCallReturnLabel_207
          CFI (cfiCond125) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond125) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond125) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond125) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond125) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond125) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond125) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond125) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond125) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond125) CFA_SP SP+-2
          CFI (cfiCond125) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker126 Using cfiCommon1
          CFI (cfiPicker126) NoFunction
          CFI (cfiPicker126) Picker
        MOV     A,R6
        LCALL   ?Subroutine188 & 0xFFFF
??CrossCallReturnLabel_533:
        MOVX    A,@DPTR
        MOV     ?V2,A
        MOV     R0,#?V2
        RET
          CFI EndBlock cfiCond124
          CFI EndBlock cfiCond125
          CFI EndBlock cfiPicker126

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine121:
          CFI Block cfiCond127 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_193
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond128 Using cfiCommon0
          CFI (cfiCond128) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond128) Conditional ??CrossCallReturnLabel_194
          CFI (cfiCond128) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond128) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond128) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond128) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond128) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond128) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond128) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond128) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond128) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond128) CFA_SP SP+-2
          CFI (cfiCond128) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker129 Using cfiCommon1
          CFI (cfiPicker129) NoFunction
          CFI (cfiPicker129) Picker
        LCALL   ?Subroutine183 & 0xFFFF
??CrossCallReturnLabel_299:
        XRL     A,#0x3
        RET
          CFI EndBlock cfiCond127
          CFI EndBlock cfiCond128
          CFI EndBlock cfiPicker129

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine94:
          CFI Block cfiCond130 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_339
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond131 Using cfiCommon0
          CFI (cfiCond131) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond131) Conditional ??CrossCallReturnLabel_340
          CFI (cfiCond131) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond131) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond131) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond131) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond131) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond131) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond131) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond131) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond131) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond131) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond131) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond131) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond131) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond131) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond131) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond131) CFA_SP SP+-2
          CFI (cfiCond131) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond132 Using cfiCommon0
          CFI (cfiCond132) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond132) Conditional ??CrossCallReturnLabel_341
          CFI (cfiCond132) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond132) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond132) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond132) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond132) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond132) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond132) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond132) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond132) CFA_SP SP+-2
          CFI (cfiCond132) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond133 Using cfiCommon0
          CFI (cfiCond133) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond133) Conditional ??CrossCallReturnLabel_342
          CFI (cfiCond133) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond133) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond133) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond133) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond133) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond133) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond133) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond133) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond133) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond133) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond133) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond133) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond133) CFA_SP SP+-2
          CFI (cfiCond133) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker134 Using cfiCommon1
          CFI (cfiPicker134) NoFunction
          CFI (cfiPicker134) Picker
        MOV     DPH,A
          CFI EndBlock cfiCond130
          CFI EndBlock cfiCond131
          CFI EndBlock cfiCond132
          CFI EndBlock cfiCond133
          CFI EndBlock cfiPicker134
        REQUIRE ??Subroutine212_0
        ; // Fall through to label ??Subroutine212_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine212_0:
          CFI Block cfiCond135 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_338
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond136 Using cfiCommon0
          CFI (cfiCond136) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond136) Conditional ??CrossCallReturnLabel_339
          CFI (cfiCond136) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond136) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond136) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond136) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond136) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond136) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond136) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond136) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond136) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond136) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond136) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond136) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond136) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond136) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond136) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond136) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond136) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond136) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond136) CFA_SP SP+-2
          CFI (cfiCond136) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond137 Using cfiCommon0
          CFI (cfiCond137) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond137) Conditional ??CrossCallReturnLabel_340
          CFI (cfiCond137) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond137) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond137) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond137) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond137) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond137) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond137) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond137) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond137) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond137) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond137) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond137) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond137) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond137) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond137) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond137) CFA_SP SP+-2
          CFI (cfiCond137) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond138 Using cfiCommon0
          CFI (cfiCond138) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond138) Conditional ??CrossCallReturnLabel_341
          CFI (cfiCond138) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond138) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond138) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond138) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond138) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond138) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond138) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond138) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond138) CFA_SP SP+-2
          CFI (cfiCond138) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond139 Using cfiCommon0
          CFI (cfiCond139) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond139) Conditional ??CrossCallReturnLabel_342
          CFI (cfiCond139) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond139) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond139) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond139) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond139) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond139) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond139) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond139) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond139) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond139) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond139) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond139) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond139) CFA_SP SP+-2
          CFI (cfiCond139) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker140 Using cfiCommon1
          CFI (cfiPicker140) NoFunction
          CFI (cfiPicker140) Picker
        MOVX    A,@DPTR
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond135
          CFI EndBlock cfiCond136
          CFI EndBlock cfiCond137
          CFI EndBlock cfiCond138
          CFI EndBlock cfiCond139
          CFI EndBlock cfiPicker140

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine66:
          CFI Block cfiCond141 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_104
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond142 Using cfiCommon0
          CFI (cfiCond142) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond142) Conditional ??CrossCallReturnLabel_105
          CFI (cfiCond142) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond142) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond142) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond142) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond142) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond142) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond142) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond142) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond142) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond142) CFA_SP SP+-2
          CFI (cfiCond142) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker143 Using cfiCommon1
          CFI (cfiPicker143) NoFunction
          CFI (cfiPicker143) Picker
        MOV     A,R6
        ADD     A,#0xb
        MOV     R4,A
        CLR     A
        ADDC    A,R7
        MOV     R5,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine243_0 & 0xFFFF
??CrossCallReturnLabel_510:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI EndBlock cfiCond141
          CFI EndBlock cfiCond142
          CFI EndBlock cfiPicker143

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine35:
          CFI Block cfiCond144 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_47
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond145 Using cfiCommon0
          CFI (cfiCond145) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond145) Conditional ??CrossCallReturnLabel_48
          CFI (cfiCond145) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond145) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond145) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond145) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond145) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond145) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond145) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond145) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond145) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond145) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond145) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond145) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond145) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond145) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond145) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond145) CFA_SP SP+-2
          CFI (cfiCond145) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker146 Using cfiCommon1
          CFI (cfiPicker146) NoFunction
          CFI (cfiPicker146) Picker
        MOVX    @DPTR,A
        LCALL   ?Subroutine183 & 0xFFFF
??CrossCallReturnLabel_298:
        RET
          CFI EndBlock cfiCond144
          CFI EndBlock cfiCond145
          CFI EndBlock cfiPicker146

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine183:
          CFI Block cfiCond147 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_193
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond148 Using cfiCommon0
          CFI (cfiCond148) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond148) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_194
          CFI (cfiCond148) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond148) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond148) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond148) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond148) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond148) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond148) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond148) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond148) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond148) CFA_SP SP+-4
          CFI (cfiCond148) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond149 Using cfiCommon0
          CFI (cfiCond149) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond149) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_47
          CFI (cfiCond149) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond149) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond149) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond149) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond149) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond149) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond149) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond149) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond149) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond149) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond149) CFA_SP SP+-4
          CFI (cfiCond149) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond150 Using cfiCommon0
          CFI (cfiCond150) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond150) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_48
          CFI (cfiCond150) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond150) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond150) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond150) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond150) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond150) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond150) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond150) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond150) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond150) CFA_SP SP+-4
          CFI (cfiCond150) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker151 Using cfiCommon1
          CFI (cfiPicker151) NoFunction
          CFI (cfiPicker151) Picker
        LCALL   ?Subroutine203 & 0xFFFF
??CrossCallReturnLabel_325:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond147
          CFI EndBlock cfiCond148
          CFI EndBlock cfiCond149
          CFI EndBlock cfiCond150
          CFI EndBlock cfiPicker151

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine6:
          CFI Block cfiBlock152 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
          CFI EndBlock cfiBlock152
        REQUIRE ??Subroutine213_0
        ; // Fall through to label ??Subroutine213_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine213_0:
          CFI Block cfiBlock153 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x7
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock153
// 1112 #endif // REFLECTOR
// 1113 
// 1114 /*********************************************************************
// 1115  * @fn      ZDO_UpdateAddrManager
// 1116  *
// 1117  * @brief   Update the Address Manager.
// 1118  *
// 1119  * @param   nwkAddr - network address
// 1120  * @param   extAddr - extended address
// 1121  *
// 1122  * @return  none
// 1123  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1124 void ZDO_UpdateAddrManager( uint16 nwkAddr, uint8 *extAddr )
ZDO_UpdateAddrManager:
          CFI Block cfiBlock154 Using cfiCommon0
          CFI Function ZDO_UpdateAddrManager
        CODE
// 1125 {
        FUNCALL ZDO_UpdateAddrManager, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateAddrManager, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 13
        MOV     A,#-0xd
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
// 1126   AddrMgrEntry_t addrEntry;
// 1127 
// 1128   // Update the address manager
// 1129   addrEntry.user = ADDRMGR_USER_DEFAULT;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1130   addrEntry.nwkAddr = nwkAddr;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine46 & 0xFFFF
// 1131   AddrMgrExtAddrSet( addrEntry.extAddr, extAddr );
??CrossCallReturnLabel_72:
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   `??AddrMgrExtAddrSet::?relay`; Banked call to: AddrMgrExtAddrSet
// 1132   AddrMgrEntryUpdate( &addrEntry );
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   `??AddrMgrEntryUpdate::?relay`; Banked call to: AddrMgrEntryUpdate
// 1133 }
        MOV     A,#0xd
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 XSP16+0
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock154

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine46:
          CFI Block cfiCond155 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_73
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond156 Using cfiCommon0
          CFI (cfiCond156) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond156) Conditional ??CrossCallReturnLabel_71
          CFI (cfiCond156) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond156) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond156) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond156) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond156) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond156) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond156) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond156) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond156) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond156) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond156) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond156) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond156) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond156) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond156) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond156) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond156) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond156) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond156) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond156) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond156) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond156) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond156) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond156) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond156) CFA_SP SP+-2
          CFI (cfiCond156) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond157 Using cfiCommon0
          CFI (cfiCond157) Function ZDO_UpdateAddrManager
          CFI (cfiCond157) Conditional ??CrossCallReturnLabel_72
          CFI (cfiCond157) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond157) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond157) CFA_SP SP+-7
          CFI (cfiCond157) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker158 Using cfiCommon1
          CFI (cfiPicker158) NoFunction
          CFI (cfiPicker158) Picker
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV     A,#0x3
        RET
          CFI EndBlock cfiCond155
          CFI EndBlock cfiCond156
          CFI EndBlock cfiCond157
          CFI EndBlock cfiPicker158
// 1134 
// 1135 /*********************************************************************
// 1136  * @fn      ZDO_ProcessServerDiscReq
// 1137  *
// 1138  * @brief   Process the Server_Discovery_req message.
// 1139  *
// 1140  * @param   inMsg  - incoming message (request)
// 1141  *
// 1142  * @return  none
// 1143  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1144 void ZDO_ProcessServerDiscReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessServerDiscReq:
          CFI Block cfiBlock159 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
        CODE
// 1145 {
        FUNCALL ZDO_ProcessServerDiscReq, ZDP_ServerDiscRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine75 & 0xFFFF
// 1146   uint16 serverMask = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
// 1147   uint16 matchMask = serverMask & ZDO_Config_Node_Descriptor.ServerMask;
??CrossCallReturnLabel_120:
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        MOV     R0,A
        MOV     DPTR,#ZDO_Config_Node_Descriptor + 8
        MOVX    A,@DPTR
        ANL     A,R0
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,R1
        MOV     ?V1,A
// 1148 
// 1149   if ( matchMask )
        MOV     A,?V0
        ORL     A,?V1
        JZ      ??ZDO_ProcessServerDiscReq_0
// 1150   {
// 1151     ZDP_ServerDiscRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSUCCESS,
// 1152                 ZDAppNwkAddr.addr.shortAddr, matchMask, inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_ServerDiscRsp
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine130 & 0xFFFF
// 1153   }
??CrossCallReturnLabel_553:
        MOV     R5,A
        MOV     R4,#0x0
        LCALL   ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_201:
        LCALL   `??ZDP_ServerDiscRsp::?relay`; Banked call to: ZDP_ServerDiscRsp
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
// 1154 }
??ZDO_ProcessServerDiscReq_0:
        LJMP    ??Subroutine210_0 & 0xFFFF
          CFI EndBlock cfiBlock159
// 1155 
// 1156 #if defined ( ZIGBEE_CHILD_AGING )
// 1157 /*********************************************************************
// 1158  * @fn          ZDO_ProcessEndDeviceTimeoutReq
// 1159  *
// 1160  * @brief       This function processes and responds to the
// 1161  *              End_Device_Timeout_Req message.
// 1162  *
// 1163  * @param       inMsg  - incoming message (request)
// 1164  *
// 1165  * @return      none
// 1166  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1167 void ZDO_ProcessEndDeviceTimeoutReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessEndDeviceTimeoutReq:
          CFI Block cfiBlock160 Using cfiCommon0
          CFI Function ZDO_ProcessEndDeviceTimeoutReq
        CODE
// 1168 {
        FUNCALL ZDO_ProcessEndDeviceTimeoutReq, AssocGetWithExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessEndDeviceTimeoutReq, ZDApp_NVUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessEndDeviceTimeoutReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1169   uint8 stat = ZDP_SUCCESS;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1170   uint8 *ieee = NULL;
// 1171   uint16 reqTimeout;
// 1172 
// 1173   // Only process this message if Child Table Management is enabled OR
// 1174   // If message was broadcast OR multicast OR
// 1175   // if the NWK src and the MAC src are not the same) drop message
// 1176   if ( ( zgChildAgingEnable == FALSE ) ||
// 1177        ( inMsg->wasBroadcast == TRUE ) ||
// 1178        ( inMsg->srcAddr.addr.shortAddr != inMsg->macSrcAddr ) )
        MOV     DPTR,#zgChildAgingEnable
        MOVX    A,@DPTR
        JZ      ??ZDO_ProcessEndDeviceTimeoutReq_0
        MOV     A,R6
        ADD     A,#0xb
        LCALL   ??Subroutine249_0 & 0xFFFF
??CrossCallReturnLabel_543:
        XRL     A,#0x1
        JZ      ??ZDO_ProcessEndDeviceTimeoutReq_0
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine232_0 & 0xFFFF
??CrossCallReturnLabel_414:
        MOV     A,R6
        ADD     A,#0x15
        LCALL   ??Subroutine249_0 & 0xFFFF
??CrossCallReturnLabel_544:
        XRL     A,R0
        JNZ     ??ZDO_ProcessEndDeviceTimeoutReq_1
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessEndDeviceTimeoutReq_1:
        JZ      ??ZDO_ProcessEndDeviceTimeoutReq_2
// 1179   {
// 1180     // the message does not come from a child, drop it
// 1181     return;
??ZDO_ProcessEndDeviceTimeoutReq_0:
        LJMP    ??ZDO_ProcessEndDeviceTimeoutReq_3 & 0xFFFF
// 1182   }
// 1183 
// 1184   ieee = inMsg->asdu;
??ZDO_ProcessEndDeviceTimeoutReq_2:
        LCALL   ?Subroutine123 & 0xFFFF
??CrossCallReturnLabel_197:
        LCALL   ??Subroutine231_0 & 0xFFFF
??CrossCallReturnLabel_425:
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
// 1185 
// 1186   reqTimeout = BUILD_UINT16( inMsg->asdu[Z_EXTADDR_LEN], inMsg->asdu[Z_EXTADDR_LEN+1] );
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine176 & 0xFFFF
??CrossCallReturnLabel_690:
        MOV     A,R4
        ADD     A,R0
        MOV     ?V0,A
        CLR     A
        ADDC    A,R1
        MOV     ?V1,A
// 1187 
// 1188   if ( ( ( reqTimeout < ZDO_MIN_REQ_TIMEOUT ) || ( reqTimeout > ZDO_MAX_REQ_TIMEOUT ) ) ||
// 1189        ( ZSTACK_END_DEVICE_BUILD ) )
        MOV     A,R4
        ORL     A,?V1
        JZ      ??ZDO_ProcessEndDeviceTimeoutReq_4
        MOV     A,R4
        SUBB    A,#0x71
        MOV     A,R1
        SUBB    A,#0x8
        JNC     ??ZDO_ProcessEndDeviceTimeoutReq_4
        MOV     DPTR,#zgDeviceLogicalType
        MOVX    A,@DPTR
        XRL     A,#0x2
        JNZ     ??ZDO_ProcessEndDeviceTimeoutReq_5
// 1190   {
// 1191     stat = ZDP_INVALID_REQTYPE;
??ZDO_ProcessEndDeviceTimeoutReq_4:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x80
        SJMP    ??ZDO_ProcessEndDeviceTimeoutReq_6
// 1192   }
// 1193   else
// 1194   {
// 1195     associated_devices_t *pAssoc;
// 1196 
// 1197     if ( ( ( pAssoc = AssocGetWithExt( ieee ) ) != NULL ) &&
// 1198          ( ( pAssoc->nodeRelation >= CHILD_RFD ) &&
// 1199            ( pAssoc->nodeRelation <= CHILD_RFD_RX_IDLE ) ) )
??ZDO_ProcessEndDeviceTimeoutReq_5:
        ; Setup parameters for call to function AssocGetWithExt
        LCALL   `??AssocGetWithExt::?relay`; Banked call to: AssocGetWithExt
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     R0,?V2
        MOV     R1,?V3
        MOV     A,R0
        ORL     A,R1
        JZ      ??ZDO_ProcessEndDeviceTimeoutReq_7
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        JZ      ??ZDO_ProcessEndDeviceTimeoutReq_7
        CLR     C
        SUBB    A,#0x3
        JNC     ??ZDO_ProcessEndDeviceTimeoutReq_7
// 1200     {
// 1201       pAssoc->timeoutCounter = reqTimeout;
        MOV     A,R0
        ADD     A,#0x12
        LCALL   ?Subroutine117 & 0xFFFF
// 1202       pAssoc->endDevKaTimeout = reqTimeout;
??CrossCallReturnLabel_184:
        MOV     A,R0
        ADD     A,#0x14
        LCALL   ?Subroutine117 & 0xFFFF
// 1203 
// 1204       // Set event to save NV
// 1205       ZDApp_NVUpdate();
??CrossCallReturnLabel_185:
        ; Setup parameters for call to function ZDApp_NVUpdate
        LCALL   `??ZDApp_NVUpdate::?relay`; Banked call to: ZDApp_NVUpdate
        SJMP    ??ZDO_ProcessEndDeviceTimeoutReq_8
// 1206     }
// 1207     else
// 1208     {
// 1209       stat = ZDP_DEVICE_NOT_FOUND;
??ZDO_ProcessEndDeviceTimeoutReq_7:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7f
??ZDO_ProcessEndDeviceTimeoutReq_6:
        MOVX    @DPTR,A
// 1210     }
// 1211 
// 1212   }
// 1213 
// 1214   ZDP_EndDeviceTimeoutRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat,
// 1215                            inMsg->SecurityUse );
??ZDO_ProcessEndDeviceTimeoutReq_8:
        ; Setup parameters for call to function ZDP_SendData
        LCALL   ?Subroutine136 & 0xFFFF
??CrossCallReturnLabel_221:
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_345:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V0,#0x1f
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_405:
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
// 1216 }
??ZDO_ProcessEndDeviceTimeoutReq_3:
        MOV     A,#0x1
        LJMP    ?Subroutine4 & 0xFFFF
          CFI EndBlock cfiBlock160

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine117:
          CFI Block cfiCond161 Using cfiCommon0
          CFI Function ZDO_ProcessEndDeviceTimeoutReq
          CFI Conditional ??CrossCallReturnLabel_184
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond162 Using cfiCommon0
          CFI (cfiCond162) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond162) Conditional ??CrossCallReturnLabel_185
          CFI (cfiCond162) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond162) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond162) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond162) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond162) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond162) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond162) CFA_SP SP+-2
          CFI (cfiCond162) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker163 Using cfiCommon1
          CFI (cfiPicker163) NoFunction
          CFI (cfiPicker163) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R1
        MOV     DPH,A
        MOV     A,?V0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V1
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond161
          CFI EndBlock cfiCond162
          CFI EndBlock cfiPicker163

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine78:
          CFI Block cfiCond164 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_348
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond165 Using cfiCommon0
          CFI (cfiCond165) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond165) Conditional ??CrossCallReturnLabel_349
          CFI (cfiCond165) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond165) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond165) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond165) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond165) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond165) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond165) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond165) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond165) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond165) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond165) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond165) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond165) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond165) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond165) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond165) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond165) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond165) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond165) CFA_SP SP+-2
          CFI (cfiCond165) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond166 Using cfiCommon0
          CFI (cfiCond166) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond166) Conditional ??CrossCallReturnLabel_350
          CFI (cfiCond166) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond166) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond166) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond166) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond166) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond166) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond166) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond166) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond166) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond166) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond166) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond166) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond166) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond166) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond166) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond166) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond166) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond166) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond166) CFA_SP SP+-2
          CFI (cfiCond166) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker167 Using cfiCommon1
          CFI (cfiPicker167) NoFunction
          CFI (cfiPicker167) Picker
        MOV     A,?V14
        LCALL   ??Subroutine254_0 & 0xFFFF
??CrossCallReturnLabel_599:
        ADDC    A,?V15
          CFI EndBlock cfiCond164
          CFI EndBlock cfiCond165
          CFI EndBlock cfiCond166
          CFI EndBlock cfiPicker167
        REQUIRE ??Subroutine214_0
        ; // Fall through to label ??Subroutine214_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine214_0:
          CFI Block cfiCond168 Using cfiCommon0
          CFI Function ZDO_ProcessEndDeviceTimeoutReq
          CFI Conditional ??CrossCallReturnLabel_345
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond169 Using cfiCommon0
          CFI (cfiCond169) Function ZDO_ProcessUserDescSet
          CFI (cfiCond169) Conditional ??CrossCallReturnLabel_346
          CFI (cfiCond169) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond169) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond169) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond169) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond169) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond169) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond169) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond169) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond169) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond169) CFA_SP SP+-2
          CFI (cfiCond169) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond170 Using cfiCommon0
          CFI (cfiCond170) Function ZDMatchSendState
          CFI (cfiCond170) Conditional ??CrossCallReturnLabel_347
          CFI (cfiCond170) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond170) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond170) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond170) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond170) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond170) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond170) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond170) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond170) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond170) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond170) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond170) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond170) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond170) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond170) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond170) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond170) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond170) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond170) CFA_SP SP+-2
          CFI (cfiCond170) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond171 Using cfiCommon0
          CFI (cfiCond171) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond171) Conditional ??CrossCallReturnLabel_348
          CFI (cfiCond171) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond171) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond171) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond171) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond171) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond171) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond171) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond171) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond171) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond171) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond171) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond171) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond171) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond171) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond171) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond171) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond171) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond171) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond171) CFA_SP SP+-2
          CFI (cfiCond171) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond172 Using cfiCommon0
          CFI (cfiCond172) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond172) Conditional ??CrossCallReturnLabel_349
          CFI (cfiCond172) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond172) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond172) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond172) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond172) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond172) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond172) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond172) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond172) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond172) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond172) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond172) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond172) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond172) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond172) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond172) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond172) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond172) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond172) CFA_SP SP+-2
          CFI (cfiCond172) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond173 Using cfiCommon0
          CFI (cfiCond173) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond173) Conditional ??CrossCallReturnLabel_350
          CFI (cfiCond173) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond173) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond173) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond173) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond173) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond173) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond173) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond173) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond173) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond173) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond173) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond173) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond173) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond173) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond173) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond173) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond173) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond173) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond173) CFA_SP SP+-2
          CFI (cfiCond173) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker174 Using cfiCommon1
          CFI (cfiPicker174) NoFunction
          CFI (cfiPicker174) Picker
        MOV     DPH,A
          CFI EndBlock cfiCond168
          CFI EndBlock cfiCond169
          CFI EndBlock cfiCond170
          CFI EndBlock cfiCond171
          CFI EndBlock cfiCond172
          CFI EndBlock cfiCond173
          CFI EndBlock cfiPicker174
        REQUIRE ??Subroutine215_0
        ; // Fall through to label ??Subroutine215_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine215_0:
          CFI Block cfiCond175 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_343
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond176 Using cfiCommon0
          CFI (cfiCond176) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond176) Conditional ??CrossCallReturnLabel_344
          CFI (cfiCond176) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond176) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond176) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond176) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond176) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond176) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond176) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond176) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond176) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond176) CFA_SP SP+-2
          CFI (cfiCond176) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond177 Using cfiCommon0
          CFI (cfiCond177) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond177) Conditional ??CrossCallReturnLabel_345
          CFI (cfiCond177) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond177) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond177) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond177) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond177) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond177) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond177) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond177) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond177) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond177) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond177) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond177) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond177) CFA_SP SP+-2
          CFI (cfiCond177) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond178 Using cfiCommon0
          CFI (cfiCond178) Function ZDO_ProcessUserDescSet
          CFI (cfiCond178) Conditional ??CrossCallReturnLabel_346
          CFI (cfiCond178) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond178) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond178) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond178) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond178) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond178) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond178) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond178) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond178) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond178) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond178) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond178) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond178) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond178) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond178) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond178) CFA_SP SP+-2
          CFI (cfiCond178) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond179 Using cfiCommon0
          CFI (cfiCond179) Function ZDMatchSendState
          CFI (cfiCond179) Conditional ??CrossCallReturnLabel_347
          CFI (cfiCond179) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond179) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond179) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond179) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond179) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond179) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond179) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond179) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond179) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond179) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond179) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond179) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond179) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond179) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond179) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond179) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond179) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond179) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond179) CFA_SP SP+-2
          CFI (cfiCond179) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond180 Using cfiCommon0
          CFI (cfiCond180) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond180) Conditional ??CrossCallReturnLabel_348
          CFI (cfiCond180) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond180) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond180) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond180) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond180) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond180) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond180) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond180) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond180) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond180) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond180) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond180) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond180) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond180) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond180) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond180) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond180) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond180) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond180) CFA_SP SP+-2
          CFI (cfiCond180) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond181 Using cfiCommon0
          CFI (cfiCond181) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond181) Conditional ??CrossCallReturnLabel_349
          CFI (cfiCond181) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond181) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond181) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond181) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond181) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond181) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond181) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond181) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond181) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond181) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond181) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond181) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond181) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond181) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond181) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond181) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond181) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond181) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond181) CFA_SP SP+-2
          CFI (cfiCond181) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond182 Using cfiCommon0
          CFI (cfiCond182) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond182) Conditional ??CrossCallReturnLabel_350
          CFI (cfiCond182) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond182) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond182) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond182) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond182) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond182) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond182) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond182) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond182) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond182) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond182) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond182) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond182) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond182) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond182) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond182) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond182) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond182) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond182) CFA_SP SP+-2
          CFI (cfiCond182) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker183 Using cfiCommon1
          CFI (cfiPicker183) NoFunction
          CFI (cfiPicker183) Picker
        MOVX    A,@DPTR
        MOV     ?V0,A
        MOV     R0,#?V0
        RET
          CFI EndBlock cfiCond175
          CFI EndBlock cfiCond176
          CFI EndBlock cfiCond177
          CFI EndBlock cfiCond178
          CFI EndBlock cfiCond179
          CFI EndBlock cfiCond180
          CFI EndBlock cfiCond181
          CFI EndBlock cfiCond182
          CFI EndBlock cfiPicker183
// 1217 #endif // ZIGBEE_CHILD_AGING
// 1218 
// 1219 /*********************************************************************
// 1220  * Call Back Functions from APS  - API
// 1221  */
// 1222 
// 1223 /*********************************************************************
// 1224  * @fn          ZDO_EndDeviceTimeoutCB
// 1225  *
// 1226  * @brief       This function handles the binding timer for the End
// 1227  *              Device Bind command.
// 1228  *
// 1229  * @param       none
// 1230  *
// 1231  * @return      none
// 1232  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1233 void ZDO_EndDeviceTimeoutCB( void )
ZDO_EndDeviceTimeoutCB:
          CFI Block cfiBlock184 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
        CODE
// 1234 {
        FUNCALL ZDO_EndDeviceTimeoutCB, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
// 1235 #if defined ( REFLECTOR )
// 1236   byte stat;
// 1237   if ( ZDO_EDBind )
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine234_0 & 0xFFFF
??CrossCallReturnLabel_437:
        JNZ     $+5
        LJMP    ??ZDO_EndDeviceTimeoutCB_0 & 0xFFFF
// 1238   {
// 1239     stat = ZDO_EDBind->status;
// 1240 
// 1241     // Send the response message to the first sent
// 1242     ZDO_SendEDBindRsp( ZDO_EDBind->SrcTransSeq, &(ZDO_EDBind->SrcAddr),
// 1243                         stat, ZDO_EDBind->SecurityUse );
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x15
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_235:
        MOV     R0,A
        MOV     DPTR,#ZDO_EDBind
        MOVX    A,@DPTR
        MOV     R1,A
        INC     DPTR
        MOVX    A,@DPTR
        XCH     A,R1
        ADD     A,#0x16
        MOV     DPL,A
        CLR     A
        ADDC    A,R1
        MOV     DPH,A
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     DPTR,#ZDO_EDBind
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R5,A
        MOV     DPTR,#ZDO_EDBind
        MOVX    A,@DPTR
        MOV     R1,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R1
        MOVX    A,@DPTR
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        ; Setup parameters for call to function ZDP_SendData
        MOV     A,R0
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     ?V0,#0x20
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     R1,#0x1
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
// 1244 
// 1245     ZDO_RemoveEndDeviceBind();
// 1246   }
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine234_0 & 0xFFFF
??CrossCallReturnLabel_438:
        JZ      ??ZDO_EndDeviceTimeoutCB_0
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x10
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_446:
        JZ      ??ZDO_EndDeviceTimeoutCB_1
        ; Setup parameters for call to function osal_mem_free
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine252_0 & 0xFFFF
??CrossCallReturnLabel_564:
        ADD     A,#0x10
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        LCALL   ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_484:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
??ZDO_EndDeviceTimeoutCB_1:
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine252_0 & 0xFFFF
??CrossCallReturnLabel_565:
        ADD     A,#0x13
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_447:
        JZ      ??ZDO_EndDeviceTimeoutCB_2
        ; Setup parameters for call to function osal_mem_free
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine252_0 & 0xFFFF
??CrossCallReturnLabel_566:
        LCALL   ??Subroutine225_0 & 0xFFFF
??CrossCallReturnLabel_387:
        ADDC    A,R0
        MOV     DPH,A
        LCALL   ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_485:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
??ZDO_EndDeviceTimeoutCB_2:
        ; Setup parameters for call to function osal_mem_free
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_486:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        MOV     DPTR,#ZDO_EDBind
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1247 #endif  // REFLECTOR
// 1248 }
??ZDO_EndDeviceTimeoutCB_0:
        LJMP    ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock184
// 1249 
// 1250 /*********************************************************************
// 1251  * Optional Management Messages
// 1252  */
// 1253 
// 1254 /*********************************************************************
// 1255  * @fn          ZDO_ProcessMgmtLqiReq
// 1256  *
// 1257  * @brief       This function handles parsing the incoming Management
// 1258  *              LQI request and generate the response.
// 1259  *
// 1260  *   Note:      This function will limit the number of items returned
// 1261  *              to ZDO_MAX_LQI_ITEMS items.
// 1262  *
// 1263  * @param       inMsg - incoming message (request)
// 1264  *
// 1265  * @return      none
// 1266  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1267 void ZDO_ProcessMgmtLqiReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtLqiReq:
          CFI Block cfiBlock185 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
        CODE
// 1268 {
        FUNCALL ZDO_ProcessMgmtLqiReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AssocCount
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AssocFindDevice
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AddrMgrEntryLookupNwk
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, ZDP_MgmtLqiRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 64, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 64, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 37
        MOV     A,#-0x25
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 59)
        MOV     ?V12,R2
        MOV     ?V13,R3
// 1269   byte x;
// 1270   byte index;
// 1271   byte numItems;
// 1272   byte maxItems;
// 1273   ZDP_MgmtLqiItem_t* table = NULL;
        MOV     ?V10,#0x0
        MOV     ?V11,#0x0
// 1274   ZDP_MgmtLqiItem_t* item;
// 1275   neighborEntry_t    entry;
// 1276   byte aItems;
// 1277   associated_devices_t *aDevice;
// 1278   AddrMgrEntry_t  nwkEntry;
// 1279   uint8 StartIndex = inMsg->asdu[0];
        LCALL   ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_389:
        ADDC    A,?V13
        MOV     DPH,A
        LCALL   ??Subroutine228_0 & 0xFFFF
??CrossCallReturnLabel_393:
        MOV     ?V6,A
// 1280 
// 1281   // Get the number of neighbor items
// 1282   NLME_GetRequest( nwkNumNeighborTableEntries, 0, &maxItems );
        ; Setup parameters for call to function NLME_GetRequest
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     R1,#-0x64
        LCALL   `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
// 1283 
// 1284   // Get the number of associated items
// 1285   aItems = (uint8)AssocCount( PARENT, CHILD_FFD_RX_IDLE );
        ; Setup parameters for call to function AssocCount
        MOV     R2,#0x4
        MOV     R1,#0x0
        LCALL   `??AssocCount::?relay`; Banked call to: AssocCount
        MOV     A,R2
        MOV     ?V4,A
// 1286 
// 1287   // Total number of items
// 1288   maxItems += aItems;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,R2
        MOVX    @DPTR,A
// 1289 
// 1290   // Start with the supplied index
// 1291   if ( maxItems > StartIndex )
        MOV     R0,A
        MOV     A,?V6
        CLR     C
        SUBB    A,R0
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_0 & 0xFFFF
// 1292   {
// 1293     numItems = maxItems - StartIndex;
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,?V6
        MOV     ?V1,A
// 1294 
// 1295     // limit the size of the list
// 1296     if ( numItems > ZDO_MAX_LQI_ITEMS )
        CLR     C
        SUBB    A,#0x4
        JC      ??ZDO_ProcessMgmtLqiReq_1
// 1297       numItems = ZDO_MAX_LQI_ITEMS;
        MOV     ?V1,#0x3
// 1298 
// 1299     // Allocate the memory to build the table
// 1300     table = (ZDP_MgmtLqiItem_t*)osal_mem_alloc( (short)
// 1301               ( numItems * sizeof( ZDP_MgmtLqiItem_t ) ) );
??ZDO_ProcessMgmtLqiReq_1:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V1
        MOV     B,#0x1a
        MUL     AB
        MOV     R2,A
        MOV     R3,B
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V10,R2
        MOV     ?V11,R3
// 1302 
// 1303     if ( table != NULL )
        MOV     A,R2
        ORL     A,?V11
        JNZ     $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_2 & 0xFFFF
// 1304     {
// 1305       x = 0;
        MOV     ?V5,#0x0
// 1306       item = table;
        MOV     R6,?V10
        MOV     R7,?V11
// 1307       index = StartIndex;
        MOV     ?V0,?V6
        SJMP    ??ZDO_ProcessMgmtLqiReq_3
// 1308 
// 1309       // Loop through associated items and build list
// 1310       for ( ; x < numItems; x++ )
// 1311       {
// 1312         if ( index < aItems )
// 1313         {
// 1314           // get next associated device
// 1315           aDevice = AssocFindDevice( index++ );
// 1316 
// 1317           // set basic fields
// 1318           item->panID   = _NIB.nwkPanId;
// 1319           osal_cpyExtAddr( item->extPanID, _NIB.extendedPANID );
// 1320           item->nwkAddr = aDevice->shortAddr;
// 1321           item->permit  = ZDP_MGMT_BOOL_UNKNOWN;
// 1322           item->depth   = 0xFF;
// 1323           item->lqi     = aDevice->linkInfo.rxLqi;
// 1324 
// 1325           // set extented address
// 1326           nwkEntry.user    = ADDRMGR_USER_DEFAULT;
// 1327           nwkEntry.nwkAddr = aDevice->shortAddr;
// 1328 
// 1329           if ( AddrMgrEntryLookupNwk( &nwkEntry ) == TRUE )
// 1330           {
// 1331             osal_cpyExtAddr( item->extAddr, nwkEntry.extAddr );
// 1332           }
// 1333           else
// 1334           {
// 1335             osal_memset( item->extAddr, 0xFF, Z_EXTADDR_LEN );
??ZDO_ProcessMgmtLqiReq_4:
        ; Setup parameters for call to function osal_memset
        LCALL   ?Subroutine141 & 0xFFFF
// 1336           }
??CrossCallReturnLabel_357:
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
// 1337 
// 1338           // use association info to set other fields
// 1339           if ( aDevice->nodeRelation == PARENT )
??ZDO_ProcessMgmtLqiReq_5:
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        JNZ     ??ZDO_ProcessMgmtLqiReq_6
// 1340           {
// 1341             if (  aDevice->shortAddr == 0 )
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ??Subroutine234_0 & 0xFFFF
??CrossCallReturnLabel_439:
        JNZ     ??ZDO_ProcessMgmtLqiReq_7
// 1342             {
// 1343               item->devType = ZDP_MGMT_DT_COORD;
        LCALL   ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_538:
        MOVX    @DPTR,A
// 1344               item->depth = 0;
        MOV     A,R6
        ADD     A,#0x18
        LCALL   ??Subroutine248_0 & 0xFFFF
// 1345             }
??CrossCallReturnLabel_535:
        SJMP    ??ZDO_ProcessMgmtLqiReq_8
// 1346             else
// 1347             {
// 1348               item->devType = ZDP_MGMT_DT_ROUTER;
??ZDO_ProcessMgmtLqiReq_7:
        LCALL   ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_362:
        MOVX    @DPTR,A
// 1349               item->depth = _NIB.nodeDepth - 1;
        MOV     DPTR,#_NIB + 52
        MOVX    A,@DPTR
        DEC     A
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine148 & 0xFFFF
// 1350             }
// 1351 
// 1352             item->rxOnIdle = ZDP_MGMT_BOOL_UNKNOWN;
// 1353             item->relation = ZDP_MGMT_REL_PARENT;
// 1354           }
??CrossCallReturnLabel_247:
        POP     A
          CFI CFA_SP SP+0
??ZDO_ProcessMgmtLqiReq_8:
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_6:
        CLR     A
        SJMP    ??CrossCallReturnLabel_360
// 1355           else
// 1356           {
// 1357             // If not parent, then it's a child
// 1358             item->depth = _NIB.nodeDepth + 1;
??ZDO_ProcessMgmtLqiReq_6:
        MOV     DPTR,#_NIB + 52
        MOVX    A,@DPTR
        INC     A
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine148 & 0xFFFF
??CrossCallReturnLabel_248:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine17 & 0xFFFF
// 1359 
// 1360             if ( aDevice->nodeRelation < CHILD_FFD )
??CrossCallReturnLabel_13:
        CLR     C
        SUBB    A,#0x3
        MOV     A,R6
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_9 & 0xFFFF
// 1361             {
// 1362               item->devType = ZDP_MGMT_DT_ENDDEV;
        LCALL   ??Subroutine247_0 & 0xFFFF
// 1363 
// 1364               if ( aDevice->nodeRelation == CHILD_RFD )
// 1365               {
// 1366                 item->rxOnIdle = FALSE;
// 1367               }
// 1368               else
// 1369               {
// 1370                 item->rxOnIdle = TRUE;
// 1371               }
// 1372             }
??CrossCallReturnLabel_528:
        MOV     A,#0x2
        LCALL   ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_14:
        XRL     A,#0x1
        JNZ     $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_10 & 0xFFFF
// 1373             else
// 1374             {
// 1375               item->devType = ZDP_MGMT_DT_ROUTER;
// 1376 
// 1377               if ( aDevice->nodeRelation == CHILD_FFD )
// 1378               {
// 1379                 item->rxOnIdle = FALSE;
// 1380               }
// 1381               else
// 1382               {
// 1383                 item->rxOnIdle = TRUE;
??ZDO_ProcessMgmtLqiReq_11:
        MOV     A,R6
        ADD     A,#0x15
        LCALL   ??Subroutine219_0 & 0xFFFF
// 1384               }
??CrossCallReturnLabel_359:
        MOVX    @DPTR,A
// 1385             }
// 1386 
// 1387             item->relation = ZDP_MGMT_REL_CHILD;
        MOV     A,R6
        ADD     A,#0x16
        LCALL   ??Subroutine219_0 & 0xFFFF
??CrossCallReturnLabel_360:
        MOVX    @DPTR,A
// 1388           }
// 1389 
// 1390           item++;
        MOV     A,R6
        ADD     A,#0x1a
        MOV     R6,A
        JNC     ??ZDO_ProcessMgmtLqiReq_12
        INC     R7
??ZDO_ProcessMgmtLqiReq_12:
        INC     ?V5
??ZDO_ProcessMgmtLqiReq_3:
        MOV     A,?V5
        CLR     C
        SUBB    A,?V1
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_13 & 0xFFFF
        MOV     A,?V0
        CLR     C
        SUBB    A,?V4
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_14 & 0xFFFF
        ; Setup parameters for call to function AssocFindDevice
        MOV     R2,?V0
        MOV     R3,#0x0
        LCALL   `??AssocFindDevice::?relay`; Banked call to: AssocFindDevice
        MOV     ?V2,R2
        MOV     ?V3,R3
        INC     ?V0
        MOV     DPTR,#_NIB + 33
        LCALL   ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_20:
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ??Subroutine232_0 & 0xFFFF
??CrossCallReturnLabel_415:
        LCALL   ?Subroutine147 & 0xFFFF
??CrossCallReturnLabel_352:
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_4:
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_249:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ??Subroutine232_0 & 0xFFFF
??CrossCallReturnLabel_416:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine220_0 & 0xFFFF
??CrossCallReturnLabel_370:
        ; Setup parameters for call to function AddrMgrEntryLookupNwk
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AddrMgrEntryLookupNwk::?relay`; Banked call to: AddrMgrEntryLookupNwk
        MOV     A,R1
        XRL     A,#0x1
        JZ      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_4 & 0xFFFF
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        LCALL   ??Subroutine217_0 & 0xFFFF
??CrossCallReturnLabel_356:
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        LJMP    ??ZDO_ProcessMgmtLqiReq_5 & 0xFFFF
??ZDO_ProcessMgmtLqiReq_9:
        LCALL   ??Subroutine218_0 & 0xFFFF
??CrossCallReturnLabel_361:
        LCALL   ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_15:
        XRL     A,#0x3
        JZ      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_11 & 0xFFFF
??ZDO_ProcessMgmtLqiReq_10:
        MOV     A,R6
        ADD     A,#0x15
        LCALL   ??Subroutine248_0 & 0xFFFF
// 1391         }
??CrossCallReturnLabel_536:
        LJMP    ??CrossCallReturnLabel_359 & 0xFFFF
// 1392         else
// 1393         {
// 1394           if ( StartIndex <= aItems )
??ZDO_ProcessMgmtLqiReq_14:
        MOV     A,?V4
        CLR     C
        SUBB    A,?V6
        JC      ??ZDO_ProcessMgmtLqiReq_15
// 1395             // Start with 1st neighbor
// 1396             index = 0;
        MOV     ?V0,#0x0
        SJMP    ??ZDO_ProcessMgmtLqiReq_16
// 1397           else
// 1398             // Start with >1st neighbor
// 1399             index = StartIndex - aItems;
??ZDO_ProcessMgmtLqiReq_15:
        MOV     A,?V6
        CLR     C
        SUBB    A,?V4
        MOV     ?V0,A
        SJMP    ??ZDO_ProcessMgmtLqiReq_16
// 1400           break;
// 1401         }
// 1402       }
// 1403 
// 1404       // Loop through neighbor items and finish list
// 1405       for ( ; x < numItems; x++ )
// 1406       {
// 1407         // Add next neighbor table item
// 1408         NLME_GetRequest( nwkNeighborTable, index++, &entry );
// 1409 
// 1410         // set ZDP_MgmtLqiItem_t fields
// 1411         item->panID    = entry.panId;
// 1412         osal_cpyExtAddr( item->extPanID, _NIB.extendedPANID );
// 1413         osal_memset( item->extAddr, 0xFF, Z_EXTADDR_LEN );
// 1414         item->nwkAddr  = entry.neighborAddress;
// 1415         item->rxOnIdle = ZDP_MGMT_BOOL_UNKNOWN;
// 1416         item->relation = ZDP_MGMT_REL_UNKNOWN;
// 1417         item->permit   = ZDP_MGMT_BOOL_UNKNOWN;
// 1418         item->depth    = 0xFF;
// 1419         item->lqi      = entry.linkInfo.rxLqi;
// 1420 
// 1421         if ( item->nwkAddr == 0 )
// 1422         {
// 1423           item->devType = ZDP_MGMT_DT_COORD;
// 1424         }
// 1425         else
// 1426         {
// 1427           item->devType = ZDP_MGMT_DT_ROUTER;
??ZDO_ProcessMgmtLqiReq_17:
        LCALL   ?Subroutine127 & 0xFFFF
// 1428         }
??CrossCallReturnLabel_363:
        MOVX    @DPTR,A
// 1429 
// 1430         item++;
        MOV     A,R6
        ADD     A,#0x1a
        MOV     R6,A
        JNC     ??ZDO_ProcessMgmtLqiReq_18
        INC     R7
??ZDO_ProcessMgmtLqiReq_18:
        INC     ?V5
??ZDO_ProcessMgmtLqiReq_13:
        MOV     A,?V5
        CLR     C
        SUBB    A,?V1
        JNC     ??ZDO_ProcessMgmtLqiReq_2
??ZDO_ProcessMgmtLqiReq_16:
        ; Setup parameters for call to function NLME_GetRequest
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP102_8
        MOV     R2,?V0
        MOV     R3,#0x0
        MOV     R1,#-0x79
        LCALL   `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
        INC     ?V0
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_21:
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        ; Setup parameters for call to function osal_memset
        LCALL   ?Subroutine141 & 0xFFFF
??CrossCallReturnLabel_358:
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
        MOV     A,R6
        ADD     A,#0x12
        MOV     R0,A
        CLR     A
        ADDC    A,R7
        MOV     R1,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_487:
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_7:
        MOV     A,#0x3
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_5:
        MOV     A,#0x1d
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_250:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_58:
        MOV     A,R0
        ORL     A,R1
        JNZ     ??ZDO_ProcessMgmtLqiReq_17
        LCALL   ?Subroutine131 & 0xFFFF
// 1431       }
// 1432     }
// 1433   }
??CrossCallReturnLabel_539:
        SJMP    ??CrossCallReturnLabel_363
// 1434   else
// 1435   {
// 1436     numItems = 0;
??ZDO_ProcessMgmtLqiReq_0:
        MOV     ?V1,#0x0
// 1437   }
// 1438 
// 1439   // Send response
// 1440   ZDP_MgmtLqiRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSuccess, maxItems,
// 1441                   StartIndex, numItems, table, false );
??ZDO_ProcessMgmtLqiReq_2:
        ; Setup parameters for call to function ZDP_MgmtLqiRsp
        MOV     ?V2,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 60)
        MOV     R0,#?V10
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 62)
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 63)
        MOV     A,?V6
        MOV     ?V1,A
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 64)
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R4,#0x0
        MOV     A,?V12
        LCALL   ??Subroutine255_0 & 0xFFFF
??CrossCallReturnLabel_603:
        ADDC    A,?V13
        MOV     R3,A
        MOV     A,?V12
        LCALL   ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_215:
        ADDC    A,?V13
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??ZDP_MgmtLqiRsp::?relay`; Banked call to: ZDP_MgmtLqiRsp
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 59)
// 1442 
// 1443   if ( table )
        MOV     A,?V10
        ORL     A,?V11
        JZ      ??ZDO_ProcessMgmtLqiReq_19
// 1444   {
// 1445     osal_mem_free( table );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V10
        MOV     R3,?V11
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1446   }
// 1447 }
??ZDO_ProcessMgmtLqiReq_19:
        MOV     A,#0x25
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock185
        REQUIRE ?Subroutine7
        ; // Fall through to label ?Subroutine7

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine7:
          CFI Block cfiBlock186 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0xe
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock186

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine149:
          CFI Block cfiCond187 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_249
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond188 Using cfiCommon0
          CFI (cfiCond188) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond188) Conditional ??CrossCallReturnLabel_250
          CFI (cfiCond188) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond188) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond188) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond188) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond188) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond188) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond188) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond188) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond188) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond188) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond188) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond188) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond188) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond188) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond188) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond188) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond188) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker189 Using cfiCommon1
          CFI (cfiPicker189) NoFunction
          CFI (cfiPicker189) Picker
        MOV     A,R6
        ADD     A,#0x19
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond187
          CFI EndBlock cfiCond188
          CFI EndBlock cfiPicker189

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine148:
          CFI Block cfiCond190 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_247
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond191 Using cfiCommon0
          CFI (cfiCond191) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond191) Conditional ??CrossCallReturnLabel_248
          CFI (cfiCond191) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond191) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond191) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond191) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond191) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond191) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond191) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond191) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond191) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond191) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond191) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond191) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond191) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond191) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond191) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond191) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond191) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker192 Using cfiCommon1
          CFI (cfiPicker192) NoFunction
          CFI (cfiPicker192) Picker
        LCALL   ?Subroutine192 & 0xFFFF
??CrossCallReturnLabel_309:
        RET
          CFI EndBlock cfiCond190
          CFI EndBlock cfiCond191
          CFI EndBlock cfiPicker192

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine192:
          CFI Block cfiCond193 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_309, ??CrossCallReturnLabel_247
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-5
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond194 Using cfiCommon0
          CFI (cfiCond194) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond194) Conditional ??CrossCallReturnLabel_309, ??CrossCallReturnLabel_248
          CFI (cfiCond194) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond194) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond194) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond194) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond194) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond194) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond194) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond194) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond194) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond194) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond194) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond194) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond194) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond194) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond194) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond194) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond194) CFA_SP SP+-5
          CFI (cfiCond194) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond195 Using cfiCommon0
          CFI (cfiCond195) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond195) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_4
          CFI (cfiCond195) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond195) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond195) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond195) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond195) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond195) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond195) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond195) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond195) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond195) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond195) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond195) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond195) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond195) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond195) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond195) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond195) CFA_SP SP+-4
          CFI (cfiCond195) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond196 Using cfiCommon0
          CFI (cfiCond196) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond196) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_5
          CFI (cfiCond196) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond196) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond196) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond196) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond196) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond196) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond196) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond196) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond196) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond196) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond196) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond196) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond196) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond196) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond196) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond196) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond196) CFA_SP SP+-4
          CFI (cfiCond196) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker197 Using cfiCommon1
          CFI (cfiPicker197) NoFunction
          CFI (cfiPicker197) Picker
        MOV     A,R6
        ADD     A,#0x18
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond193
          CFI EndBlock cfiCond194
          CFI EndBlock cfiCond195
          CFI EndBlock cfiCond196
          CFI EndBlock cfiPicker197

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine147:
          CFI Block cfiCond198 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_352
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond199 Using cfiCommon0
          CFI (cfiCond199) Function ZDO_CopyMatchInfo
          CFI (cfiCond199) Conditional ??CrossCallReturnLabel_353
          CFI (cfiCond199) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond199) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond199) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond199) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond199) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond199) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond199) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond199) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond199) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond199) CFA_SP SP+-2
          CFI (cfiCond199) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker200 Using cfiCommon1
          CFI (cfiPicker200) NoFunction
          CFI (cfiPicker200) Picker
        MOV     A,R6
          CFI EndBlock cfiCond198
          CFI EndBlock cfiCond199
          CFI EndBlock cfiPicker200
        REQUIRE ??Subroutine216_0
        ; // Fall through to label ??Subroutine216_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine216_0:
          CFI Block cfiCond201 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_351
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond202 Using cfiCommon0
          CFI (cfiCond202) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond202) Conditional ??CrossCallReturnLabel_352
          CFI (cfiCond202) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond202) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond202) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond202) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond202) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond202) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond202) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond202) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond202) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond202) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond202) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond202) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond202) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond202) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond202) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond202) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond202) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond202) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond202) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond202) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond202) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond202) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond202) CFA_SP SP+-2
          CFI (cfiCond202) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond203 Using cfiCommon0
          CFI (cfiCond203) Function ZDO_CopyMatchInfo
          CFI (cfiCond203) Conditional ??CrossCallReturnLabel_353
          CFI (cfiCond203) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond203) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond203) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond203) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond203) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond203) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond203) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond203) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond203) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond203) CFA_SP SP+-2
          CFI (cfiCond203) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker204 Using cfiCommon1
          CFI (cfiPicker204) NoFunction
          CFI (cfiPicker204) Picker
        LCALL   ?Subroutine191 & 0xFFFF
??CrossCallReturnLabel_355:
        RET
          CFI EndBlock cfiCond201
          CFI EndBlock cfiCond202
          CFI EndBlock cfiCond203
          CFI EndBlock cfiPicker204

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine191:
          CFI Block cfiCond205 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_355, ??CrossCallReturnLabel_352
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond206 Using cfiCommon0
          CFI (cfiCond206) Function ZDO_CopyMatchInfo
          CFI (cfiCond206) Conditional ??CrossCallReturnLabel_355, ??CrossCallReturnLabel_353
          CFI (cfiCond206) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond206) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond206) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond206) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond206) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond206) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond206) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond206) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond206) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond206) CFA_SP SP+-4
          CFI (cfiCond206) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond207 Using cfiCommon0
          CFI (cfiCond207) Function ZDO_CopyMatchInfo
          CFI (cfiCond207) Conditional ??CrossCallReturnLabel_355, ??CrossCallReturnLabel_351
          CFI (cfiCond207) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond207) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond207) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond207) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond207) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond207) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond207) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond207) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond207) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond207) CFA_SP SP+-4
          CFI (cfiCond207) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond208 Using cfiCommon0
          CFI (cfiCond208) Function ZDO_CopyMatchInfo
          CFI (cfiCond208) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_16
          CFI (cfiCond208) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond208) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond208) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond208) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond208) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond208) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond208) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond208) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond208) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond208) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond208) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond208) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond208) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond208) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond208) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond208) CFA_SP SP+-4
          CFI (cfiCond208) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond209 Using cfiCommon0
          CFI (cfiCond209) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond209) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_17
          CFI (cfiCond209) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond209) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond209) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond209) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond209) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond209) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond209) CFA_SP SP+-4
          CFI (cfiCond209) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker210 Using cfiCommon1
          CFI (cfiPicker210) NoFunction
          CFI (cfiPicker210) Picker
        ADD     A,#0x12
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond205
          CFI EndBlock cfiCond206
          CFI EndBlock cfiCond207
          CFI EndBlock cfiCond208
          CFI EndBlock cfiCond209
          CFI EndBlock cfiPicker210

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine141:
          CFI Block cfiCond211 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_357
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond212 Using cfiCommon0
          CFI (cfiCond212) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond212) Conditional ??CrossCallReturnLabel_358
          CFI (cfiCond212) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond212) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond212) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond212) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond212) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond212) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond212) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond212) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond212) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond212) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond212) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond212) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond212) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond212) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond212) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond212) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond212) CFA_SP SP+-2
          CFI (cfiCond212) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker213 Using cfiCommon1
          CFI (cfiPicker213) NoFunction
          CFI (cfiPicker213) Picker
        MOV     R4,#0x8
        MOV     R5,#0x0
        MOV     R1,#-0x1
          CFI EndBlock cfiCond211
          CFI EndBlock cfiCond212
          CFI EndBlock cfiPicker213
        REQUIRE ??Subroutine217_0
        ; // Fall through to label ??Subroutine217_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine217_0:
          CFI Block cfiCond214 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_356
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond215 Using cfiCommon0
          CFI (cfiCond215) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond215) Conditional ??CrossCallReturnLabel_357
          CFI (cfiCond215) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond215) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond215) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond215) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond215) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond215) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond215) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond215) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond215) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond215) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond215) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond215) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond215) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond215) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond215) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond215) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond215) CFA_SP SP+-2
          CFI (cfiCond215) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond216 Using cfiCommon0
          CFI (cfiCond216) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond216) Conditional ??CrossCallReturnLabel_358
          CFI (cfiCond216) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond216) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond216) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond216) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond216) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond216) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond216) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond216) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond216) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond216) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond216) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond216) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond216) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond216) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond216) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond216) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond216) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond216) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond216) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond216) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond216) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond216) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond216) CFA_SP SP+-2
          CFI (cfiCond216) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker217 Using cfiCommon1
          CFI (cfiPicker217) NoFunction
          CFI (cfiPicker217) Picker
        MOV     A,R6
        LCALL   ??Subroutine258_0 & 0xFFFF
??CrossCallReturnLabel_620:
        ADDC    A,R7
        MOV     R3,A
        RET
          CFI EndBlock cfiCond214
          CFI EndBlock cfiCond215
          CFI EndBlock cfiCond216
          CFI EndBlock cfiPicker217

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine127:
          CFI Block cfiCond218 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_362
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond219 Using cfiCommon0
          CFI (cfiCond219) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond219) Conditional ??CrossCallReturnLabel_363
          CFI (cfiCond219) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond219) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond219) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond219) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond219) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond219) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond219) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond219) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond219) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond219) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond219) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond219) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond219) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond219) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond219) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond219) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond219) CFA_SP SP+-2
          CFI (cfiCond219) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker220 Using cfiCommon1
          CFI (cfiPicker220) NoFunction
          CFI (cfiPicker220) Picker
        MOV     A,R6
          CFI EndBlock cfiCond218
          CFI EndBlock cfiCond219
          CFI EndBlock cfiPicker220
        REQUIRE ??Subroutine218_0
        ; // Fall through to label ??Subroutine218_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine218_0:
          CFI Block cfiCond221 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_361
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond222 Using cfiCommon0
          CFI (cfiCond222) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond222) Conditional ??CrossCallReturnLabel_362
          CFI (cfiCond222) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond222) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond222) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond222) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond222) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond222) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond222) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond222) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond222) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond222) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond222) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond222) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond222) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond222) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond222) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond222) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond222) CFA_SP SP+-2
          CFI (cfiCond222) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond223 Using cfiCommon0
          CFI (cfiCond223) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond223) Conditional ??CrossCallReturnLabel_363
          CFI (cfiCond223) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond223) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond223) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond223) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond223) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond223) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond223) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond223) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond223) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond223) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond223) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond223) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond223) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond223) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond223) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond223) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond223) CFA_SP SP+-2
          CFI (cfiCond223) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker224 Using cfiCommon1
          CFI (cfiPicker224) NoFunction
          CFI (cfiPicker224) Picker
        ADD     A,#0x14
          CFI EndBlock cfiCond221
          CFI EndBlock cfiCond222
          CFI EndBlock cfiCond223
          CFI EndBlock cfiPicker224
        REQUIRE ??Subroutine219_0
        ; // Fall through to label ??Subroutine219_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine219_0:
          CFI Block cfiCond225 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_359
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond226 Using cfiCommon0
          CFI (cfiCond226) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond226) Conditional ??CrossCallReturnLabel_360
          CFI (cfiCond226) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond226) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond226) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond226) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond226) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond226) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond226) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond226) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond226) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond226) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond226) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond226) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond226) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond226) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond226) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond226) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond226) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond226) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond226) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond226) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond226) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond226) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond226) CFA_SP SP+-2
          CFI (cfiCond226) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond227 Using cfiCommon0
          CFI (cfiCond227) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond227) Conditional ??CrossCallReturnLabel_361
          CFI (cfiCond227) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond227) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond227) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond227) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond227) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond227) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond227) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond227) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond227) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond227) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond227) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond227) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond227) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond227) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond227) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond227) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond227) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond227) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond227) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond227) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond227) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond227) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond227) CFA_SP SP+-2
          CFI (cfiCond227) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond228 Using cfiCommon0
          CFI (cfiCond228) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond228) Conditional ??CrossCallReturnLabel_362
          CFI (cfiCond228) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond228) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond228) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond228) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond228) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond228) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond228) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond228) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond228) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond228) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond228) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond228) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond228) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond228) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond228) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond228) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond228) CFA_SP SP+-2
          CFI (cfiCond228) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond229 Using cfiCommon0
          CFI (cfiCond229) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond229) Conditional ??CrossCallReturnLabel_363
          CFI (cfiCond229) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond229) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond229) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond229) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond229) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond229) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond229) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond229) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond229) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond229) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond229) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond229) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond229) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond229) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond229) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond229) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond229) CFA_SP SP+-2
          CFI (cfiCond229) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker230 Using cfiCommon1
          CFI (cfiPicker230) NoFunction
          CFI (cfiPicker230) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,#0x1
        RET
          CFI EndBlock cfiCond225
          CFI EndBlock cfiCond226
          CFI EndBlock cfiCond227
          CFI EndBlock cfiCond228
          CFI EndBlock cfiCond229
          CFI EndBlock cfiPicker230

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine53:
          CFI Block cfiCond231 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_379
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond232 Using cfiCommon0
          CFI (cfiCond232) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond232) Conditional ??CrossCallReturnLabel_380
          CFI (cfiCond232) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond232) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond232) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond232) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond232) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond232) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond232) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond232) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond232) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond232) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond232) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond232) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond232) CFA_SP SP+-2
          CFI (cfiCond232) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker233 Using cfiCommon1
          CFI (cfiPicker233) NoFunction
          CFI (cfiPicker233) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
          CFI EndBlock cfiCond231
          CFI EndBlock cfiCond232
          CFI EndBlock cfiPicker233
        REQUIRE ??Subroutine220_0
        ; // Fall through to label ??Subroutine220_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine220_0:
          CFI Block cfiCond234 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_370
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond235 Using cfiCommon0
          CFI (cfiCond235) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond235) Conditional ??CrossCallReturnLabel_371
          CFI (cfiCond235) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond235) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond235) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond235) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond235) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond235) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond235) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond235) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond235) CFA_SP SP+-2
          CFI (cfiCond235) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond236 Using cfiCommon0
          CFI (cfiCond236) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond236) Conditional ??CrossCallReturnLabel_372
          CFI (cfiCond236) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond236) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond236) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond236) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond236) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond236) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond236) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond236) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond236) CFA_SP SP+-2
          CFI (cfiCond236) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond237 Using cfiCommon0
          CFI (cfiCond237) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond237) Conditional ??CrossCallReturnLabel_373
          CFI (cfiCond237) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond237) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond237) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond237) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond237) CFA_SP SP+-2
          CFI (cfiCond237) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond238 Using cfiCommon0
          CFI (cfiCond238) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond238) Conditional ??CrossCallReturnLabel_374
          CFI (cfiCond238) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond238) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond238) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond238) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond238) CFA_SP SP+-2
          CFI (cfiCond238) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond239 Using cfiCommon0
          CFI (cfiCond239) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond239) Conditional ??CrossCallReturnLabel_375
          CFI (cfiCond239) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond239) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond239) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond239) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond239) CFA_SP SP+-2
          CFI (cfiCond239) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond240 Using cfiCommon0
          CFI (cfiCond240) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond240) Conditional ??CrossCallReturnLabel_376
          CFI (cfiCond240) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond240) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond240) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond240) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond240) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond240) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond240) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond240) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond240) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond240) CFA_SP SP+-2
          CFI (cfiCond240) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond241 Using cfiCommon0
          CFI (cfiCond241) Function ZDMatchSendState
          CFI (cfiCond241) Conditional ??CrossCallReturnLabel_377
          CFI (cfiCond241) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond241) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond241) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond241) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond241) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond241) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond241) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond241) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond241) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond241) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond241) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond241) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond241) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond241) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond241) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond241) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond241) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond241) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond241) CFA_SP SP+-2
          CFI (cfiCond241) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond242 Using cfiCommon0
          CFI (cfiCond242) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond242) Conditional ??CrossCallReturnLabel_378
          CFI (cfiCond242) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond242) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond242) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond242) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond242) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond242) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond242) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond242) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond242) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond242) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond242) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond242) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond242) CFA_SP SP+-2
          CFI (cfiCond242) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond243 Using cfiCommon0
          CFI (cfiCond243) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond243) Conditional ??CrossCallReturnLabel_379
          CFI (cfiCond243) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond243) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond243) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond243) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond243) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond243) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond243) CFA_SP SP+-2
          CFI (cfiCond243) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond244 Using cfiCommon0
          CFI (cfiCond244) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond244) Conditional ??CrossCallReturnLabel_380
          CFI (cfiCond244) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond244) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond244) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond244) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond244) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond244) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond244) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond244) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond244) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond244) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond244) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond244) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond244) CFA_SP SP+-2
          CFI (cfiCond244) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker245 Using cfiCommon1
          CFI (cfiPicker245) NoFunction
          CFI (cfiPicker245) Picker
        MOV     A,R0
          CFI EndBlock cfiCond234
          CFI EndBlock cfiCond235
          CFI EndBlock cfiCond236
          CFI EndBlock cfiCond237
          CFI EndBlock cfiCond238
          CFI EndBlock cfiCond239
          CFI EndBlock cfiCond240
          CFI EndBlock cfiCond241
          CFI EndBlock cfiCond242
          CFI EndBlock cfiCond243
          CFI EndBlock cfiCond244
          CFI EndBlock cfiPicker245
        REQUIRE ??Subroutine221_0
        ; // Fall through to label ??Subroutine221_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine221_0:
          CFI Block cfiCond246 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_364
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond247 Using cfiCommon0
          CFI (cfiCond247) Function ZDO_ParseAddrRsp
          CFI (cfiCond247) Conditional ??CrossCallReturnLabel_365
          CFI (cfiCond247) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond247) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond247) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond247) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond247) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond247) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond247) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond247) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond247) CFA_SP SP+-2
          CFI (cfiCond247) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond248 Using cfiCommon0
          CFI (cfiCond248) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond248) Conditional ??CrossCallReturnLabel_366
          CFI (cfiCond248) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond248) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond248) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond248) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond248) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond248) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond248) CFA_SP SP+-2
          CFI (cfiCond248) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond249 Using cfiCommon0
          CFI (cfiCond249) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond249) Conditional ??CrossCallReturnLabel_367
          CFI (cfiCond249) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond249) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond249) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond249) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond249) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond249) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond249) CFA_SP SP+-2
          CFI (cfiCond249) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond250 Using cfiCommon0
          CFI (cfiCond250) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond250) Conditional ??CrossCallReturnLabel_368
          CFI (cfiCond250) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond250) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond250) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond250) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond250) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond250) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond250) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond250) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond250) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond250) CFA_SP SP+-2
          CFI (cfiCond250) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond251 Using cfiCommon0
          CFI (cfiCond251) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond251) Conditional ??CrossCallReturnLabel_369
          CFI (cfiCond251) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond251) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond251) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond251) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond251) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond251) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond251) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond251) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond251) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond251) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond251) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond251) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond251) CFA_SP SP+-2
          CFI (cfiCond251) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond252 Using cfiCommon0
          CFI (cfiCond252) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond252) Conditional ??CrossCallReturnLabel_370
          CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond252) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond252) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond252) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond252) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond252) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond252) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond252) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond252) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond252) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond252) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond252) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond252) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond252) CFA_SP SP+-2
          CFI (cfiCond252) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond253 Using cfiCommon0
          CFI (cfiCond253) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond253) Conditional ??CrossCallReturnLabel_371
          CFI (cfiCond253) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond253) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond253) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond253) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond253) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond253) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond253) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond253) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond253) CFA_SP SP+-2
          CFI (cfiCond253) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond254 Using cfiCommon0
          CFI (cfiCond254) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond254) Conditional ??CrossCallReturnLabel_372
          CFI (cfiCond254) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond254) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond254) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond254) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond254) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond254) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond254) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond254) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond254) CFA_SP SP+-2
          CFI (cfiCond254) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond255 Using cfiCommon0
          CFI (cfiCond255) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond255) Conditional ??CrossCallReturnLabel_373
          CFI (cfiCond255) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond255) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond255) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond255) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond255) CFA_SP SP+-2
          CFI (cfiCond255) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond256 Using cfiCommon0
          CFI (cfiCond256) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond256) Conditional ??CrossCallReturnLabel_374
          CFI (cfiCond256) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond256) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond256) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond256) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond256) CFA_SP SP+-2
          CFI (cfiCond256) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond257 Using cfiCommon0
          CFI (cfiCond257) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond257) Conditional ??CrossCallReturnLabel_375
          CFI (cfiCond257) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond257) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond257) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond257) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond257) CFA_SP SP+-2
          CFI (cfiCond257) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond258 Using cfiCommon0
          CFI (cfiCond258) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond258) Conditional ??CrossCallReturnLabel_376
          CFI (cfiCond258) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond258) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond258) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond258) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond258) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond258) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond258) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond258) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond258) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond258) CFA_SP SP+-2
          CFI (cfiCond258) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond259 Using cfiCommon0
          CFI (cfiCond259) Function ZDMatchSendState
          CFI (cfiCond259) Conditional ??CrossCallReturnLabel_377
          CFI (cfiCond259) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond259) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond259) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond259) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond259) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond259) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond259) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond259) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond259) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond259) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond259) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond259) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond259) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond259) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond259) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond259) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond259) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond259) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond259) CFA_SP SP+-2
          CFI (cfiCond259) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond260 Using cfiCommon0
          CFI (cfiCond260) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond260) Conditional ??CrossCallReturnLabel_378
          CFI (cfiCond260) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond260) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond260) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond260) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond260) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond260) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond260) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond260) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond260) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond260) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond260) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond260) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond260) CFA_SP SP+-2
          CFI (cfiCond260) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond261 Using cfiCommon0
          CFI (cfiCond261) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond261) Conditional ??CrossCallReturnLabel_379
          CFI (cfiCond261) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond261) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond261) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond261) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond261) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond261) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond261) CFA_SP SP+-2
          CFI (cfiCond261) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond262 Using cfiCommon0
          CFI (cfiCond262) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond262) Conditional ??CrossCallReturnLabel_380
          CFI (cfiCond262) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond262) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond262) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond262) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond262) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond262) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond262) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond262) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond262) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond262) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond262) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond262) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond262) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond262) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond262) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond262) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond262) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond262) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond262) CFA_SP SP+-2
          CFI (cfiCond262) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker263 Using cfiCommon1
          CFI (cfiPicker263) NoFunction
          CFI (cfiPicker263) Picker
        LCALL   ??Subroutine222_0 & 0xFFFF
??CrossCallReturnLabel_524:
        RET
          CFI EndBlock cfiCond246
          CFI EndBlock cfiCond247
          CFI EndBlock cfiCond248
          CFI EndBlock cfiCond249
          CFI EndBlock cfiCond250
          CFI EndBlock cfiCond251
          CFI EndBlock cfiCond252
          CFI EndBlock cfiCond253
          CFI EndBlock cfiCond254
          CFI EndBlock cfiCond255
          CFI EndBlock cfiCond256
          CFI EndBlock cfiCond257
          CFI EndBlock cfiCond258
          CFI EndBlock cfiCond259
          CFI EndBlock cfiCond260
          CFI EndBlock cfiCond261
          CFI EndBlock cfiCond262
          CFI EndBlock cfiPicker263

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine20:
          CFI Block cfiCond264 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_20
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond265 Using cfiCommon0
          CFI (cfiCond265) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond265) Conditional ??CrossCallReturnLabel_21
          CFI (cfiCond265) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond265) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond265) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond265) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond265) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond265) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond265) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond265) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond265) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond265) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond265) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond265) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond265) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond265) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond265) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond265) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond265) CFA_SP SP+-2
          CFI (cfiCond265) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker266 Using cfiCommon1
          CFI (cfiPicker266) NoFunction
          CFI (cfiPicker266) Picker
        LCALL   ?Subroutine177 & 0xFFFF
??CrossCallReturnLabel_290:
        LCALL   ?Subroutine161 & 0xFFFF
??CrossCallReturnLabel_525:
        ; Setup parameters for call to function sAddrExtCpy
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,#(_NIB + 53) & 0xff
        MOV     R5,#((_NIB + 53) >> 8) & 0xff
        MOV     A,R6
        ADD     A,#0x2
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        RET
          CFI EndBlock cfiCond264
          CFI EndBlock cfiCond265
          CFI EndBlock cfiPicker266

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine161:
          CFI Block cfiCond267 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_525, ??CrossCallReturnLabel_20
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond268 Using cfiCommon0
          CFI (cfiCond268) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond268) Conditional ??CrossCallReturnLabel_525, ??CrossCallReturnLabel_21
          CFI (cfiCond268) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond268) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond268) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond268) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond268) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond268) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond268) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond268) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond268) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond268) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond268) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond268) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond268) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond268) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond268) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond268) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond268) CFA_SP SP+-4
          CFI (cfiCond268) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond269 Using cfiCommon0
          CFI (cfiCond269) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond269) Conditional ??CrossCallReturnLabel_526, ??CrossCallReturnLabel_470
          CFI (cfiCond269) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond269) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond269) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond269) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond269) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond269) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond269) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond269) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond269) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond269) CFA_SP SP+-4
          CFI (cfiCond269) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond270 Using cfiCommon0
          CFI (cfiCond270) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond270) Conditional ??CrossCallReturnLabel_526, ??CrossCallReturnLabel_471
          CFI (cfiCond270) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond270) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond270) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond270) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond270) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond270) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond270) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond270) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond270) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond270) CFA_SP SP+-4
          CFI (cfiCond270) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond271 Using cfiCommon0
          CFI (cfiCond271) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond271) Conditional ??CrossCallReturnLabel_526, ??CrossCallReturnLabel_472
          CFI (cfiCond271) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond271) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond271) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond271) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond271) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond271) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond271) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond271) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond271) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond271) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond271) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond271) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond271) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond271) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond271) CFA_SP SP+-4
          CFI (cfiCond271) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond272 Using cfiCommon0
          CFI (cfiCond272) Function ZDO_CopyMatchInfo
          CFI (cfiCond272) Conditional ??CrossCallReturnLabel_527, ??CrossCallReturnLabel_517
          CFI (cfiCond272) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond272) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond272) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond272) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond272) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond272) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond272) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond272) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond272) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond272) CFA_SP SP+-4
          CFI (cfiCond272) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond273 Using cfiCommon0
          CFI (cfiCond273) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond273) Conditional ??CrossCallReturnLabel_527, ??CrossCallReturnLabel_521
          CFI (cfiCond273) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond273) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond273) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond273) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond273) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond273) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond273) CFA_SP SP+-4
          CFI (cfiCond273) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond274 Using cfiCommon0
          CFI (cfiCond274) Function ZDO_CopyMatchInfo
          CFI (cfiCond274) Conditional ??CrossCallReturnLabel_527, ??CrossCallReturnLabel_518
          CFI (cfiCond274) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond274) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond274) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond274) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond274) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond274) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond274) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond274) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond274) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond274) CFA_SP SP+-4
          CFI (cfiCond274) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond275 Using cfiCommon0
          CFI (cfiCond275) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond275) Conditional ??CrossCallReturnLabel_527, ??CrossCallReturnLabel_520
          CFI (cfiCond275) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond275) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond275) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond275) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond275) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond275) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond275) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond275) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond275) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond275) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond275) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond275) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond275) CFA_SP SP+-4
          CFI (cfiCond275) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond276 Using cfiCommon0
          CFI (cfiCond276) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond276) Conditional ??CrossCallReturnLabel_527, ??CrossCallReturnLabel_519
          CFI (cfiCond276) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond276) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond276) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond276) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond276) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond276) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond276) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond276) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond276) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond276) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond276) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond276) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond276) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond276) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond276) CFA_SP SP+-4
          CFI (cfiCond276) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker277 Using cfiCommon1
          CFI (cfiPicker277) NoFunction
          CFI (cfiPicker277) Picker
        MOV     A,R0
          CFI EndBlock cfiCond267
          CFI EndBlock cfiCond268
          CFI EndBlock cfiCond269
          CFI EndBlock cfiCond270
          CFI EndBlock cfiCond271
          CFI EndBlock cfiCond272
          CFI EndBlock cfiCond273
          CFI EndBlock cfiCond274
          CFI EndBlock cfiCond275
          CFI EndBlock cfiCond276
          CFI EndBlock cfiPicker277
        REQUIRE ??Subroutine222_0
        ; // Fall through to label ??Subroutine222_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine222_0:
          CFI Block cfiCond278 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_524, ??CrossCallReturnLabel_379
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond279 Using cfiCommon0
          CFI (cfiCond279) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond279) Conditional ??CrossCallReturnLabel_524, ??CrossCallReturnLabel_380
          CFI (cfiCond279) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond279) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond279) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond279) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond279) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond279) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond279) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond279) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond279) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond279) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond279) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond279) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond279) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond279) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond279) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond279) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond279) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond279) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond279) CFA_SP SP+-4
          CFI (cfiCond279) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond280 Using cfiCommon0
          CFI (cfiCond280) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond280) Conditional ??CrossCallReturnLabel_524, ??CrossCallReturnLabel_370
          CFI (cfiCond280) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond280) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond280) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond280) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond280) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond280) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond280) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond280) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond280) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond280) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond280) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond280) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond280) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond280) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond280) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond280) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond280) CFA_SP SP+-4
          CFI (cfiCond280) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond281 Using cfiCommon0
          CFI (cfiCond281) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond281) Conditional ??CrossCallReturnLabel_524, ??CrossCallReturnLabel_371
          CFI (cfiCond281) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond281) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond281) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond281) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond281) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond281) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond281) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond281) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond281) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond281) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond281) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond281) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond281) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond281) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond281) CFA_SP SP+-4
          CFI (cfiCond281) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond282 Using cfiCommon0
          CFI (cfiCond282) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond282) Conditional ??CrossCallReturnLabel_524, ??CrossCallReturnLabel_372
          CFI (cfiCond282) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond282) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond282) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond282) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond282) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond282) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond282) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond282) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond282) CFA_SP SP+-4
          CFI (cfiCond282) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond283 Using cfiCommon0
          CFI (cfiCond283) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond283) Conditional ??CrossCallReturnLabel_524, ??CrossCallReturnLabel_373
          CFI (cfiCond283) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond283) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond283) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond283) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond283) CFA_SP SP+-4
          CFI (cfiCond283) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond284 Using cfiCommon0
          CFI (cfiCond284) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond284) Conditional ??CrossCallReturnLabel_524, ??CrossCallReturnLabel_374
          CFI (cfiCond284) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond284) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond284) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond284) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond284) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond284) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond284) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond284) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond284) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond284) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond284) CFA_SP SP+-4
          CFI (cfiCond284) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond285 Using cfiCommon0
          CFI (cfiCond285) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond285) Conditional ??CrossCallReturnLabel_524, ??CrossCallReturnLabel_375
          CFI (cfiCond285) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond285) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond285) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond285) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond285) CFA_SP SP+-4
          CFI (cfiCond285) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond286 Using cfiCommon0
          CFI (cfiCond286) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond286) Conditional ??CrossCallReturnLabel_524, ??CrossCallReturnLabel_376
          CFI (cfiCond286) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond286) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond286) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond286) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond286) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond286) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond286) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond286) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond286) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond286) CFA_SP SP+-4
          CFI (cfiCond286) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond287 Using cfiCommon0
          CFI (cfiCond287) Function ZDMatchSendState
          CFI (cfiCond287) Conditional ??CrossCallReturnLabel_524, ??CrossCallReturnLabel_377
          CFI (cfiCond287) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond287) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond287) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond287) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond287) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond287) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond287) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond287) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond287) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond287) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond287) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond287) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond287) CFA_SP SP+-4
          CFI (cfiCond287) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond288 Using cfiCommon0
          CFI (cfiCond288) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond288) Conditional ??CrossCallReturnLabel_524, ??CrossCallReturnLabel_378
          CFI (cfiCond288) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond288) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond288) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond288) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond288) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond288) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond288) CFA_SP SP+-4
          CFI (cfiCond288) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond289 Using cfiCommon0
          CFI (cfiCond289) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond289) Conditional ??CrossCallReturnLabel_524, ??CrossCallReturnLabel_364
          CFI (cfiCond289) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond289) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond289) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond289) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond289) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond289) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond289) CFA_SP SP+-4
          CFI (cfiCond289) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond290 Using cfiCommon0
          CFI (cfiCond290) Function ZDO_ParseAddrRsp
          CFI (cfiCond290) Conditional ??CrossCallReturnLabel_524, ??CrossCallReturnLabel_365
          CFI (cfiCond290) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond290) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond290) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond290) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond290) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond290) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond290) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond290) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond290) CFA_SP SP+-4
          CFI (cfiCond290) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond291 Using cfiCommon0
          CFI (cfiCond291) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond291) Conditional ??CrossCallReturnLabel_524, ??CrossCallReturnLabel_366
          CFI (cfiCond291) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond291) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond291) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond291) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond291) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond291) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond291) CFA_SP SP+-4
          CFI (cfiCond291) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond292 Using cfiCommon0
          CFI (cfiCond292) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond292) Conditional ??CrossCallReturnLabel_524, ??CrossCallReturnLabel_367
          CFI (cfiCond292) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond292) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond292) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond292) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond292) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond292) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond292) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond292) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond292) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond292) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond292) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond292) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond292) CFA_SP SP+-4
          CFI (cfiCond292) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond293 Using cfiCommon0
          CFI (cfiCond293) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond293) Conditional ??CrossCallReturnLabel_524, ??CrossCallReturnLabel_368
          CFI (cfiCond293) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond293) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond293) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond293) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond293) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond293) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond293) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond293) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond293) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond293) CFA_SP SP+-4
          CFI (cfiCond293) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond294 Using cfiCommon0
          CFI (cfiCond294) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond294) Conditional ??CrossCallReturnLabel_524, ??CrossCallReturnLabel_369
          CFI (cfiCond294) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond294) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond294) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond294) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond294) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond294) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond294) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond294) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond294) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond294) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond294) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond294) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond294) CFA_SP SP+-4
          CFI (cfiCond294) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond295 Using cfiCommon0
          CFI (cfiCond295) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond295) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_41
          CFI (cfiCond295) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond295) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond295) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond295) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond295) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond295) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond295) CFA_SP SP+-4
          CFI (cfiCond295) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond296 Using cfiCommon0
          CFI (cfiCond296) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond296) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_42
          CFI (cfiCond296) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond296) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond296) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond296) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond296) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond296) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond296) CFA_SP SP+-4
          CFI (cfiCond296) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond297 Using cfiCommon0
          CFI (cfiCond297) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond297) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_81
          CFI (cfiCond297) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond297) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond297) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond297) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond297) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond297) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond297) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond297) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond297) CFA_SP SP+-4
          CFI (cfiCond297) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond298 Using cfiCommon0
          CFI (cfiCond298) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond298) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_82
          CFI (cfiCond298) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond298) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond298) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond298) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond298) CFA_SP SP+-4
          CFI (cfiCond298) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond299 Using cfiCommon0
          CFI (cfiCond299) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond299) Conditional ??CrossCallReturnLabel_525, ??CrossCallReturnLabel_20
          CFI (cfiCond299) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond299) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond299) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond299) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond299) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond299) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond299) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond299) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond299) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond299) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond299) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond299) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond299) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond299) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond299) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond299) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond299) CFA_SP SP+-4
          CFI (cfiCond299) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond300 Using cfiCommon0
          CFI (cfiCond300) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond300) Conditional ??CrossCallReturnLabel_525, ??CrossCallReturnLabel_21
          CFI (cfiCond300) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond300) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond300) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond300) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond300) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond300) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond300) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond300) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond300) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond300) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond300) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond300) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond300) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond300) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond300) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond300) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond300) CFA_SP SP+-4
          CFI (cfiCond300) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond301 Using cfiCommon0
          CFI (cfiCond301) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond301) Conditional ??CrossCallReturnLabel_526, ??CrossCallReturnLabel_470
          CFI (cfiCond301) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond301) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond301) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond301) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond301) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond301) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond301) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond301) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond301) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond301) CFA_SP SP+-4
          CFI (cfiCond301) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond302 Using cfiCommon0
          CFI (cfiCond302) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond302) Conditional ??CrossCallReturnLabel_526, ??CrossCallReturnLabel_471
          CFI (cfiCond302) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond302) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond302) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond302) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond302) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond302) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond302) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond302) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond302) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond302) CFA_SP SP+-4
          CFI (cfiCond302) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond303 Using cfiCommon0
          CFI (cfiCond303) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond303) Conditional ??CrossCallReturnLabel_526, ??CrossCallReturnLabel_472
          CFI (cfiCond303) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond303) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond303) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond303) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond303) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond303) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond303) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond303) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond303) CFA_SP SP+-4
          CFI (cfiCond303) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond304 Using cfiCommon0
          CFI (cfiCond304) Function ZDO_CopyMatchInfo
          CFI (cfiCond304) Conditional ??CrossCallReturnLabel_527, ??CrossCallReturnLabel_517
          CFI (cfiCond304) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond304) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond304) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond304) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond304) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond304) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond304) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond304) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond304) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond304) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond304) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond304) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond304) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond304) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond304) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond304) CFA_SP SP+-4
          CFI (cfiCond304) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond305 Using cfiCommon0
          CFI (cfiCond305) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond305) Conditional ??CrossCallReturnLabel_527, ??CrossCallReturnLabel_521
          CFI (cfiCond305) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond305) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond305) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond305) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond305) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond305) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond305) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond305) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond305) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond305) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond305) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond305) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond305) CFA_SP SP+-4
          CFI (cfiCond305) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond306 Using cfiCommon0
          CFI (cfiCond306) Function ZDO_CopyMatchInfo
          CFI (cfiCond306) Conditional ??CrossCallReturnLabel_527, ??CrossCallReturnLabel_518
          CFI (cfiCond306) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond306) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond306) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond306) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond306) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond306) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond306) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond306) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond306) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond306) CFA_SP SP+-4
          CFI (cfiCond306) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond307 Using cfiCommon0
          CFI (cfiCond307) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond307) Conditional ??CrossCallReturnLabel_527, ??CrossCallReturnLabel_520
          CFI (cfiCond307) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond307) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond307) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond307) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond307) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond307) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond307) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond307) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond307) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond307) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond307) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond307) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond307) CFA_SP SP+-4
          CFI (cfiCond307) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond308 Using cfiCommon0
          CFI (cfiCond308) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond308) Conditional ??CrossCallReturnLabel_527, ??CrossCallReturnLabel_519
          CFI (cfiCond308) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond308) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond308) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond308) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond308) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond308) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond308) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond308) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond308) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond308) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond308) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond308) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond308) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond308) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond308) CFA_SP SP+-4
          CFI (cfiCond308) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker309 Using cfiCommon1
          CFI (cfiPicker309) NoFunction
          CFI (cfiPicker309) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond278
          CFI EndBlock cfiCond279
          CFI EndBlock cfiCond280
          CFI EndBlock cfiCond281
          CFI EndBlock cfiCond282
          CFI EndBlock cfiCond283
          CFI EndBlock cfiCond284
          CFI EndBlock cfiCond285
          CFI EndBlock cfiCond286
          CFI EndBlock cfiCond287
          CFI EndBlock cfiCond288
          CFI EndBlock cfiCond289
          CFI EndBlock cfiCond290
          CFI EndBlock cfiCond291
          CFI EndBlock cfiCond292
          CFI EndBlock cfiCond293
          CFI EndBlock cfiCond294
          CFI EndBlock cfiCond295
          CFI EndBlock cfiCond296
          CFI EndBlock cfiCond297
          CFI EndBlock cfiCond298
          CFI EndBlock cfiCond299
          CFI EndBlock cfiCond300
          CFI EndBlock cfiCond301
          CFI EndBlock cfiCond302
          CFI EndBlock cfiCond303
          CFI EndBlock cfiCond304
          CFI EndBlock cfiCond305
          CFI EndBlock cfiCond306
          CFI EndBlock cfiCond307
          CFI EndBlock cfiCond308
          CFI EndBlock cfiPicker309

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine17:
          CFI Block cfiCond310 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_13
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond311 Using cfiCommon0
          CFI (cfiCond311) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond311) Conditional ??CrossCallReturnLabel_14
          CFI (cfiCond311) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond311) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond311) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond311) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond311) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond311) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond311) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond311) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond311) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond311) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond311) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond311) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond311) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond311) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond311) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond311) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond311) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond311) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond311) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond311) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond311) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond311) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond311) CFA_SP SP+-2
          CFI (cfiCond311) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond312 Using cfiCommon0
          CFI (cfiCond312) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond312) Conditional ??CrossCallReturnLabel_15
          CFI (cfiCond312) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond312) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond312) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond312) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond312) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond312) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond312) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond312) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond312) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond312) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond312) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond312) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond312) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond312) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond312) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond312) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond312) CFA_SP SP+-2
          CFI (cfiCond312) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker313 Using cfiCommon1
          CFI (cfiPicker313) NoFunction
          CFI (cfiPicker313) Picker
        MOVX    @DPTR,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond310
          CFI EndBlock cfiCond311
          CFI EndBlock cfiCond312
          CFI EndBlock cfiPicker313

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine14:
          CFI Block cfiCond314 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_6
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond315 Using cfiCommon0
          CFI (cfiCond315) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond315) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond315) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond315) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond315) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond315) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond315) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond315) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond315) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond315) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond315) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond315) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond315) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond315) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond315) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond315) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond315) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond315) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond315) CFA_SP SP+-2
          CFI (cfiCond315) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker316 Using cfiCommon1
          CFI (cfiPicker316) NoFunction
          CFI (cfiPicker316) Picker
        LCALL   ?Subroutine158 & 0xFFFF
??CrossCallReturnLabel_267:
        MOV     A,#0x2
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x16
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond314
          CFI EndBlock cfiCond315
          CFI EndBlock cfiPicker316

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine13:
          CFI Block cfiCond317 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond318 Using cfiCommon0
          CFI (cfiCond318) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond318) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond318) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond318) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond318) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond318) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond318) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond318) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond318) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond318) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond318) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond318) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond318) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond318) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond318) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond318) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond318) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond318) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond318) CFA_SP SP+-2
          CFI (cfiCond318) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker319 Using cfiCommon1
          CFI (cfiPicker319) NoFunction
          CFI (cfiPicker319) Picker
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x17
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,#0x2
        MOVX    @DPTR,A
        LCALL   ?Subroutine192 & 0xFFFF
??CrossCallReturnLabel_308:
        MOV     A,#-0x1
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond317
          CFI EndBlock cfiCond318
          CFI EndBlock cfiPicker319
// 1448 
// 1449 /*********************************************************************
// 1450  * @fn          ZDO_ProcessMgmtNwkDiscReq
// 1451  *
// 1452  * @brief       This function handles parsing the incoming Management
// 1453  *              Network Discover request and starts the request.
// 1454  *
// 1455  * @param       inMsg - incoming message (request)
// 1456  *
// 1457  * @return      none
// 1458  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1459 void ZDO_ProcessMgmtNwkDiscReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtNwkDiscReq:
          CFI Block cfiBlock320 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
        CODE
// 1460 {
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, NLME_NwkDiscReq2
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, NLME_NwkDiscTerm
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 7
        MOV     A,#-0x7
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
        LCALL   ?Subroutine124 & 0xFFFF
// 1461   NLME_ScanFields_t scan;
// 1462   uint8             index;
// 1463   uint8             *msg;
// 1464 
// 1465   msg = inMsg->asdu;
??CrossCallReturnLabel_385:
        ADDC    A,?V1
        LCALL   ?Subroutine93 & 0xFFFF
// 1466   scan.channels = osal_build_uint32( msg, 4 );
??CrossCallReturnLabel_150:
        LCALL   `??osal_build_uint32::?relay`; Banked call to: osal_build_uint32
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?XSTORE_R0123
// 1467   msg += 4;
// 1468   scan.duration = *msg++;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine37 & 0xFFFF
// 1469   index         = *msg;
??CrossCallReturnLabel_51:
        MOV     R0,A
// 1470   scan.scanType = ZMAC_ACTIVE_SCAN;
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1471   scan.scanApp  = NLME_DISC_SCAN;
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1472 
// 1473   // Save off the information to be used for the response
// 1474   zdappMgmtNwkDiscReqInProgress          = true;
        MOV     DPTR,#zdappMgmtNwkDiscReqInProgress
        MOVX    @DPTR,A
// 1475   zdappMgmtNwkDiscRspAddr.addrMode       = Addr16Bit;
        MOV     DPTR,#zdappMgmtNwkDiscRspAddr + 8
        INC     A
        LCALL   ?Subroutine41 & 0xFFFF
// 1476   zdappMgmtNwkDiscRspAddr.addr.shortAddr = inMsg->srcAddr.addr.shortAddr;
??CrossCallReturnLabel_60:
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     DPTR,#zdappMgmtNwkDiscRspAddr
        LCALL   ?Subroutine51 & 0xFFFF
// 1477   zdappMgmtNwkDiscStartIndex             = index;
??CrossCallReturnLabel_336:
        MOV     A,R0
        MOV     DPTR,#zdappMgmtNwkDiscStartIndex
        LCALL   ?Subroutine30 & 0xFFFF
// 1478   zdappMgmtNwkDiscRspTransSeq            = inMsg->TransSeq;
??CrossCallReturnLabel_38:
        MOV     DPTR,#zdappMgmtNwkDiscRspTransSeq
        MOVX    @DPTR,A
// 1479 
// 1480   if ( NLME_NwkDiscReq2( &scan ) != ZSuccess )
        ; Setup parameters for call to function NLME_NwkDiscReq2
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   `??NLME_NwkDiscReq2::?relay`; Banked call to: NLME_NwkDiscReq2
        MOV     A,R1
        JZ      ??ZDO_ProcessMgmtNwkDiscReq_0
// 1481   {
// 1482     NLME_NwkDiscTerm();
        ; Setup parameters for call to function NLME_NwkDiscTerm
        LCALL   `??NLME_NwkDiscTerm::?relay`; Banked call to: NLME_NwkDiscTerm
// 1483 
// 1484     // zdappMgmtNwkDiscReqInProgress will be reset in the confirm callback
// 1485   }
// 1486 }
??ZDO_ProcessMgmtNwkDiscReq_0:
        MOV     A,#0x7
        LJMP    ??Subroutine209_0 & 0xFFFF
          CFI EndBlock cfiBlock320

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine30:
          CFI Block cfiCond321 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_37
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond322 Using cfiCommon0
          CFI (cfiCond322) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond322) Conditional ??CrossCallReturnLabel_38
          CFI (cfiCond322) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond322) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond322) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond322) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond322) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond322) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond322) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond322) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond322) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond322) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond322) CFA_SP SP+-2
          CFI (cfiCond322) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker323 Using cfiCommon1
          CFI (cfiPicker323) NoFunction
          CFI (cfiPicker323) Picker
        MOVX    @DPTR,A
        MOV     A,?V0
        ADD     A,#0xf
        LCALL   ?Subroutine190 & 0xFFFF
??CrossCallReturnLabel_382:
        RET
          CFI EndBlock cfiCond321
          CFI EndBlock cfiCond322
          CFI EndBlock cfiPicker323

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine190:
          CFI Block cfiCond324 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_37
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond325 Using cfiCommon0
          CFI (cfiCond325) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond325) Conditional ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_38
          CFI (cfiCond325) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond325) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond325) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond325) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond325) CFA_SP SP+-4
          CFI (cfiCond325) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond326 Using cfiCommon0
          CFI (cfiCond326) Function ZDO_CopyMatchInfo
          CFI (cfiCond326) Conditional ??CrossCallReturnLabel_384, ??CrossCallReturnLabel_178
          CFI (cfiCond326) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond326) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond326) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond326) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond326) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond326) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond326) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond326) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond326) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond326) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond326) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond326) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond326) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond326) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond326) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond326) CFA_SP SP+-4
          CFI (cfiCond326) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond327 Using cfiCommon0
          CFI (cfiCond327) Function ZDO_CopyMatchInfo
          CFI (cfiCond327) Conditional ??CrossCallReturnLabel_384, ??CrossCallReturnLabel_179
          CFI (cfiCond327) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond327) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond327) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond327) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond327) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond327) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond327) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond327) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond327) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond327) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond327) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond327) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond327) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond327) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond327) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond327) CFA_SP SP+-4
          CFI (cfiCond327) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond328 Using cfiCommon0
          CFI (cfiCond328) Function ZDO_CopyMatchInfo
          CFI (cfiCond328) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_166
          CFI (cfiCond328) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond328) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond328) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond328) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond328) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond328) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond328) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond328) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond328) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond328) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond328) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond328) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond328) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond328) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond328) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond328) CFA_SP SP+-4
          CFI (cfiCond328) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond329 Using cfiCommon0
          CFI (cfiCond329) Function ZDO_CopyMatchInfo
          CFI (cfiCond329) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_167
          CFI (cfiCond329) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond329) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond329) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond329) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond329) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond329) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond329) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond329) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond329) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond329) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond329) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond329) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond329) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond329) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond329) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond329) CFA_SP SP+-4
          CFI (cfiCond329) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker330 Using cfiCommon1
          CFI (cfiPicker330) NoFunction
          CFI (cfiPicker330) Picker
        MOV     DPL,A
        CLR     A
          CFI EndBlock cfiCond324
          CFI EndBlock cfiCond325
          CFI EndBlock cfiCond326
          CFI EndBlock cfiCond327
          CFI EndBlock cfiCond328
          CFI EndBlock cfiCond329
          CFI EndBlock cfiPicker330
        REQUIRE ??Subroutine223_0
        ; // Fall through to label ??Subroutine223_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine223_0:
          CFI Block cfiCond331 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_210
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond332 Using cfiCommon0
          CFI (cfiCond332) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond332) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_211
          CFI (cfiCond332) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond332) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond332) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond332) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond332) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond332) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond332) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond332) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond332) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond332) CFA_SP SP+-4
          CFI (cfiCond332) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond333 Using cfiCommon0
          CFI (cfiCond333) Function ZDMatchSendState
          CFI (cfiCond333) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_212
          CFI (cfiCond333) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond333) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond333) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond333) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond333) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond333) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond333) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond333) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond333) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond333) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond333) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond333) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond333) CFA_SP SP+-4
          CFI (cfiCond333) CFA_XSP16 add(XSP16, 45)
          CFI Block cfiCond334 Using cfiCommon0
          CFI (cfiCond334) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond334) Conditional ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_37
          CFI (cfiCond334) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond334) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond334) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond334) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond334) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond334) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond334) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond334) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond334) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond334) CFA_SP SP+-4
          CFI (cfiCond334) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond335 Using cfiCommon0
          CFI (cfiCond335) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond335) Conditional ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_38
          CFI (cfiCond335) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond335) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond335) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond335) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond335) CFA_SP SP+-4
          CFI (cfiCond335) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond336 Using cfiCommon0
          CFI (cfiCond336) Function ZDO_CopyMatchInfo
          CFI (cfiCond336) Conditional ??CrossCallReturnLabel_384, ??CrossCallReturnLabel_178
          CFI (cfiCond336) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond336) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond336) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond336) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond336) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond336) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond336) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond336) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond336) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond336) CFA_SP SP+-4
          CFI (cfiCond336) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond337 Using cfiCommon0
          CFI (cfiCond337) Function ZDO_CopyMatchInfo
          CFI (cfiCond337) Conditional ??CrossCallReturnLabel_384, ??CrossCallReturnLabel_179
          CFI (cfiCond337) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond337) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond337) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond337) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond337) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond337) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond337) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond337) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond337) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond337) CFA_SP SP+-4
          CFI (cfiCond337) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond338 Using cfiCommon0
          CFI (cfiCond338) Function ZDO_CopyMatchInfo
          CFI (cfiCond338) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_166
          CFI (cfiCond338) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond338) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond338) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond338) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond338) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond338) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond338) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond338) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond338) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond338) CFA_SP SP+-4
          CFI (cfiCond338) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond339 Using cfiCommon0
          CFI (cfiCond339) Function ZDO_CopyMatchInfo
          CFI (cfiCond339) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_167
          CFI (cfiCond339) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond339) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond339) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond339) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond339) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond339) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond339) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond339) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond339) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond339) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond339) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond339) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond339) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond339) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond339) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond339) CFA_SP SP+-4
          CFI (cfiCond339) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker340 Using cfiCommon1
          CFI (cfiPicker340) NoFunction
          CFI (cfiPicker340) Picker
        ADDC    A,?V1
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond331
          CFI EndBlock cfiCond332
          CFI EndBlock cfiCond333
          CFI EndBlock cfiCond334
          CFI EndBlock cfiCond335
          CFI EndBlock cfiCond336
          CFI EndBlock cfiCond337
          CFI EndBlock cfiCond338
          CFI EndBlock cfiCond339
          CFI EndBlock cfiPicker340
// 1487 
// 1488 #if defined ( ZDO_MGMT_NWKDISC_RESPONSE )
// 1489 /*********************************************************************
// 1490  * @fn          ZDO_FinishProcessingMgmtNwkDiscReq
// 1491  *
// 1492  * @brief       This function finishes the processing of the Management
// 1493  *              Network Discover Request and generates the response.
// 1494  *
// 1495  *   Note:      This function will limit the number of items returned
// 1496  *              to ZDO_MAX_NWKDISC_ITEMS items.
// 1497  *
// 1498  * @param       ResultCountSrcAddr - source of the request
// 1499  * @param       msg - pointer to incoming message
// 1500  * @param       SecurityUse -
// 1501  *
// 1502  * @return      none
// 1503  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1504 void ZDO_FinishProcessingMgmtNwkDiscReq( void )
ZDO_FinishProcessingMgmtNwkDiscReq:
          CFI Block cfiBlock341 Using cfiCommon0
          CFI Function ZDO_FinishProcessingMgmtNwkDiscReq
        CODE
// 1505 {
        FUNCALL ZDO_FinishProcessingMgmtNwkDiscReq, nwk_getNwkDescList
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_FinishProcessingMgmtNwkDiscReq, nwk_getNwkDescList
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_FinishProcessingMgmtNwkDiscReq, nwk_getNwkDescList
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_FinishProcessingMgmtNwkDiscReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_FinishProcessingMgmtNwkDiscReq, NLME_GetProtocolVersion
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_FinishProcessingMgmtNwkDiscReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_FinishProcessingMgmtNwkDiscReq, ZMacGetReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_FinishProcessingMgmtNwkDiscReq, ZDP_MgmtNwkDiscRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_FinishProcessingMgmtNwkDiscReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_FinishProcessingMgmtNwkDiscReq, NLME_NwkDiscTerm
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
// 1506   byte count, i, ResultCount = 0;
        MOV     ?V0,#0x0
// 1507   networkDesc_t *newDesc = NULL, *pList, *NetworkList;
        MOV     R6,#0x0
        MOV     R7,#0x0
// 1508 
// 1509   NetworkList = nwk_getNwkDescList();
        ; Setup parameters for call to function nwk_getNwkDescList
        LCALL   `??nwk_getNwkDescList::?relay`; Banked call to: nwk_getNwkDescList
        MOV     ?V2,R2
        MOV     ?V3,R3
// 1510 
// 1511   // Count the number of nwk descriptors in the list
// 1512   pList = nwk_getNwkDescList();
        ; Setup parameters for call to function nwk_getNwkDescList
        LCALL   `??nwk_getNwkDescList::?relay`; Banked call to: nwk_getNwkDescList
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     R0,?V4
        MOV     R1,?V5
        SJMP    ??CrossCallReturnLabel_428
// 1513   while (pList)
// 1514   {
// 1515     ResultCount++;
??ZDO_FinishProcessingMgmtNwkDiscReq_0:
        INC     ?V0
// 1516     pList = pList->nextDesc;
        LCALL   ?Subroutine105 & 0xFFFF
// 1517   }
??CrossCallReturnLabel_428:
        MOV     A,R0
        ORL     A,R1
        JNZ     ??ZDO_FinishProcessingMgmtNwkDiscReq_0
// 1518 
// 1519   if ( ZSTACK_ROUTER_BUILD )
        MOV     DPTR,#zgDeviceLogicalType
        MOVX    A,@DPTR
        JZ      ??ZDO_FinishProcessingMgmtNwkDiscReq_1
        XRL     A,#0x1
        JZ      $+5
        LJMP    ??ZDO_FinishProcessingMgmtNwkDiscReq_2 & 0xFFFF
// 1520   {
// 1521     // Look for my PanID.
// 1522     pList = nwk_getNwkDescList();
??ZDO_FinishProcessingMgmtNwkDiscReq_1:
        ; Setup parameters for call to function nwk_getNwkDescList
        LCALL   `??nwk_getNwkDescList::?relay`; Banked call to: nwk_getNwkDescList
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     R0,?V4
        MOV     R1,?V5
// 1523     while ( pList )
        MOV     A,R0
        ORL     A,R1
        JZ      ??ZDO_FinishProcessingMgmtNwkDiscReq_3
        SJMP    ??CrossCallReturnLabel_429
// 1524     {
// 1525       if ( pList->panId == _NIB.nwkPanId )
// 1526       {
// 1527         break;
// 1528       }
// 1529 
// 1530 
// 1531       if ( !pList->nextDesc )
// 1532       {
// 1533         break;
// 1534       }
// 1535       pList = pList->nextDesc;
??ZDO_FinishProcessingMgmtNwkDiscReq_4:
        LCALL   ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_429:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_488:
        MOV     DPTR,#_NIB + 33
        MOVX    A,@DPTR
        XRL     A,R2
        JNZ     ??ZDO_FinishProcessingMgmtNwkDiscReq_5
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R3
??ZDO_FinishProcessingMgmtNwkDiscReq_5:
        JZ      ??ZDO_FinishProcessingMgmtNwkDiscReq_6
        LCALL   ?Subroutine189 & 0xFFFF
// 1536     }
??CrossCallReturnLabel_636:
        ADDC    A,R1
        MOV     DPH,A
        LCALL   ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_489:
        MOV     A,R2
        ORL     A,R3
        JNZ     ??ZDO_FinishProcessingMgmtNwkDiscReq_4
??ZDO_FinishProcessingMgmtNwkDiscReq_6:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine232_0 & 0xFFFF
??CrossCallReturnLabel_417:
        MOV     DPTR,#_NIB + 33
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??ZDO_FinishProcessingMgmtNwkDiscReq_7
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_FinishProcessingMgmtNwkDiscReq_7:
        JNZ     $+5
        LJMP    ??ZDO_FinishProcessingMgmtNwkDiscReq_2 & 0xFFFF
// 1537 
// 1538 
// 1539     // If my Pan not present (query to a star network ZC or an isolated ZR?),
// 1540     // prepend it.
// 1541     if ( !pList || (pList->panId != _NIB.nwkPanId) )
// 1542     {
// 1543       newDesc = (networkDesc_t *)osal_mem_alloc( sizeof( networkDesc_t ) );
??ZDO_FinishProcessingMgmtNwkDiscReq_3:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,#0x16
        MOV     R3,#0x0
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     R6,?V4
        MOV     R7,?V5
// 1544       if ( newDesc )
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_FinishProcessingMgmtNwkDiscReq_2
// 1545       {
// 1546         byte pJoin;
// 1547 
// 1548         newDesc->panId = _NIB.nwkPanId;
        MOV     DPTR,#_NIB + 33
        LCALL   ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_162:
        LCALL   ??Subroutine220_0 & 0xFFFF
// 1549         newDesc->logicalChannel = _NIB.nwkLogicalChannel;
??CrossCallReturnLabel_371:
        MOV     DPTR,#_NIB + 22
        LCALL   ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_168:
        INC     DPTR
        MOVX    @DPTR,A
// 1550         newDesc->version = NLME_GetProtocolVersion();
        ; Setup parameters for call to function NLME_GetProtocolVersion
        LCALL   `??NLME_GetProtocolVersion::?relay`; Banked call to: NLME_GetProtocolVersion
        MOV     A,R1
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 1551         newDesc->stackProfile = zgStackProfile;
        MOV     DPTR,#zgStackProfile
        LCALL   ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_169:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 1552 
// 1553         //Extended PanID
// 1554         osal_cpyExtAddr( newDesc->extendedPANID, _NIB.extendedPANID);
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,#(_NIB + 53) & 0xff
        MOV     R5,#((_NIB + 53) >> 8) & 0xff
        LCALL   ?Subroutine144 & 0xFFFF
??CrossCallReturnLabel_230:
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 1555 
// 1556         ZMacGetReq( ZMacAssociationPermit, &pJoin );
        ; Setup parameters for call to function ZMacGetReq
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        MOV     R1,#0x41
        LCALL   `??ZMacGetReq::?relay`; Banked call to: ZMacGetReq
// 1557         newDesc->chosenRouter = ((pJoin) ? ZDAppNwkAddr.addr.shortAddr :
// 1558                                            INVALID_NODE_ADDR);
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        JZ      ??ZDO_FinishProcessingMgmtNwkDiscReq_8
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ??Subroutine232_0 & 0xFFFF
??CrossCallReturnLabel_418:
        SJMP    ??ZDO_FinishProcessingMgmtNwkDiscReq_9
??ZDO_FinishProcessingMgmtNwkDiscReq_8:
        MOV     R0,#-0x2
        MOV     R1,#-0x1
??ZDO_FinishProcessingMgmtNwkDiscReq_9:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine220_0 & 0xFFFF
// 1559 
// 1560         newDesc->nextDesc = NetworkList;
??CrossCallReturnLabel_372:
        LCALL   ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_529:
        MOV     A,?V2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V3
        MOVX    @DPTR,A
// 1561         NetworkList = newDesc;
        MOV     ?V2,R6
        MOV     ?V3,R7
// 1562         ResultCount++;
        INC     ?V0
// 1563       }
// 1564     }
// 1565   }
// 1566 
// 1567   // Calc the count and apply a max count.
// 1568   if ( zdappMgmtNwkDiscStartIndex > ResultCount )
??ZDO_FinishProcessingMgmtNwkDiscReq_2:
        MOV     DPTR,#zdappMgmtNwkDiscStartIndex
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,?V0
        CLR     C
        SUBB    A,R0
        JNC     ??ZDO_FinishProcessingMgmtNwkDiscReq_10
// 1569   {
// 1570     count = 0;
        MOV     R1,#0x0
        SJMP    ??ZDO_FinishProcessingMgmtNwkDiscReq_11
// 1571   }
// 1572   else
// 1573   {
// 1574     count = ResultCount - zdappMgmtNwkDiscStartIndex;
??ZDO_FinishProcessingMgmtNwkDiscReq_10:
        MOV     A,?V0
        CLR     C
        SUBB    A,R0
        MOV     R1,A
// 1575     if ( count > ZDO_MAX_NWKDISC_ITEMS )
        CLR     C
        SUBB    A,#0x6
        JC      ??ZDO_FinishProcessingMgmtNwkDiscReq_12
// 1576     {
// 1577       count = ZDO_MAX_NWKDISC_ITEMS;
        MOV     R1,#0x5
// 1578     }
// 1579 
// 1580     // Move the list pointer up to the start index.
// 1581     for ( i = 0; i < zdappMgmtNwkDiscStartIndex; i++ )
??ZDO_FinishProcessingMgmtNwkDiscReq_12:
        MOV     R0,#0x0
        SJMP    ??ZDO_FinishProcessingMgmtNwkDiscReq_13
// 1582     {
// 1583       NetworkList = NetworkList->nextDesc;
??ZDO_FinishProcessingMgmtNwkDiscReq_14:
        MOV     A,?V2
        LCALL   ??Subroutine261_0 & 0xFFFF
// 1584     }
??CrossCallReturnLabel_634:
        ADDC    A,?V3
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_341:
        MOV     ?V3,A
        INC     R0
??ZDO_FinishProcessingMgmtNwkDiscReq_13:
        MOV     DPTR,#zdappMgmtNwkDiscStartIndex
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,R0
        CLR     C
        SUBB    A,R2
        JC      ??ZDO_FinishProcessingMgmtNwkDiscReq_14
// 1585   }
// 1586 
// 1587   ZDP_MgmtNwkDiscRsp( zdappMgmtNwkDiscRspTransSeq,
// 1588                      &zdappMgmtNwkDiscRspAddr, ZSuccess, ResultCount,
// 1589                       zdappMgmtNwkDiscStartIndex,
// 1590                       count,
// 1591                       NetworkList,
// 1592                       false );
??ZDO_FinishProcessingMgmtNwkDiscReq_11:
        ; Setup parameters for call to function ZDP_MgmtNwkDiscRsp
        MOV     ?V1,#0x0
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     A,R1
        MOV     ?V1,A
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     DPTR,#zdappMgmtNwkDiscStartIndex
        MOVX    A,@DPTR
        MOV     ?V1,A
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     R5,?V0
        MOV     R4,#0x0
        MOV     R2,#zdappMgmtNwkDiscRspAddr & 0xff
        MOV     R3,#(zdappMgmtNwkDiscRspAddr >> 8) & 0xff
        MOV     DPTR,#zdappMgmtNwkDiscRspTransSeq
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??ZDP_MgmtNwkDiscRsp::?relay`; Banked call to: ZDP_MgmtNwkDiscRsp
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
// 1593 
// 1594   if ( ZSTACK_ROUTER_BUILD )
        MOV     DPTR,#zgDeviceLogicalType
        MOVX    A,@DPTR
        JZ      ??ZDO_FinishProcessingMgmtNwkDiscReq_15
        XRL     A,#0x1
        JNZ     ??ZDO_FinishProcessingMgmtNwkDiscReq_16
// 1595   {
// 1596     if ( newDesc != NULL )
??ZDO_FinishProcessingMgmtNwkDiscReq_15:
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_FinishProcessingMgmtNwkDiscReq_16
// 1597     {
// 1598       osal_mem_free( newDesc );
        ; Setup parameters for call to function osal_mem_free
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1599     }
// 1600   }
// 1601 
// 1602   NLME_NwkDiscTerm();
??ZDO_FinishProcessingMgmtNwkDiscReq_16:
        ; Setup parameters for call to function NLME_NwkDiscTerm
        LCALL   `??NLME_NwkDiscTerm::?relay`; Banked call to: NLME_NwkDiscTerm
// 1603 }
        MOV     A,#0x1
        LJMP    ?Subroutine5 & 0xFFFF
          CFI EndBlock cfiBlock341
// 1604 #endif
// 1605 
// 1606 /*********************************************************************
// 1607  * @fn          ZDO_ProcessMgmtRtgReq
// 1608  *
// 1609  * @brief       This function finishes the processing of the Management
// 1610  *              Routing Request and generates the response.
// 1611  *
// 1612  *   Note:      This function will limit the number of items returned
// 1613  *              to ZDO_MAX_RTG_ITEMS items.
// 1614  *
// 1615  * @param       inMsg - incoming message (request)
// 1616  *
// 1617  * @return      none
// 1618  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1619 void ZDO_ProcessMgmtRtgReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtRtgReq:
          CFI Block cfiBlock342 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtRtgReq
        CODE
// 1620 {
        FUNCALL ZDO_ProcessMgmtRtgReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, ZDP_MgmtRtgRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     ?V2,R2
        MOV     ?V3,R3
// 1621   byte x;
// 1622   byte maxNumItems;
// 1623   byte numItems = 0;
        MOV     R6,#0x0
// 1624   uint8 *pBuf = NULL;
        MOV     ?V6,R6
        MOV     ?V7,R6
// 1625   rtgItem_t *pList;
// 1626   uint8 StartIndex = inMsg->asdu[0];
        LCALL   ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_390:
        ADDC    A,?V3
        MOV     DPH,A
        LCALL   ??Subroutine228_0 & 0xFFFF
??CrossCallReturnLabel_394:
        MOV     R7,A
// 1627 
// 1628   // Get the number of table items
// 1629   NLME_GetRequest( nwkNumRoutingTableEntries, 0, &maxNumItems );
        ; Setup parameters for call to function NLME_GetRequest
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     R1,#-0x63
        LCALL   `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
// 1630 
// 1631   if ( maxNumItems > StartIndex )
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,R7
        CLR     C
        SUBB    A,R0
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtRtgReq_0 & 0xFFFF
// 1632   {
// 1633     numItems = maxNumItems - StartIndex;    // Start at the passed in index
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R7
        MOV     R6,A
// 1634 
// 1635     // limit the size of the list
// 1636     if ( numItems > ZDO_MAX_RTG_ITEMS )
        CLR     C
        SUBB    A,#0xb
        JC      ??ZDO_ProcessMgmtRtgReq_1
// 1637     {
// 1638       numItems = ZDO_MAX_RTG_ITEMS;
        MOV     R6,#0xa
// 1639     }
// 1640 
// 1641     // Allocate the memory to build the table
// 1642     pBuf = osal_mem_alloc( (short)(sizeof( rtgItem_t ) * numItems) );
??ZDO_ProcessMgmtRtgReq_1:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,R6
        MOV     B,#0x7
        MUL     AB
        MOV     R2,A
        MOV     R3,B
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     ?V6,R2
        MOV     ?V7,R3
// 1643 
// 1644     if ( pBuf != NULL )
        MOV     A,R2
        ORL     A,?V7
        JZ      ??ZDO_ProcessMgmtRtgReq_2
// 1645     {
// 1646       // Convert buffer to list
// 1647       pList = (rtgItem_t *)pBuf;
// 1648 
// 1649       // Loop through items and build list
// 1650       for ( x = 0; x < numItems; x++ )
        MOV     ?V4,#0x0
        SJMP    ??ZDO_ProcessMgmtRtgReq_3
// 1651       {
// 1652         NLME_GetRequest( nwkRoutingTable, (uint16)(x + StartIndex), (void*)pList );
// 1653 
// 1654         // Remap the status to the RoutingTableList Record Format defined in the ZigBee spec
// 1655         switch( pList->status )
// 1656         {
// 1657           case RT_ACTIVE:
// 1658             pList->status = ZDO_MGMT_RTG_ENTRY_ACTIVE;
// 1659             break;
// 1660 
// 1661           case RT_DISC:
// 1662             pList->status = ZDO_MGMT_RTG_ENTRY_DISCOVERY_UNDERWAY;
// 1663             break;
// 1664 
// 1665           case RT_LINK_FAIL:
// 1666             pList->status = ZDO_MGMT_RTG_ENTRY_DISCOVERY_FAILED;
// 1667             break;
// 1668 
// 1669           case RT_INIT:
// 1670           case RT_REPAIR:
// 1671           default:
// 1672             pList->status = ZDO_MGMT_RTG_ENTRY_INACTIVE;
??ZDO_ProcessMgmtRtgReq_4:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x3
??ZDO_ProcessMgmtRtgReq_5:
        MOVX    @DPTR,A
// 1673             break;
// 1674         }
// 1675 
// 1676         // Increment pointer to next record
// 1677         pList++;
        MOV     A,?V0
        ADD     A,#0x7
        MOV     ?V0,A
        JNC     ??ZDO_ProcessMgmtRtgReq_6
        INC     ?V1
??ZDO_ProcessMgmtRtgReq_6:
        INC     ?V4
??ZDO_ProcessMgmtRtgReq_3:
        MOV     A,?V4
        CLR     C
        SUBB    A,R6
        JNC     ??ZDO_ProcessMgmtRtgReq_0
        ; Setup parameters for call to function NLME_GetRequest
        MOV     R4,?V0
        MOV     R5,?V1
        MOV     A,?V4
        ADD     A,R7
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        MOV     R1,#-0x75
        LCALL   `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        DEC     A
        JZ      ??ZDO_ProcessMgmtRtgReq_7
        DEC     A
        JZ      ??ZDO_ProcessMgmtRtgReq_8
        DEC     A
        JZ      ??ZDO_ProcessMgmtRtgReq_9
        SJMP    ??ZDO_ProcessMgmtRtgReq_4
??ZDO_ProcessMgmtRtgReq_7:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     A
        SJMP    ??ZDO_ProcessMgmtRtgReq_5
??ZDO_ProcessMgmtRtgReq_8:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x1
        SJMP    ??ZDO_ProcessMgmtRtgReq_5
??ZDO_ProcessMgmtRtgReq_9:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x2
        SJMP    ??ZDO_ProcessMgmtRtgReq_5
// 1678       }
// 1679     }
// 1680     else
// 1681     {
// 1682       numItems = 0;
??ZDO_ProcessMgmtRtgReq_2:
        MOV     R6,#0x0
// 1683     }
// 1684   }
// 1685 
// 1686   // Send response
// 1687   ZDP_MgmtRtgRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSuccess, maxNumItems, StartIndex, numItems,
// 1688                         (rtgItem_t *)pBuf, false );
??ZDO_ProcessMgmtRtgReq_0:
        ; Setup parameters for call to function ZDP_MgmtRtgRsp
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R6
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,R7
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R4,#0x0
        MOV     A,?V2
        LCALL   ??Subroutine255_0 & 0xFFFF
??CrossCallReturnLabel_604:
        ADDC    A,?V3
        MOV     R3,A
        MOV     A,?V2
        LCALL   ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_216:
        ADDC    A,?V3
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??ZDP_MgmtRtgRsp::?relay`; Banked call to: ZDP_MgmtRtgRsp
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
// 1689 
// 1690   if ( pBuf != NULL )
        MOV     A,?V6
        ORL     A,?V7
        JZ      ??ZDO_ProcessMgmtRtgReq_10
// 1691   {
// 1692     osal_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V6
        MOV     R3,?V7
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1693   }
// 1694 }
??ZDO_ProcessMgmtRtgReq_10:
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        LJMP    ??Subroutine207_0 & 0xFFFF
          CFI EndBlock cfiBlock342

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine124:
          CFI Block cfiCond343 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_385
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond344 Using cfiCommon0
          CFI (cfiCond344) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond344) Conditional ??CrossCallReturnLabel_386
          CFI (cfiCond344) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond344) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond344) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond344) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond344) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond344) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond344) CFA_SP SP+-2
          CFI (cfiCond344) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker345 Using cfiCommon1
          CFI (cfiPicker345) NoFunction
          CFI (cfiPicker345) Picker
        MOV     ?V0,R2
        MOV     ?V1,R3
          CFI EndBlock cfiCond343
          CFI EndBlock cfiCond344
          CFI EndBlock cfiPicker345
        REQUIRE ??Subroutine224_0
        ; // Fall through to label ??Subroutine224_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine224_0:
          CFI Block cfiCond346 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_388
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond347 Using cfiCommon0
          CFI (cfiCond347) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond347) Conditional ??CrossCallReturnLabel_389
          CFI (cfiCond347) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond347) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond347) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond347) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond347) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond347) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond347) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond347) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond347) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond347) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond347) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond347) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond347) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond347) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond347) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond347) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond347) CFA_SP SP+-2
          CFI (cfiCond347) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond348 Using cfiCommon0
          CFI (cfiCond348) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond348) Conditional ??CrossCallReturnLabel_390
          CFI (cfiCond348) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond348) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond348) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond348) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond348) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond348) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond348) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond348) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond348) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond348) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond348) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond348) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond348) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond348) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond348) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond348) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond348) CFA_SP SP+-2
          CFI (cfiCond348) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond349 Using cfiCommon0
          CFI (cfiCond349) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond349) Conditional ??CrossCallReturnLabel_391
          CFI (cfiCond349) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond349) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond349) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond349) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond349) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond349) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond349) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond349) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond349) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond349) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond349) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond349) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond349) CFA_SP SP+-2
          CFI (cfiCond349) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond350 Using cfiCommon0
          CFI (cfiCond350) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond350) Conditional ??CrossCallReturnLabel_385
          CFI (cfiCond350) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond350) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond350) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond350) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond350) CFA_SP SP+-2
          CFI (cfiCond350) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond351 Using cfiCommon0
          CFI (cfiCond351) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond351) Conditional ??CrossCallReturnLabel_386
          CFI (cfiCond351) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond351) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond351) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond351) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond351) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond351) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond351) CFA_SP SP+-2
          CFI (cfiCond351) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker352 Using cfiCommon1
          CFI (cfiPicker352) NoFunction
          CFI (cfiPicker352) Picker
        MOV     A,R2
          CFI EndBlock cfiCond346
          CFI EndBlock cfiCond347
          CFI EndBlock cfiCond348
          CFI EndBlock cfiCond349
          CFI EndBlock cfiCond350
          CFI EndBlock cfiCond351
          CFI EndBlock cfiPicker352
        REQUIRE ??Subroutine225_0
        ; // Fall through to label ??Subroutine225_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine225_0:
          CFI Block cfiCond353 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_387
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond354 Using cfiCommon0
          CFI (cfiCond354) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond354) Conditional ??CrossCallReturnLabel_388
          CFI (cfiCond354) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond354) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond354) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond354) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond354) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond354) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond354) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond354) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond354) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond354) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond354) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond354) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond354) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond354) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond354) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond354) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond354) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond354) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond354) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond354) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond354) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond354) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond354) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond354) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond354) CFA_SP SP+-2
          CFI (cfiCond354) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond355 Using cfiCommon0
          CFI (cfiCond355) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond355) Conditional ??CrossCallReturnLabel_389
          CFI (cfiCond355) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond355) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond355) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond355) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond355) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond355) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond355) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond355) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond355) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond355) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond355) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond355) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond355) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond355) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond355) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond355) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond355) CFA_SP SP+-2
          CFI (cfiCond355) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond356 Using cfiCommon0
          CFI (cfiCond356) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond356) Conditional ??CrossCallReturnLabel_390
          CFI (cfiCond356) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond356) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond356) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond356) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond356) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond356) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond356) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond356) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond356) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond356) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond356) CFA_SP SP+-2
          CFI (cfiCond356) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond357 Using cfiCommon0
          CFI (cfiCond357) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond357) Conditional ??CrossCallReturnLabel_391
          CFI (cfiCond357) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond357) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond357) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond357) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond357) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond357) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond357) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond357) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond357) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond357) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond357) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond357) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond357) CFA_SP SP+-2
          CFI (cfiCond357) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond358 Using cfiCommon0
          CFI (cfiCond358) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond358) Conditional ??CrossCallReturnLabel_385
          CFI (cfiCond358) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond358) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond358) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond358) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond358) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond358) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond358) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond358) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond358) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond358) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond358) CFA_SP SP+-2
          CFI (cfiCond358) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond359 Using cfiCommon0
          CFI (cfiCond359) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond359) Conditional ??CrossCallReturnLabel_386
          CFI (cfiCond359) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond359) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond359) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond359) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond359) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond359) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond359) CFA_SP SP+-2
          CFI (cfiCond359) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker360 Using cfiCommon1
          CFI (cfiPicker360) NoFunction
          CFI (cfiPicker360) Picker
        LCALL   ??Subroutine265_0 & 0xFFFF
??CrossCallReturnLabel_667:
        RET
          CFI EndBlock cfiCond353
          CFI EndBlock cfiCond354
          CFI EndBlock cfiCond355
          CFI EndBlock cfiCond356
          CFI EndBlock cfiCond357
          CFI EndBlock cfiCond358
          CFI EndBlock cfiCond359
          CFI EndBlock cfiPicker360
// 1695 
// 1696 /*********************************************************************
// 1697  * @fn          ZDO_ProcessMgmtBindReq
// 1698  *
// 1699  * @brief       This function finishes the processing of the Management
// 1700  *              Bind Request and generates the response.
// 1701  *
// 1702  *   Note:      This function will limit the number of items returned
// 1703  *              to ZDO_MAX_BIND_ITEMS items.
// 1704  *
// 1705  * @param       inMsg - incoming message (request)
// 1706  *
// 1707  * @return      none
// 1708  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1709 void ZDO_ProcessMgmtBindReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtBindReq:
          CFI Block cfiBlock361 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtBindReq
        CODE
// 1710 {
        FUNCALL ZDO_ProcessMgmtBindReq, APSME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, APSME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, ZDP_MgmtBindRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     ?V4,R2
        MOV     ?V5,R3
// 1711 #if defined ( REFLECTOR )
// 1712   byte x;
// 1713   uint16 maxNumItems;
// 1714   uint16 numItems;
// 1715   uint8 *pBuf = NULL;
        MOV     ?V8,#0x0
        MOV     ?V9,#0x0
// 1716   apsBindingItem_t *pList;
// 1717   uint8 StartIndex = inMsg->asdu[0];
        LCALL   ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_391:
        ADDC    A,?V5
        MOV     DPH,A
        LCALL   ??Subroutine228_0 & 0xFFFF
??CrossCallReturnLabel_395:
        MOV     ?V2,A
// 1718   uint8 status;
// 1719 
// 1720   // Get the number of table items
// 1721   APSME_GetRequest( apsNumBindingTableEntries, 0, (byte*)(&maxNumItems) );
        ; Setup parameters for call to function APSME_GetRequest
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     R1,#-0x5d
        LCALL   `??APSME_GetRequest::?relay`; Banked call to: APSME_GetRequest
// 1722 
// 1723   if ( maxNumItems > StartIndex )
        LCALL   ??Subroutine240_0 & 0xFFFF
??CrossCallReturnLabel_504:
        CLR     C
        MOV     A,?V2
        SUBB    A,R2
        CLR     A
        SUBB    A,R3
        JNC     ??ZDO_ProcessMgmtBindReq_0
// 1724   {
// 1725     numItems = maxNumItems - StartIndex;    // Start at the passed in index
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R0,?V2
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R0
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,#0x0
        MOV     R7,A
// 1726   }
// 1727   else
// 1728   {
// 1729     numItems = 0;
// 1730   }
// 1731 
// 1732   // limit the size of the list
// 1733   if ( numItems > ZDO_MAX_BIND_ITEMS )
        CLR     C
        MOV     A,R6
        SUBB    A,#0x4
        MOV     A,R7
        SUBB    A,#0x0
        JC      ??ZDO_ProcessMgmtBindReq_1
// 1734   {
// 1735     numItems = ZDO_MAX_BIND_ITEMS;
        MOV     R6,#0x3
        MOV     R7,#0x0
        SJMP    ??ZDO_ProcessMgmtBindReq_2
// 1736   }
// 1737 
// 1738   // Allocate the memory to build the table
// 1739   if ( numItems && (pBuf = osal_mem_alloc( sizeof( apsBindingItem_t ) * numItems )) )
??ZDO_ProcessMgmtBindReq_1:
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_ProcessMgmtBindReq_0
??ZDO_ProcessMgmtBindReq_2:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        MOV     A,R2
        MOV     B,#0x15
        MUL     AB
        MOV     R2,A
        MOV     R0,B
        MOV     B,#0x15
        MOV     A,R3
        MUL     AB
        ADD     A,R0
        MOV     R3,A
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     ?V8,R2
        MOV     ?V9,R3
        MOV     A,R2
        ORL     A,?V9
        JZ      ??ZDO_ProcessMgmtBindReq_0
// 1740   {
// 1741     status = ZSuccess;
        MOV     ?V3,#0x0
// 1742 
// 1743     // Convert buffer to list
// 1744     pList = (apsBindingItem_t *)pBuf;
// 1745 
// 1746     // Loop through items and build list
// 1747     for ( x = 0; x < numItems; x++ )
        MOV     ?V6,#0x0
        SJMP    ??ZDO_ProcessMgmtBindReq_3
// 1748     {
// 1749       APSME_GetRequest( apsBindingTable, (x + StartIndex), (void*)pList );
??ZDO_ProcessMgmtBindReq_4:
        ; Setup parameters for call to function APSME_GetRequest
        MOV     R4,?V0
        MOV     R5,?V1
        MOV     R0,?V2
        MOV     A,?V6
        ADD     A,R0
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        MOV     R1,#-0x5e
        LCALL   `??APSME_GetRequest::?relay`; Banked call to: APSME_GetRequest
// 1750       pList++;
        MOV     A,?V0
        ADD     A,#0x15
        MOV     ?V0,A
        JNC     ??ZDO_ProcessMgmtBindReq_5
        INC     ?V1
// 1751     }
??ZDO_ProcessMgmtBindReq_5:
        INC     ?V6
??ZDO_ProcessMgmtBindReq_3:
        CLR     C
        MOV     A,?V6
        SUBB    A,R6
        CLR     A
        SUBB    A,R7
        JC      ??ZDO_ProcessMgmtBindReq_4
        MOV     A,R6
        MOV     R1,A
        SJMP    ??ZDO_ProcessMgmtBindReq_6
// 1752 
// 1753   }
// 1754   else
// 1755   {
// 1756     status = ZDP_NOT_PERMITTED;
??ZDO_ProcessMgmtBindReq_0:
        MOV     ?V3,#-0x75
// 1757     numItems = 0;
        MOV     R1,#0x0
// 1758   }
// 1759 
// 1760   // Send response
// 1761   ZDP_MgmtBindRsp( inMsg->TransSeq, &(inMsg->srcAddr), status, (byte)maxNumItems, StartIndex,
// 1762                    (byte)numItems, (apsBindingItem_t *)pBuf, false );
??ZDO_ProcessMgmtBindReq_6:
        ; Setup parameters for call to function ZDP_MgmtBindRsp
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     R0,#?V8
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,R1
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,?V2
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R4,?V3
        MOV     A,?V4
        LCALL   ??Subroutine255_0 & 0xFFFF
??CrossCallReturnLabel_605:
        ADDC    A,?V5
        MOV     R3,A
        MOV     A,?V4
        LCALL   ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_217:
        ADDC    A,?V5
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??ZDP_MgmtBindRsp::?relay`; Banked call to: ZDP_MgmtBindRsp
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
// 1763 
// 1764   if ( pBuf )
        MOV     A,?V8
        ORL     A,?V9
        JZ      ??ZDO_ProcessMgmtBindReq_7
// 1765   {
// 1766     osal_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V8
        MOV     R3,?V9
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1767   }
// 1768 #else
// 1769   (void)inMsg;
// 1770 #endif
// 1771 }
??ZDO_ProcessMgmtBindReq_7:
        MOV     A,#0x2
          CFI EndBlock cfiBlock361
        REQUIRE ?Subroutine8
        ; // Fall through to label ?Subroutine8

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine8:
          CFI Block cfiBlock362 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock362
        REQUIRE ??Subroutine226_0
        ; // Fall through to label ??Subroutine226_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine226_0:
          CFI Block cfiBlock363 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0xa
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock363

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine62:
          CFI Block cfiCond364 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_399
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond365 Using cfiCommon0
          CFI (cfiCond365) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond365) Conditional ??CrossCallReturnLabel_400
          CFI (cfiCond365) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond365) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond365) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond365) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond365) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond365) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond365) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond365) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond365) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond365) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond365) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond365) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond365) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond365) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond365) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond365) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond365) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond365) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond365) CFA_SP SP+-2
          CFI (cfiCond365) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker366 Using cfiCommon1
          CFI (cfiPicker366) NoFunction
          CFI (cfiPicker366) Picker
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
          CFI EndBlock cfiCond364
          CFI EndBlock cfiCond365
          CFI EndBlock cfiPicker366
        REQUIRE ??Subroutine227_0
        ; // Fall through to label ??Subroutine227_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine227_0:
          CFI Block cfiCond367 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_397
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond368 Using cfiCommon0
          CFI (cfiCond368) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond368) Conditional ??CrossCallReturnLabel_398
          CFI (cfiCond368) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond368) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond368) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond368) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond368) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond368) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond368) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond368) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond368) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond368) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond368) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond368) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond368) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond368) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond368) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond368) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond368) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond368) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond368) CFA_SP SP+-2
          CFI (cfiCond368) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond369 Using cfiCommon0
          CFI (cfiCond369) Function ZDO_UpdateNwkStatus
          CFI (cfiCond369) Conditional ??CrossCallReturnLabel_399
          CFI (cfiCond369) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond369) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond369) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond369) CFA_SP SP+-2
          CFI (cfiCond369) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond370 Using cfiCommon0
          CFI (cfiCond370) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond370) Conditional ??CrossCallReturnLabel_400
          CFI (cfiCond370) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond370) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond370) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond370) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond370) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond370) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond370) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond370) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond370) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond370) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond370) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond370) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond370) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond370) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond370) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond370) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond370) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond370) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond370) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond370) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond370) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond370) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond370) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond370) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond370) CFA_SP SP+-2
          CFI (cfiCond370) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker371 Using cfiCommon1
          CFI (cfiPicker371) NoFunction
          CFI (cfiPicker371) Picker
        INC     DPTR
          CFI EndBlock cfiCond367
          CFI EndBlock cfiCond368
          CFI EndBlock cfiCond369
          CFI EndBlock cfiCond370
          CFI EndBlock cfiPicker371
        REQUIRE ??Subroutine228_0
        ; // Fall through to label ??Subroutine228_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine228_0:
          CFI Block cfiCond372 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_392
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond373 Using cfiCommon0
          CFI (cfiCond373) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond373) Conditional ??CrossCallReturnLabel_393
          CFI (cfiCond373) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond373) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond373) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond373) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond373) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond373) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond373) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond373) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond373) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond373) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond373) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond373) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond373) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond373) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond373) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond373) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond373) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond373) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond373) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond373) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond373) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond373) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond373) CFA_SP SP+-2
          CFI (cfiCond373) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond374 Using cfiCommon0
          CFI (cfiCond374) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond374) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond374) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond374) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond374) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond374) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond374) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond374) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond374) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond374) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond374) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond374) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond374) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond374) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond374) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond374) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond374) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond374) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond374) CFA_SP SP+-2
          CFI (cfiCond374) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond375 Using cfiCommon0
          CFI (cfiCond375) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond375) Conditional ??CrossCallReturnLabel_395
          CFI (cfiCond375) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond375) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond375) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond375) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond375) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond375) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond375) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond375) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond375) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond375) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond375) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond375) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond375) CFA_SP SP+-2
          CFI (cfiCond375) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond376 Using cfiCommon0
          CFI (cfiCond376) Function ZDO_ParseEndDeviceTimeoutRsp
          CFI (cfiCond376) Conditional ??CrossCallReturnLabel_396
          CFI (cfiCond376) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond376) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond376) CFA_SP SP+-7
          CFI Block cfiCond377 Using cfiCommon0
          CFI (cfiCond377) Function ZDO_UpdateNwkStatus
          CFI (cfiCond377) Conditional ??CrossCallReturnLabel_397
          CFI (cfiCond377) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond377) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond377) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond377) CFA_SP SP+-2
          CFI (cfiCond377) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond378 Using cfiCommon0
          CFI (cfiCond378) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond378) Conditional ??CrossCallReturnLabel_398
          CFI (cfiCond378) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond378) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond378) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond378) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond378) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond378) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond378) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond378) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond378) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond378) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond378) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond378) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond378) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond378) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond378) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond378) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond378) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond378) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond378) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond378) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond378) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond378) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond378) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond378) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond378) CFA_SP SP+-2
          CFI (cfiCond378) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond379 Using cfiCommon0
          CFI (cfiCond379) Function ZDO_UpdateNwkStatus
          CFI (cfiCond379) Conditional ??CrossCallReturnLabel_399
          CFI (cfiCond379) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond379) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond379) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond379) CFA_SP SP+-2
          CFI (cfiCond379) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond380 Using cfiCommon0
          CFI (cfiCond380) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond380) Conditional ??CrossCallReturnLabel_400
          CFI (cfiCond380) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond380) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond380) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond380) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond380) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond380) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond380) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond380) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond380) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond380) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond380) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond380) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond380) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond380) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond380) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond380) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond380) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond380) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond380) CFA_SP SP+-2
          CFI (cfiCond380) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker381 Using cfiCommon1
          CFI (cfiPicker381) NoFunction
          CFI (cfiPicker381) Picker
        LCALL   ?Subroutine169 & 0xFFFF
??CrossCallReturnLabel_403:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond372
          CFI EndBlock cfiCond373
          CFI EndBlock cfiCond374
          CFI EndBlock cfiCond375
          CFI EndBlock cfiCond376
          CFI EndBlock cfiCond377
          CFI EndBlock cfiCond378
          CFI EndBlock cfiCond379
          CFI EndBlock cfiCond380
          CFI EndBlock cfiPicker381
// 1772 
// 1773 /*********************************************************************
// 1774  * @fn          ZDO_ProcessMgmtDirectJoinReq
// 1775  *
// 1776  * @brief       This function finishes the processing of the Management
// 1777  *              Direct Join Request and generates the response.
// 1778  *
// 1779  * @param       inMsg - incoming message (request)
// 1780  *
// 1781  * @return      none
// 1782  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1783 void ZDO_ProcessMgmtDirectJoinReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtDirectJoinReq:
          CFI Block cfiBlock382 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
        CODE
// 1784 {
        FUNCALL ZDO_ProcessMgmtDirectJoinReq, NLME_DirectJoinRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtDirectJoinReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1785   uint8 *deviceAddr;
// 1786   uint8 capInfo;
// 1787   uint8 stat;
// 1788 
// 1789   // Parse the message
// 1790   deviceAddr = inMsg->asdu;
// 1791   capInfo = inMsg->asdu[Z_EXTADDR_LEN];
// 1792 
// 1793   stat = (byte) NLME_DirectJoinRequest( deviceAddr, capInfo );
        LCALL   ?Subroutine123 & 0xFFFF
??CrossCallReturnLabel_198:
        LCALL   ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_159:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??NLME_DirectJoinRequest::?relay`; Banked call to: NLME_DirectJoinRequest
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1794 
// 1795   ZDP_MgmtDirectJoinRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat, false );
        ; Setup parameters for call to function ZDP_SendData
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0,#0x35
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_406:
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
// 1796 }
          CFI EndBlock cfiBlock382
        REQUIRE ?Subroutine10
        ; // Fall through to label ?Subroutine10

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine10:
          CFI Block cfiBlock383 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x1
        LJMP    ??Subroutine209_0 & 0xFFFF
          CFI EndBlock cfiBlock383

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine126:
          CFI Block cfiCond384 Using cfiCommon0
          CFI Function ZDO_ProcessEndDeviceTimeoutReq
          CFI Conditional ??CrossCallReturnLabel_405
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond385 Using cfiCommon0
          CFI (cfiCond385) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond385) Conditional ??CrossCallReturnLabel_406
          CFI (cfiCond385) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond385) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond385) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond385) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond385) CFA_SP SP+-2
          CFI (cfiCond385) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond386 Using cfiCommon0
          CFI (cfiCond386) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond386) Conditional ??CrossCallReturnLabel_407
          CFI (cfiCond386) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond386) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond386) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond386) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond386) CFA_SP SP+-2
          CFI (cfiCond386) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker387 Using cfiCommon1
          CFI (cfiPicker387) NoFunction
          CFI (cfiPicker387) Picker
        MOV     R1,#0x1
          CFI EndBlock cfiCond384
          CFI EndBlock cfiCond385
          CFI EndBlock cfiCond386
          CFI EndBlock cfiPicker387
        REQUIRE ??Subroutine229_0
        ; // Fall through to label ??Subroutine229_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine229_0:
          CFI Block cfiCond388 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_404
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond389 Using cfiCommon0
          CFI (cfiCond389) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond389) Conditional ??CrossCallReturnLabel_405
          CFI (cfiCond389) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond389) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond389) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond389) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond389) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond389) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond389) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond389) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond389) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond389) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond389) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond389) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond389) CFA_SP SP+-2
          CFI (cfiCond389) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond390 Using cfiCommon0
          CFI (cfiCond390) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond390) Conditional ??CrossCallReturnLabel_406
          CFI (cfiCond390) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond390) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond390) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond390) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond390) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond390) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond390) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond390) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond390) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond390) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond390) CFA_SP SP+-2
          CFI (cfiCond390) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond391 Using cfiCommon0
          CFI (cfiCond391) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond391) Conditional ??CrossCallReturnLabel_407
          CFI (cfiCond391) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond391) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond391) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond391) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond391) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond391) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond391) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond391) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond391) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond391) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond391) CFA_SP SP+-2
          CFI (cfiCond391) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker392 Using cfiCommon1
          CFI (cfiPicker392) NoFunction
          CFI (cfiPicker392) Picker
        LCALL   ?Subroutine182 & 0xFFFF
??CrossCallReturnLabel_409:
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        RET
          CFI EndBlock cfiCond388
          CFI EndBlock cfiCond389
          CFI EndBlock cfiCond390
          CFI EndBlock cfiCond391
          CFI EndBlock cfiPicker392

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine182:
          CFI Block cfiCond393 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_408
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond394 Using cfiCommon0
          CFI (cfiCond394) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond394) Conditional ??CrossCallReturnLabel_409, ??CrossCallReturnLabel_405
          CFI (cfiCond394) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond394) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond394) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond394) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond394) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond394) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond394) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond394) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond394) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond394) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond394) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond394) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond394) CFA_SP SP+-4
          CFI (cfiCond394) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond395 Using cfiCommon0
          CFI (cfiCond395) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond395) Conditional ??CrossCallReturnLabel_409, ??CrossCallReturnLabel_406
          CFI (cfiCond395) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond395) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond395) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond395) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond395) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond395) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond395) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond395) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond395) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond395) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond395) CFA_SP SP+-4
          CFI (cfiCond395) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond396 Using cfiCommon0
          CFI (cfiCond396) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond396) Conditional ??CrossCallReturnLabel_409, ??CrossCallReturnLabel_407
          CFI (cfiCond396) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond396) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond396) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond396) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond396) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond396) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond396) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond396) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond396) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond396) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond396) CFA_SP SP+-4
          CFI (cfiCond396) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond397 Using cfiCommon0
          CFI (cfiCond397) Function ZDO_ProcessUserDescSet
          CFI (cfiCond397) Conditional ??CrossCallReturnLabel_409, ??CrossCallReturnLabel_404
          CFI (cfiCond397) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond397) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond397) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond397) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond397) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond397) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond397) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond397) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond397) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond397) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond397) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond397) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond397) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond397) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond397) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond397) CFA_SP SP+-4
          CFI (cfiCond397) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiPicker398 Using cfiCommon1
          CFI (cfiPicker398) NoFunction
          CFI (cfiPicker398) Picker
        MOV     A,R6
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,R7
        MOV     R5,A
        MOV     A,R6
        ADD     A,#0xf
        RET
          CFI EndBlock cfiCond393
          CFI EndBlock cfiCond394
          CFI EndBlock cfiCond395
          CFI EndBlock cfiCond396
          CFI EndBlock cfiCond397
          CFI EndBlock cfiPicker398

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine123:
          CFI Block cfiCond399 Using cfiCommon0
          CFI Function ZDO_ProcessEndDeviceTimeoutReq
          CFI Conditional ??CrossCallReturnLabel_197
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond400 Using cfiCommon0
          CFI (cfiCond400) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond400) Conditional ??CrossCallReturnLabel_198
          CFI (cfiCond400) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond400) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond400) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond400) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond400) CFA_SP SP+-2
          CFI (cfiCond400) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond401 Using cfiCommon0
          CFI (cfiCond401) Function ZDO_ParseAddrRsp
          CFI (cfiCond401) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond401) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond401) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond401) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond401) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond401) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond401) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond401) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond401) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond401) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond401) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond401) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond401) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond401) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond401) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond401) CFA_SP SP+-2
          CFI (cfiCond401) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond402 Using cfiCommon0
          CFI (cfiCond402) Function ZDO_ParseAddrRsp
          CFI (cfiCond402) Conditional ??CrossCallReturnLabel_200
          CFI (cfiCond402) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond402) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond402) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond402) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond402) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond402) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond402) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond402) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond402) CFA_SP SP+-2
          CFI (cfiCond402) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker403 Using cfiCommon1
          CFI (cfiPicker403) NoFunction
          CFI (cfiPicker403) Picker
        LCALL   ?Subroutine184 & 0xFFFF
??CrossCallReturnLabel_302:
        RET
          CFI EndBlock cfiCond399
          CFI EndBlock cfiCond400
          CFI EndBlock cfiCond401
          CFI EndBlock cfiCond402
          CFI EndBlock cfiPicker403

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine184:
          CFI Block cfiCond404 Using cfiCommon0
          CFI Function ZDO_ProcessEndDeviceTimeoutReq
          CFI Conditional ??CrossCallReturnLabel_302, ??CrossCallReturnLabel_197
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond405 Using cfiCommon0
          CFI (cfiCond405) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond405) Conditional ??CrossCallReturnLabel_302, ??CrossCallReturnLabel_198
          CFI (cfiCond405) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond405) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond405) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond405) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond405) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond405) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond405) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond405) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond405) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond405) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond405) CFA_SP SP+-4
          CFI (cfiCond405) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond406 Using cfiCommon0
          CFI (cfiCond406) Function ZDO_ParseAddrRsp
          CFI (cfiCond406) Conditional ??CrossCallReturnLabel_302, ??CrossCallReturnLabel_199
          CFI (cfiCond406) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond406) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond406) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond406) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond406) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond406) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond406) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond406) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond406) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond406) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond406) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond406) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond406) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond406) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond406) CFA_SP SP+-4
          CFI (cfiCond406) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond407 Using cfiCommon0
          CFI (cfiCond407) Function ZDO_ParseAddrRsp
          CFI (cfiCond407) Conditional ??CrossCallReturnLabel_302, ??CrossCallReturnLabel_200
          CFI (cfiCond407) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond407) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond407) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond407) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond407) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond407) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond407) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond407) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond407) CFA_SP SP+-4
          CFI (cfiCond407) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond408 Using cfiCommon0
          CFI (cfiCond408) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond408) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_120
          CFI (cfiCond408) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond408) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond408) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond408) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond408) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond408) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond408) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond408) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond408) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond408) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond408) CFA_SP SP+-4
          CFI (cfiCond408) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond409 Using cfiCommon0
          CFI (cfiCond409) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond409) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_121
          CFI (cfiCond409) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond409) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond409) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond409) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond409) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond409) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond409) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond409) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond409) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond409) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond409) CFA_SP SP+-4
          CFI (cfiCond409) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond410 Using cfiCommon0
          CFI (cfiCond410) Function ZDO_ProcessUserDescSet
          CFI (cfiCond410) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_122
          CFI (cfiCond410) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond410) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond410) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond410) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond410) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond410) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond410) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond410) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond410) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond410) CFA_SP SP+-4
          CFI (cfiCond410) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond411 Using cfiCommon0
          CFI (cfiCond411) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond411) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_195
          CFI (cfiCond411) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond411) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond411) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond411) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond411) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond411) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond411) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond411) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond411) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond411) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond411) CFA_SP SP+-4
          CFI (cfiCond411) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond412 Using cfiCommon0
          CFI (cfiCond412) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond412) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_196
          CFI (cfiCond412) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond412) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond412) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond412) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond412) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond412) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond412) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond412) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond412) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond412) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond412) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond412) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond412) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond412) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond412) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond412) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond412) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond412) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond412) CFA_SP SP+-4
          CFI (cfiCond412) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker413 Using cfiCommon1
          CFI (cfiPicker413) NoFunction
          CFI (cfiPicker413) Picker
        MOV     A,R6
        LCALL   ??Subroutine265_0 & 0xFFFF
??CrossCallReturnLabel_664:
        ADDC    A,R7
        RET
          CFI EndBlock cfiCond404
          CFI EndBlock cfiCond405
          CFI EndBlock cfiCond406
          CFI EndBlock cfiCond407
          CFI EndBlock cfiCond408
          CFI EndBlock cfiCond409
          CFI EndBlock cfiCond410
          CFI EndBlock cfiCond411
          CFI EndBlock cfiCond412
          CFI EndBlock cfiPicker413
// 1797 
// 1798 /*********************************************************************
// 1799  * @fn          ZDO_ProcessMgmtLeaveReq
// 1800  *
// 1801  * @brief       This function processes a Management Leave Request
// 1802  *              and generates the response.
// 1803  *
// 1804  * @param       inMsg - incoming message (request)
// 1805  *
// 1806  * @return      none
// 1807  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1808 void ZDO_ProcessMgmtLeaveReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtLeaveReq:
          CFI Block cfiBlock414 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
        CODE
// 1809 {
        FUNCALL ZDO_ProcessMgmtLeaveReq, AddrMgrExtAddrValid
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, NLME_LeaveReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, NLME_SetPollRate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 6
        MOV     A,#-0x6
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        LCALL   ?Subroutine124 & 0xFFFF
// 1810   NLME_LeaveReq_t req;
// 1811   ZStatus_t       status;
// 1812   uint8           option;
// 1813   uint8 *msg = inMsg->asdu;
??CrossCallReturnLabel_386:
        ADDC    A,?V1
        LCALL   ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_614:
        MOV     R7,A
// 1814 
// 1815   if ( ( AddrMgrExtAddrValid( msg ) == FALSE                 ) ||
// 1816        ( osal_ExtAddrEqual( msg, NLME_GetExtAddr() ) == TRUE )    )
        ; Setup parameters for call to function AddrMgrExtAddrValid
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??AddrMgrExtAddrValid::?relay`; Banked call to: AddrMgrExtAddrValid
        MOV     A,R1
        JZ      ??ZDO_ProcessMgmtLeaveReq_0
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     R4,?V2
        MOV     R5,?V3
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV     A,R1
        XRL     A,#0x1
        JNZ     ??ZDO_ProcessMgmtLeaveReq_1
// 1817   {
// 1818     // Remove this device
// 1819     req.extAddr = NULL;
??ZDO_ProcessMgmtLeaveReq_0:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        SJMP    ??ZDO_ProcessMgmtLeaveReq_2
// 1820   }
// 1821   else
// 1822   {
// 1823     // Remove child device
// 1824     req.extAddr = msg;
??ZDO_ProcessMgmtLeaveReq_1:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
// 1825   }
??ZDO_ProcessMgmtLeaveReq_2:
        LCALL   ?Subroutine25 & 0xFFFF
// 1826 
// 1827   option = msg[Z_EXTADDR_LEN];
??CrossCallReturnLabel_27:
        MOV     R0,A
// 1828   if ( option & ZDP_MGMT_LEAVE_REQ_RC )
        MOV     C,0xE0 /* A   */.6
        JNC     ??ZDO_ProcessMgmtLeaveReq_3
// 1829   {
// 1830     req.removeChildren = TRUE;
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1831   }
// 1832 
// 1833   if ( option & ZDP_MGMT_LEAVE_REQ_REJOIN )
??ZDO_ProcessMgmtLeaveReq_3:
        MOV     A,R0
        MOV     C,0xE0 /* A   */.7
        JNC     ??ZDO_ProcessMgmtLeaveReq_4
// 1834   {
// 1835      req.rejoin = TRUE;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1836   }
// 1837 
// 1838   req.silent = FALSE;
??ZDO_ProcessMgmtLeaveReq_4:
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1839 
// 1840   status = NLME_LeaveReq( &req );
        ; Setup parameters for call to function NLME_LeaveReq
        INC     A
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??NLME_LeaveReq::?relay`; Banked call to: NLME_LeaveReq
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1841 
// 1842   if ( ZG_BUILD_ENDDEVICE_TYPE )
// 1843   {
// 1844     // Stop polling and get ready to reset
// 1845     NLME_SetPollRate( 0 );
        ; Setup parameters for call to function NLME_SetPollRate
        MOV     R2,#0x0
        MOV     R3,#0x0
        LCALL   `??NLME_SetPollRate::?relay`; Banked call to: NLME_SetPollRate
// 1846   }
// 1847 
// 1848   ZDP_MgmtLeaveRsp( inMsg->TransSeq, &(inMsg->srcAddr), status, FALSE );
        ; Setup parameters for call to function ZDP_SendData
        MOV     ?V2,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V2,#0x34
        MOV     ?V3,#-0x80
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        LCALL   ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_214:
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 1849 }
        MOV     A,#0x6
        LJMP    ?Subroutine4 & 0xFFFF
          CFI EndBlock cfiBlock414

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine134:
          CFI Block cfiCond415 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_213
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond416 Using cfiCommon0
          CFI (cfiCond416) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond416) Conditional ??CrossCallReturnLabel_214
          CFI (cfiCond416) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond416) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond416) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond416) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond416) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond416) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond416) CFA_SP SP+-2
          CFI (cfiCond416) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker417 Using cfiCommon1
          CFI (cfiPicker417) NoFunction
          CFI (cfiPicker417) Picker
        MOV     R1,#0x1
        MOV     A,?V0
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,?V1
        MOV     R5,A
        MOV     A,?V0
        ADD     A,#0xf
        MOV     R2,A
        CLR     A
        ADDC    A,?V1
        MOV     R3,A
        RET
          CFI EndBlock cfiCond415
          CFI EndBlock cfiCond416
          CFI EndBlock cfiPicker417
// 1850 
// 1851 
// 1852 /*********************************************************************
// 1853  * @fn          ZDO_ProcessMgmtPermitJoinReq
// 1854  *
// 1855  * @brief       This function processes a Management Permit Join Request
// 1856  *              and generates the response.
// 1857  *
// 1858  * @param       inMsg - incoming message (request)
// 1859  *
// 1860  * @return      none
// 1861  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1862 void ZDO_ProcessMgmtPermitJoinReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtPermitJoinReq:
          CFI Block cfiBlock418 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtPermitJoinReq
        CODE
// 1863 {
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, NLME_PermitJoiningRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, ZDSecMgrPermitJoining
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        LCALL   ?Subroutine75 & 0xFFFF
// 1864   uint8 stat;
// 1865   uint8 duration;
// 1866   uint8 tcsig;
// 1867 
// 1868   duration = inMsg->asdu[ZDP_MGMT_PERMIT_JOIN_REQ_DURATION];
??CrossCallReturnLabel_121:
        MOV     ?V1,A
// 1869   tcsig    = inMsg->asdu[ZDP_MGMT_PERMIT_JOIN_REQ_TC_SIG];
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0,A
// 1870 
// 1871   // Set the network layer permit join duration
// 1872   stat = (byte) NLME_PermitJoiningRequest( duration );
        ; Setup parameters for call to function NLME_PermitJoiningRequest
        MOV     R1,?V1
        LCALL   `??NLME_PermitJoiningRequest::?relay`; Banked call to: NLME_PermitJoiningRequest
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1873 
// 1874   // Handle the Trust Center Significance
// 1875   if ( ZG_SECURE_ENABLED && ZG_BUILD_COORDINATOR_TYPE && ZG_DEVICE_COORDINATOR_TYPE )
        MOV     DPTR,#zgDeviceLogicalType
        MOVX    A,@DPTR
        JNZ     ??ZDO_ProcessMgmtPermitJoinReq_0
// 1876   {
// 1877     if ( tcsig == TRUE )
        MOV     A,#0x1
        XRL     A,?V0
        JNZ     ??ZDO_ProcessMgmtPermitJoinReq_0
// 1878     {
// 1879       ZDSecMgrPermitJoining( duration );
        ; Setup parameters for call to function ZDSecMgrPermitJoining
        MOV     R1,?V1
        LCALL   `??ZDSecMgrPermitJoining::?relay`; Banked call to: ZDSecMgrPermitJoining
// 1880     }
// 1881   }
// 1882 
// 1883   // Send a response if unicast
// 1884   if ( !inMsg->wasBroadcast )
??ZDO_ProcessMgmtPermitJoinReq_0:
        MOV     A,R6
        ADD     A,#0xb
        LCALL   ??Subroutine249_0 & 0xFFFF
??CrossCallReturnLabel_545:
        JNZ     ??ZDO_ProcessMgmtPermitJoinReq_1
// 1885   {
// 1886     ZDP_MgmtPermitJoinRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat, false );
        ; Setup parameters for call to function ZDP_SendData
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0,#0x36
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        LCALL   ?Subroutine126 & 0xFFFF
// 1887   }
??CrossCallReturnLabel_407:
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
// 1888 }
??ZDO_ProcessMgmtPermitJoinReq_1:
        LJMP    ?Subroutine10 & 0xFFFF
          CFI EndBlock cfiBlock418

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine75:
          CFI Block cfiCond419 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_120
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond420 Using cfiCommon0
          CFI (cfiCond420) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond420) Conditional ??CrossCallReturnLabel_121
          CFI (cfiCond420) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond420) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond420) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond420) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond420) CFA_SP SP+-2
          CFI (cfiCond420) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond421 Using cfiCommon0
          CFI (cfiCond421) Function ZDO_ProcessUserDescSet
          CFI (cfiCond421) Conditional ??CrossCallReturnLabel_122
          CFI (cfiCond421) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond421) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond421) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond421) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond421) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond421) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond421) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond421) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond421) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond421) CFA_SP SP+-2
          CFI (cfiCond421) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker422 Using cfiCommon1
          CFI (cfiPicker422) NoFunction
          CFI (cfiPicker422) Picker
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        LCALL   ?Subroutine184 & 0xFFFF
??CrossCallReturnLabel_300:
        LCALL   ?Subroutine174 & 0xFFFF
??CrossCallReturnLabel_410:
        RET
          CFI EndBlock cfiCond419
          CFI EndBlock cfiCond420
          CFI EndBlock cfiCond421
          CFI EndBlock cfiPicker422

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine174:
          CFI Block cfiCond423 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_120
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond424 Using cfiCommon0
          CFI (cfiCond424) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond424) Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_121
          CFI (cfiCond424) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond424) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond424) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond424) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond424) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond424) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond424) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond424) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond424) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond424) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond424) CFA_SP SP+-4
          CFI (cfiCond424) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond425 Using cfiCommon0
          CFI (cfiCond425) Function ZDO_ProcessUserDescSet
          CFI (cfiCond425) Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_122
          CFI (cfiCond425) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond425) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond425) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond425) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond425) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond425) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond425) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond425) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond425) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond425) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond425) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond425) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond425) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond425) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond425) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond425) CFA_SP SP+-4
          CFI (cfiCond425) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond426 Using cfiCommon0
          CFI (cfiCond426) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond426) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_0
          CFI (cfiCond426) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond426) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond426) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond426) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond426) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond426) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond426) CFA_SP SP+-4
          CFI (cfiCond426) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond427 Using cfiCommon0
          CFI (cfiCond427) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond427) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_1
          CFI (cfiCond427) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond427) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond427) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond427) CFA_SP SP+-4
          CFI (cfiCond427) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker428 Using cfiCommon1
          CFI (cfiPicker428) NoFunction
          CFI (cfiPicker428) Picker
        MOV     DPH,A
        MOVX    A,@DPTR
          CFI EndBlock cfiCond423
          CFI EndBlock cfiCond424
          CFI EndBlock cfiCond425
          CFI EndBlock cfiCond426
          CFI EndBlock cfiCond427
          CFI EndBlock cfiPicker428
        REQUIRE ??Subroutine230_0
        ; // Fall through to label ??Subroutine230_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine230_0:
          CFI Block cfiCond429 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_412
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond430 Using cfiCommon0
          CFI (cfiCond430) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond430) Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_120
          CFI (cfiCond430) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond430) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond430) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond430) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond430) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond430) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond430) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond430) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond430) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond430) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond430) CFA_SP SP+-4
          CFI (cfiCond430) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond431 Using cfiCommon0
          CFI (cfiCond431) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond431) Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_121
          CFI (cfiCond431) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond431) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond431) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond431) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond431) CFA_SP SP+-4
          CFI (cfiCond431) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond432 Using cfiCommon0
          CFI (cfiCond432) Function ZDO_ProcessUserDescSet
          CFI (cfiCond432) Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_122
          CFI (cfiCond432) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond432) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond432) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond432) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond432) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond432) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond432) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond432) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond432) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond432) CFA_SP SP+-4
          CFI (cfiCond432) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond433 Using cfiCommon0
          CFI (cfiCond433) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond433) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_0
          CFI (cfiCond433) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond433) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond433) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond433) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond433) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond433) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond433) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond433) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond433) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond433) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond433) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond433) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond433) CFA_SP SP+-4
          CFI (cfiCond433) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond434 Using cfiCommon0
          CFI (cfiCond434) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond434) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_1
          CFI (cfiCond434) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond434) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond434) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond434) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond434) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond434) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond434) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond434) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond434) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond434) CFA_SP SP+-4
          CFI (cfiCond434) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker435 Using cfiCommon1
          CFI (cfiPicker435) NoFunction
          CFI (cfiPicker435) Picker
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond429
          CFI EndBlock cfiCond430
          CFI EndBlock cfiCond431
          CFI EndBlock cfiCond432
          CFI EndBlock cfiCond433
          CFI EndBlock cfiCond434
          CFI EndBlock cfiPicker435
// 1889 
// 1890 /*
// 1891  * This function stub allows the next higher layer to be notified of
// 1892  * a permit joining timeout.
// 1893  */
// 1894 /*********************************************************************
// 1895  * @fn          ZDO_ProcessMgmtPermitJoinTimeout
// 1896  *
// 1897  * @brief       This function stub allows the next higher layer to be
// 1898  *              notified of a permit joining timeout. Currently, this
// 1899  *              directly bypasses the APS layer.
// 1900  *
// 1901  * @param       none
// 1902  *
// 1903  * @return      none
// 1904  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1905 void ZDO_ProcessMgmtPermitJoinTimeout( void )
NLME_PermitJoiningTimeout:
          CFI Block cfiBlock436 Using cfiCommon0
          CFI Function NLME_PermitJoiningTimeout
        CODE
// 1906 {
        FUNCALL NLME_PermitJoiningTimeout, ZDSecMgrPermitJoiningTimeout
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1907   #if defined( ZDO_MGMT_PERMIT_JOIN_RESPONSE )
// 1908   // Currently, only the ZDSecMgr needs to be notified
// 1909   if ( ZG_SECURE_ENABLED && ZG_BUILD_COORDINATOR_TYPE && ZG_DEVICE_COORDINATOR_TYPE )
        MOV     DPTR,#zgDeviceLogicalType
        MOVX    A,@DPTR
        JNZ     ??NLME_PermitJoiningTimeout_0
// 1910   {
// 1911     ZDSecMgrPermitJoiningTimeout();
        ; Setup parameters for call to function ZDSecMgrPermitJoiningTimeout
        LCALL   `??ZDSecMgrPermitJoiningTimeout::?relay`; Banked call to: ZDSecMgrPermitJoiningTimeout
// 1912   }
// 1913   #endif
// 1914 }
??NLME_PermitJoiningTimeout_0:
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock436
// 1915 
// 1916 /*********************************************************************
// 1917  * @fn          ZDO_ProcessUserDescReq
// 1918  *
// 1919  * @brief       This function finishes the processing of the User
// 1920  *              Descriptor Request and generates the response.
// 1921  *
// 1922  * @param       inMsg - incoming message (request)
// 1923  *
// 1924  * @return      none
// 1925  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1926 void ZDO_ProcessUserDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessUserDescReq:
          CFI Block cfiBlock437 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescReq
        CODE
// 1927 {
        FUNCALL ZDO_ProcessUserDescReq, osal_nv_read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescReq, ZDP_UserDescRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 17
        MOV     A,#-0x11
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1928   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_111:
        MOV     ?V0,A
        CLR     A
        ADDC    A,R1
        MOV     ?V1,A
// 1929   UserDescriptorFormat_t userDesc;
// 1930 
// 1931   if ( (aoi == ZDAppNwkAddr.addr.shortAddr) && (ZSUCCESS == osal_nv_read(
// 1932              ZCD_NV_USERDESC, 0, sizeof(UserDescriptorFormat_t), &userDesc )) )
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,?V0
        JNZ     ??ZDO_ProcessUserDescReq_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V1
??ZDO_ProcessUserDescReq_0:
        JNZ     ??ZDO_ProcessUserDescReq_1
        ; Setup parameters for call to function osal_nv_read
        MOV     R0,?XSP + 0
        MOV     R1,?XSP + 1
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     ?V2,#0x11
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#-0x7f
        MOV     R3,#0x0
        LCALL   `??osal_nv_read::?relay`; Banked call to: osal_nv_read
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R1
        JNZ     ??ZDO_ProcessUserDescReq_1
// 1933   {
// 1934     ZDP_UserDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), aoi, &userDesc, false );
        ; Setup parameters for call to function ZDP_UserDescRsp
        MOV     ?V2,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     R4,?V0
        MOV     R5,?V1
        LCALL   ?Subroutine125 & 0xFFFF
// 1935   }
??CrossCallReturnLabel_202:
        LCALL   `??ZDP_UserDescRsp::?relay`; Banked call to: ZDP_UserDescRsp
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        SJMP    ??ZDO_ProcessUserDescReq_2
// 1936   else
// 1937   {
// 1938     ZDP_GenericRsp(inMsg->TransSeq, &(inMsg->srcAddr),
// 1939            ZDP_NOT_SUPPORTED, aoi, User_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessUserDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV     ?V2,#0x11
        MOV     ?V3,#-0x80
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        LCALL   ?Subroutine130 & 0xFFFF
// 1940   }
??CrossCallReturnLabel_554:
        MOV     R5,A
        MOV     R4,#-0x7c
        LCALL   ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_203:
        LCALL   `??ZDP_GenericRsp::?relay`; Banked call to: ZDP_GenericRsp
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
// 1941 }
??ZDO_ProcessUserDescReq_2:
        MOV     A,#0x11
        LJMP    ?Subroutine4 & 0xFFFF
          CFI EndBlock cfiBlock437

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine125:
          CFI Block cfiCond438 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_201
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond439 Using cfiCommon0
          CFI (cfiCond439) Function ZDO_ProcessUserDescReq
          CFI (cfiCond439) Conditional ??CrossCallReturnLabel_202
          CFI (cfiCond439) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond439) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond439) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond439) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond439) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond439) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond439) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond439) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond439) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond439) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond439) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond439) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond439) CFA_SP SP+-2
          CFI (cfiCond439) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond440 Using cfiCommon0
          CFI (cfiCond440) Function ZDO_ProcessUserDescReq
          CFI (cfiCond440) Conditional ??CrossCallReturnLabel_203
          CFI (cfiCond440) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond440) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond440) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond440) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond440) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond440) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond440) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond440) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond440) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond440) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond440) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond440) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond440) CFA_SP SP+-2
          CFI (cfiCond440) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker441 Using cfiCommon1
          CFI (cfiPicker441) NoFunction
          CFI (cfiPicker441) Picker
        LCALL   ?Subroutine181 & 0xFFFF
??CrossCallReturnLabel_297:
        RET
          CFI EndBlock cfiCond438
          CFI EndBlock cfiCond439
          CFI EndBlock cfiCond440
          CFI EndBlock cfiPicker441

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine181:
          CFI Block cfiCond442 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_102
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond443 Using cfiCommon0
          CFI (cfiCond443) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond443) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_103
          CFI (cfiCond443) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond443) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond443) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond443) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond443) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond443) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond443) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond443) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond443) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond443) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond443) CFA_SP SP+-4
          CFI (cfiCond443) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond444 Using cfiCommon0
          CFI (cfiCond444) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond444) Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_201
          CFI (cfiCond444) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond444) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond444) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond444) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond444) CFA_SP SP+-4
          CFI (cfiCond444) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond445 Using cfiCommon0
          CFI (cfiCond445) Function ZDO_ProcessUserDescReq
          CFI (cfiCond445) Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_202
          CFI (cfiCond445) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond445) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond445) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond445) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond445) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond445) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond445) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond445) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond445) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond445) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond445) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond445) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond445) CFA_SP SP+-4
          CFI (cfiCond445) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond446 Using cfiCommon0
          CFI (cfiCond446) Function ZDO_ProcessUserDescReq
          CFI (cfiCond446) Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_203
          CFI (cfiCond446) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond446) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond446) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond446) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond446) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond446) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond446) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond446) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond446) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond446) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond446) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond446) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond446) CFA_SP SP+-4
          CFI (cfiCond446) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker447 Using cfiCommon1
          CFI (cfiPicker447) NoFunction
          CFI (cfiPicker447) Picker
        MOV     A,R6
        ADD     A,#0x2
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        MOV     A,R6
        ADD     A,#0xf
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI EndBlock cfiCond442
          CFI EndBlock cfiCond443
          CFI EndBlock cfiCond444
          CFI EndBlock cfiCond445
          CFI EndBlock cfiCond446
          CFI EndBlock cfiPicker447

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine69:
          CFI Block cfiCond448 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond449 Using cfiCommon0
          CFI (cfiCond449) Function ZDO_ProcessUserDescReq
          CFI (cfiCond449) Conditional ??CrossCallReturnLabel_111
          CFI (cfiCond449) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond449) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond449) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond449) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond449) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond449) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond449) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond449) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond449) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond449) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond449) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond449) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond449) CFA_SP SP+-2
          CFI (cfiCond449) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker450 Using cfiCommon1
          CFI (cfiPicker450) NoFunction
          CFI (cfiPicker450) Picker
        LCALL   ?Subroutine165 & 0xFFFF
??CrossCallReturnLabel_281:
        RET
          CFI EndBlock cfiCond448
          CFI EndBlock cfiCond449
          CFI EndBlock cfiPicker450

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine165:
          CFI Block cfiCond451 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_93
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond452 Using cfiCommon0
          CFI (cfiCond452) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond452) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_94
          CFI (cfiCond452) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond452) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond452) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond452) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond452) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond452) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond452) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond452) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond452) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond452) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond452) CFA_SP SP+-4
          CFI (cfiCond452) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond453 Using cfiCommon0
          CFI (cfiCond453) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond453) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_110
          CFI (cfiCond453) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond453) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond453) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond453) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond453) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond453) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond453) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond453) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond453) CFA_SP SP+-4
          CFI (cfiCond453) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond454 Using cfiCommon0
          CFI (cfiCond454) Function ZDO_ProcessUserDescReq
          CFI (cfiCond454) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_111
          CFI (cfiCond454) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond454) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond454) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond454) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond454) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond454) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond454) CFA_SP SP+-4
          CFI (cfiCond454) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker455 Using cfiCommon1
          CFI (cfiPicker455) NoFunction
          CFI (cfiPicker455) Picker
        LCALL   ?Subroutine203 & 0xFFFF
??CrossCallReturnLabel_324:
        LCALL   ?Subroutine199 & 0xFFFF
??CrossCallReturnLabel_458:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine257_0 & 0xFFFF
??CrossCallReturnLabel_648:
        MOV     R0,A
        CLR     A
        XCH     A,R0
        MOV     R1,A
        MOV     A,R2
        ADD     A,R0
        RET
          CFI EndBlock cfiCond451
          CFI EndBlock cfiCond452
          CFI EndBlock cfiCond453
          CFI EndBlock cfiCond454
          CFI EndBlock cfiPicker455

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine203:
          CFI Block cfiCond456 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_193
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond457 Using cfiCommon0
          CFI (cfiCond457) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond457) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_194
          CFI (cfiCond457) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond457) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond457) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond457) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond457) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond457) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond457) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond457) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond457) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond457) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond457) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond457) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond457) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond457) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond457) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond457) CFA_SP SP+-6
          CFI (cfiCond457) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond458 Using cfiCommon0
          CFI (cfiCond458) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond458) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_47
          CFI (cfiCond458) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond458) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond458) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond458) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond458) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond458) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond458) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond458) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond458) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond458) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond458) CFA_SP SP+-6
          CFI (cfiCond458) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond459 Using cfiCommon0
          CFI (cfiCond459) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond459) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_48
          CFI (cfiCond459) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond459) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond459) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond459) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond459) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond459) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond459) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond459) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond459) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond459) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond459) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond459) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond459) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond459) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond459) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond459) CFA_SP SP+-6
          CFI (cfiCond459) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond460 Using cfiCommon0
          CFI (cfiCond460) Function ZDO_ProcessNodeDescReq
          CFI (cfiCond460) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_93
          CFI (cfiCond460) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond460) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond460) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond460) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond460) CFA_SP SP+-6
          CFI (cfiCond460) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond461 Using cfiCommon0
          CFI (cfiCond461) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond461) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_94
          CFI (cfiCond461) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond461) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond461) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond461) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond461) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond461) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond461) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond461) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond461) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond461) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond461) CFA_SP SP+-6
          CFI (cfiCond461) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond462 Using cfiCommon0
          CFI (cfiCond462) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond462) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_110
          CFI (cfiCond462) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond462) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond462) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond462) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond462) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond462) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond462) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond462) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond462) CFA_SP SP+-6
          CFI (cfiCond462) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond463 Using cfiCommon0
          CFI (cfiCond463) Function ZDO_ProcessUserDescReq
          CFI (cfiCond463) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_111
          CFI (cfiCond463) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond463) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond463) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond463) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond463) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond463) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond463) CFA_SP SP+-6
          CFI (cfiCond463) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker464 Using cfiCommon1
          CFI (cfiPicker464) NoFunction
          CFI (cfiPicker464) Picker
        MOV     A,R6
        ADD     A,#0x13
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond456
          CFI EndBlock cfiCond457
          CFI EndBlock cfiCond458
          CFI EndBlock cfiCond459
          CFI EndBlock cfiCond460
          CFI EndBlock cfiCond461
          CFI EndBlock cfiCond462
          CFI EndBlock cfiCond463
          CFI EndBlock cfiPicker464
// 1942 
// 1943 /*********************************************************************
// 1944  * @fn          ZDO_ProcessUserDescSet
// 1945  *
// 1946  * @brief       This function finishes the processing of the User
// 1947  *              Descriptor Set and generates the response.
// 1948  *
// 1949  * @param       inMsg - incoming message (request)
// 1950  *
// 1951  * @return      none
// 1952  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1953 void ZDO_ProcessUserDescSet( zdoIncomingMsg_t *inMsg )
ZDO_ProcessUserDescSet:
          CFI Block cfiBlock465 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
        CODE
// 1954 {
        FUNCALL ZDO_ProcessUserDescSet, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 39, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescSet, osal_nv_write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 40, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescSet, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 21
        MOV     A,#-0x15
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
        LCALL   ?Subroutine75 & 0xFFFF
// 1955   uint8 *msg;
// 1956   uint16 aoi;
// 1957   UserDescriptorFormat_t userDesc;
// 1958   uint8 outMsg[3];
// 1959   uint8 status;
// 1960 
// 1961   msg = inMsg->asdu;
// 1962   aoi = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_122:
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        CLR     A
        XCH     A,R2
        MOV     R3,A
        MOV     A,R4
        ADD     A,R2
        MOV     ?V0,A
        CLR     A
        ADDC    A,R3
        MOV     ?V1,A
// 1963 
// 1964   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,?V0
        JNZ     ??ZDO_ProcessUserDescSet_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V1
??ZDO_ProcessUserDescSet_0:
        JZ      $+5
        LJMP    ??ZDO_ProcessUserDescSet_1 & 0xFFFF
// 1965   {
// 1966     userDesc.len = (msg[2] < AF_MAX_USER_DESCRIPTOR_LEN) ? msg[2] : AF_MAX_USER_DESCRIPTOR_LEN;
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,#0x10
        JNC     ??ZDO_ProcessUserDescSet_2
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        SJMP    ??ZDO_ProcessUserDescSet_3
??ZDO_ProcessUserDescSet_2:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x10
??ZDO_ProcessUserDescSet_3:
        MOVX    @DPTR,A
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine43 & 0xFFFF
// 1967     msg ++;  // increment one for the length field
// 1968 
// 1969     osal_memcpy( userDesc.desc, &msg[2], userDesc.len );
??CrossCallReturnLabel_64:
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V4,R1
        MOV     ?V5,R2
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 39)
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1970     osal_nv_write( ZCD_NV_USERDESC, 0, sizeof(UserDescriptorFormat_t), &userDesc );
        ; Setup parameters for call to function osal_nv_write
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 38)
        MOV     ?V2,#0x11
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#-0x7f
        MOV     R3,#0x0
        LCALL   `??osal_nv_write::?relay`; Banked call to: osal_nv_write
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1971     if ( userDesc.len != 0 )
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     DPTR,#ZDO_Config_Node_Descriptor
        JZ      ??ZDO_ProcessUserDescSet_4
// 1972     {
// 1973       ZDO_Config_Node_Descriptor.UserDescAvail = TRUE;
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.4
        SJMP    ??ZDO_ProcessUserDescSet_5
// 1974     }
// 1975     else
// 1976     {
// 1977       ZDO_Config_Node_Descriptor.UserDescAvail = FALSE;
??ZDO_ProcessUserDescSet_4:
        MOVX    A,@DPTR
        CLR     0xE0 /* A   */.4
??ZDO_ProcessUserDescSet_5:
        MOVX    @DPTR,A
// 1978     }
// 1979 
// 1980     status = ZDP_SUCCESS;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        SJMP    ??ZDO_ProcessUserDescSet_6
// 1981   }
// 1982   else
// 1983   {
// 1984     status =  ZDP_NOT_SUPPORTED;
??ZDO_ProcessUserDescSet_1:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7c
??ZDO_ProcessUserDescSet_6:
        MOVX    @DPTR,A
// 1985   }
// 1986 
// 1987   outMsg[0] = status;
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1988   outMsg[1] = LO_UINT16( aoi );
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0
        MOVX    @DPTR,A
// 1989   outMsg[2] = LO_UINT16( aoi );
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0
        MOVX    @DPTR,A
// 1990 
// 1991   ZDP_SendData( &(inMsg->TransSeq), &(inMsg->srcAddr), User_Desc_conf, 3, outMsg,
// 1992                inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_SendData
        LCALL   ?Subroutine136 & 0xFFFF
??CrossCallReturnLabel_222:
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_346:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 39)
        MOV     ?V0,#0x14
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 41)
        MOV     R1,#0x3
        LCALL   ??Subroutine229_0 & 0xFFFF
??CrossCallReturnLabel_404:
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1993 }
        MOV     A,#0x15
        LJMP    ?Subroutine9 & 0xFFFF
          CFI EndBlock cfiBlock465

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine136:
          CFI Block cfiCond466 Using cfiCommon0
          CFI Function ZDO_ProcessEndDeviceTimeoutReq
          CFI Conditional ??CrossCallReturnLabel_221
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond467 Using cfiCommon0
          CFI (cfiCond467) Function ZDO_ProcessUserDescSet
          CFI (cfiCond467) Conditional ??CrossCallReturnLabel_222
          CFI (cfiCond467) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond467) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond467) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond467) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond467) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond467) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond467) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond467) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond467) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond467) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond467) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond467) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond467) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond467) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond467) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond467) CFA_SP SP+-2
          CFI (cfiCond467) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond468 Using cfiCommon0
          CFI (cfiCond468) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond468) Conditional ??CrossCallReturnLabel_223
          CFI (cfiCond468) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond468) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond468) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond468) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond468) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond468) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond468) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond468) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond468) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond468) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond468) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond468) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond468) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker469 Using cfiCommon1
          CFI (cfiPicker469) NoFunction
          CFI (cfiPicker469) Picker
        LCALL   ?Subroutine180 & 0xFFFF
??CrossCallReturnLabel_602:
        ADDC    A,R7
        RET
          CFI EndBlock cfiCond466
          CFI EndBlock cfiCond467
          CFI EndBlock cfiCond468
          CFI EndBlock cfiPicker469
// 1994 
// 1995 /*********************************************************************
// 1996  * @fn          ZDO_ProcessDeviceAnnce
// 1997  *
// 1998  * @brief       This function processes a device annouce message.
// 1999  *
// 2000  * @param       inMsg - incoming message
// 2001  *
// 2002  * @return      none
// 2003  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2004 void ZDO_ProcessDeviceAnnce( zdoIncomingMsg_t *inMsg )
ZDO_ProcessDeviceAnnce:
          CFI Block cfiBlock470 Using cfiCommon0
          CFI Function ZDO_ProcessDeviceAnnce
        CODE
// 2005 {
        FUNCALL ZDO_ProcessDeviceAnnce, ZDO_ParseDeviceAnnce
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, nwkNeighborRemoveAllStranded
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_CheckNewAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetCoordExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetCoordShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, ZMacSetReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AssocGetWithExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AssocRemove
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AssocChangeNwkAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, ZDApp_NVUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, nwkNeighborUpdateNwkAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, RTG_RemoveRtgEntry
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryLookupNwk
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryLookupExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 32
        MOV     A,#-0x20
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 42)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 2006   ZDO_DeviceAnnce_t Annce;
// 2007   AddrMgrEntry_t addrEntry;
// 2008   uint8 parentExt[Z_EXTADDR_LEN];
// 2009 
// 2010   // Parse incoming message
// 2011   ZDO_ParseDeviceAnnce( inMsg, &Annce );
        ; Setup parameters for call to function ZDO_ParseDeviceAnnce
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        LCALL   `??ZDO_ParseDeviceAnnce::?relay`; Banked call to: ZDO_ParseDeviceAnnce
// 2012 
// 2013   if ( ZSTACK_END_DEVICE_BUILD )
        MOV     DPTR,#zgDeviceLogicalType
        MOVX    A,@DPTR
        XRL     A,#0x2
        JNZ     ??ZDO_ProcessDeviceAnnce_0
// 2014   {
// 2015     // Make sure the message didn't come from myself - end device only
// 2016     if ( osal_ExtAddrEqual( NLME_GetExtAddr(), Annce.extAddr ) && Annce.nwkAddr == NLME_GetShortAddr() )
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        LCALL   `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_0
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     R0,?V0
        MOV     R1,?V1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??ZDO_ProcessDeviceAnnce_1
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessDeviceAnnce_1:
        JNZ     $+5
        LJMP    ??ZDO_ProcessDeviceAnnce_2 & 0xFFFF
// 2017     {
// 2018       return;
// 2019     }
// 2020   }
// 2021 
// 2022 #if defined ( ZIGBEE_STOCHASTIC_ADDRESSING )
// 2023   // Clean up the neighbor table
// 2024   nwkNeighborRemoveAllStranded();
??ZDO_ProcessDeviceAnnce_0:
        ; Setup parameters for call to function nwkNeighborRemoveAllStranded
        LCALL   `??nwkNeighborRemoveAllStranded::?relay`; Banked call to: nwkNeighborRemoveAllStranded
// 2025 
// 2026   // If address conflict is detected, no need to update the address manager
// 2027   if ( NLME_CheckNewAddrSet( Annce.nwkAddr, Annce.extAddr )== ZFailure )
        ; Setup parameters for call to function NLME_CheckNewAddrSet
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_507:
        LCALL   `??NLME_CheckNewAddrSet::?relay`; Banked call to: NLME_CheckNewAddrSet
        MOV     A,R1
        XRL     A,#0x1
        JNZ     $+5
        LJMP    ??ZDO_ProcessDeviceAnnce_2 & 0xFFFF
// 2028   {
// 2029     return;
// 2030   }
// 2031 #endif
// 2032 
// 2033 #if defined ( ZIGBEE_STOCHASTIC_ADDRESSING )
// 2034   // Check for parent's address
// 2035   NLME_GetCoordExtAddr( parentExt );
        ; Setup parameters for call to function NLME_GetCoordExtAddr
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??NLME_GetCoordExtAddr::?relay`; Banked call to: NLME_GetCoordExtAddr
// 2036   if ( osal_ExtAddrEqual( parentExt, Annce.extAddr ) )
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_3
// 2037   {
// 2038     if ( Annce.nwkAddr != NLME_GetCoordShortAddr() )
        ; Setup parameters for call to function NLME_GetCoordShortAddr
        LCALL   `??NLME_GetCoordShortAddr::?relay`; Banked call to: NLME_GetCoordShortAddr
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     R0,?V0
        MOV     R1,?V1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??ZDO_ProcessDeviceAnnce_4
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessDeviceAnnce_4:
        JZ      ??ZDO_ProcessDeviceAnnce_3
// 2039     {
// 2040       // Set the Parent's MAC's new short address
// 2041       _NIB.nwkCoordAddress = Annce.nwkAddr;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine232_0 & 0xFFFF
??CrossCallReturnLabel_419:
        MOV     DPTR,#_NIB + 23
        LCALL   ??Subroutine220_0 & 0xFFFF
// 2042       ZMacSetReq( ZMacCoordShortAddress, (byte*)&(_NIB.nwkCoordAddress) );
??CrossCallReturnLabel_373:
        ; Setup parameters for call to function ZMacSetReq
        MOV     R2,#(_NIB + 23) & 0xff
        MOV     R3,#((_NIB + 23) >> 8) & 0xff
        MOV     R1,#0x4b
        LCALL   `??ZMacSetReq::?relay`; Banked call to: ZMacSetReq
// 2043     }
// 2044   }
// 2045 
// 2046   if ( ZSTACK_ROUTER_BUILD )
??ZDO_ProcessDeviceAnnce_3:
        MOV     DPTR,#zgDeviceLogicalType
        MOVX    A,@DPTR
        JZ      ??ZDO_ProcessDeviceAnnce_5
        XRL     A,#0x1
        JZ      $+5
        LJMP    ??ZDO_ProcessDeviceAnnce_6 & 0xFFFF
// 2047   {
// 2048     // If the device annce comes from a end device child that has moved
// 2049     // to another parent, remove it from associated device list
// 2050 
// 2051     // If the dev annce is coming from other device's children,
// 2052     // (The dev annce from its own children shall be unicast to itself,
// 2053     // So check the mac destination address)
// 2054     // Remove it from the associated device list. If it is not
// 2055     // a child, no action will be taken in AssocRemove() anyway.
// 2056     if ( inMsg->macDestAddr != NLME_GetShortAddr() )
??ZDO_ProcessDeviceAnnce_5:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     R0,?V0
        MOV     R1,?V1
        MOV     A,R6
        ADD     A,#0x11
        LCALL   ??Subroutine249_0 & 0xFFFF
??CrossCallReturnLabel_546:
        XRL     A,R0
        JNZ     ??ZDO_ProcessDeviceAnnce_7
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessDeviceAnnce_7:
        JZ      ??ZDO_ProcessDeviceAnnce_8
// 2057     {
// 2058       associated_devices_t *dev_ptr;
// 2059 
// 2060       // If it's an end device child
// 2061       dev_ptr = AssocGetWithExt( Annce.extAddr );
        ; Setup parameters for call to function AssocGetWithExt
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   `??AssocGetWithExt::?relay`; Banked call to: AssocGetWithExt
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     R0,?V0
        MOV     R1,?V1
// 2062       if ( dev_ptr )
        MOV     A,R0
        ORL     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_9
// 2063       {
// 2064         if ( dev_ptr->nodeRelation == CHILD_RFD ||
// 2065              dev_ptr->nodeRelation == CHILD_RFD_RX_IDLE )
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x1
        JZ      ??ZDO_ProcessDeviceAnnce_10
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x2
        JNZ     ??ZDO_ProcessDeviceAnnce_9
// 2066         {
// 2067           AssocRemove( Annce.extAddr );
??ZDO_ProcessDeviceAnnce_10:
        ; Setup parameters for call to function AssocRemove
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   `??AssocRemove::?relay`; Banked call to: AssocRemove
// 2068         }
// 2069       }
// 2070 
// 2071 #if defined ( ZIGBEE_CHILD_AGING )
// 2072       // Remove the address from the SrcMatch table,
// 2073       // just in case the device was aged out by Child Management Table process
// 2074       if ( ( pNwkNotMyChildListDelete != NULL ) &&
// 2075            ( zgChildAgingEnable == TRUE ) )
??ZDO_ProcessDeviceAnnce_9:
        MOV     DPTR,#pNwkNotMyChildListDelete
        LCALL   ??Subroutine234_0 & 0xFFFF
??CrossCallReturnLabel_440:
        JZ      ??ZDO_ProcessDeviceAnnce_8
        MOV     DPTR,#zgChildAgingEnable
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??ZDO_ProcessDeviceAnnce_8
// 2076       {
// 2077         pNwkNotMyChildListDelete( Annce.nwkAddr );
        ; Setup parameters for indirect call
        LCALL   ??Subroutine240_0 & 0xFFFF
// 2078       }
// 2079 #endif // ZIGBEE_CHILD_AGING
// 2080     }
??CrossCallReturnLabel_505:
        MOV     DPTR,#pNwkNotMyChildListDelete + 1
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        LCALL   ?CALL_IND
// 2081 
// 2082     if ( Annce.nwkAddr != NLME_GetShortAddr() )
??ZDO_ProcessDeviceAnnce_8:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     R0,?V0
        MOV     R1,?V1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??ZDO_ProcessDeviceAnnce_11
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessDeviceAnnce_11:
        JZ      ??ZDO_ProcessDeviceAnnce_6
// 2083     {
// 2084       // If an associated device is found with matched extended Address,
// 2085       // update its short address
// 2086       if ( AssocChangeNwkAddr( Annce.nwkAddr, Annce.extAddr ) )
        ; Setup parameters for call to function AssocChangeNwkAddr
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_508:
        LCALL   `??AssocChangeNwkAddr::?relay`; Banked call to: AssocChangeNwkAddr
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_6
// 2087       {
// 2088         // Set event to save NV
// 2089         ZDApp_NVUpdate();
        ; Setup parameters for call to function ZDApp_NVUpdate
        LCALL   `??ZDApp_NVUpdate::?relay`; Banked call to: ZDApp_NVUpdate
// 2090       }
// 2091     }
// 2092   }
// 2093 
// 2094   // Update the neighbor table
// 2095   nwkNeighborUpdateNwkAddr( Annce.nwkAddr, Annce.extAddr );
??ZDO_ProcessDeviceAnnce_6:
        ; Setup parameters for call to function nwkNeighborUpdateNwkAddr
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_509:
        LCALL   `??nwkNeighborUpdateNwkAddr::?relay`; Banked call to: nwkNeighborUpdateNwkAddr
// 2096 
// 2097   // Assume that the device has moved, remove existing routing entries
// 2098   RTG_RemoveRtgEntry( Annce.nwkAddr, 0 );
        ; Setup parameters for call to function RTG_RemoveRtgEntry
        MOV     R1,#0x0
        LCALL   ??Subroutine240_0 & 0xFFFF
??CrossCallReturnLabel_506:
        LCALL   `??RTG_RemoveRtgEntry::?relay`; Banked call to: RTG_RemoveRtgEntry
// 2099 
// 2100 #endif // ZIGBEE_STOCHASTIC_ADDRESSING
// 2101 
// 2102   // Fill in the extended address in address manager if we don't have it already.
// 2103   addrEntry.user = ADDRMGR_USER_DEFAULT;
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        LCALL   ?Subroutine28 & 0xFFFF
// 2104   addrEntry.nwkAddr = Annce.nwkAddr;
??CrossCallReturnLabel_31:
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine220_0 & 0xFFFF
// 2105   if ( AddrMgrEntryLookupNwk( &addrEntry ) )
??CrossCallReturnLabel_374:
        ; Setup parameters for call to function AddrMgrEntryLookupNwk
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AddrMgrEntryLookupNwk::?relay`; Banked call to: AddrMgrEntryLookupNwk
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_12
// 2106   {
// 2107     osal_memset( parentExt, 0, Z_EXTADDR_LEN );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0x8
        MOV     R5,#0x0
        MOV     R1,#0x0
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
// 2108     if ( osal_ExtAddrEqual( parentExt, addrEntry.extAddr ) )
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_12
// 2109     {
// 2110       AddrMgrExtAddrSet( addrEntry.extAddr, Annce.extAddr );
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   `??AddrMgrExtAddrSet::?relay`; Banked call to: AddrMgrExtAddrSet
// 2111       AddrMgrEntryUpdate( &addrEntry );
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AddrMgrEntryUpdate::?relay`; Banked call to: AddrMgrEntryUpdate
// 2112     }
// 2113   }
// 2114 
// 2115   // Update the short address in address manager if it's been changed
// 2116   AddrMgrExtAddrSet( addrEntry.extAddr, Annce.extAddr );
??ZDO_ProcessDeviceAnnce_12:
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   `??AddrMgrExtAddrSet::?relay`; Banked call to: AddrMgrExtAddrSet
// 2117   if ( AddrMgrEntryLookupExt( &addrEntry ) )
        ; Setup parameters for call to function AddrMgrEntryLookupExt
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AddrMgrEntryLookupExt::?relay`; Banked call to: AddrMgrEntryLookupExt
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_2
// 2118   {
// 2119     if ( addrEntry.nwkAddr != Annce.nwkAddr )
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine232_0 & 0xFFFF
??CrossCallReturnLabel_420:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??ZDO_ProcessDeviceAnnce_13
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessDeviceAnnce_13:
        JZ      ??ZDO_ProcessDeviceAnnce_2
// 2120     {
// 2121       addrEntry.nwkAddr = Annce.nwkAddr;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine232_0 & 0xFFFF
??CrossCallReturnLabel_421:
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine220_0 & 0xFFFF
// 2122       AddrMgrEntryUpdate( &addrEntry );
??CrossCallReturnLabel_375:
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AddrMgrEntryUpdate::?relay`; Banked call to: AddrMgrEntryUpdate
// 2123     }
// 2124   }
// 2125 }
??ZDO_ProcessDeviceAnnce_2:
        MOV     A,#0x20
        LJMP    ??Subroutine209_0 & 0xFFFF
          CFI EndBlock cfiBlock470

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine105:
          CFI Block cfiCond471 Using cfiCommon0
          CFI Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_428
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond472 Using cfiCommon0
          CFI (cfiCond472) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond472) Conditional ??CrossCallReturnLabel_429
          CFI (cfiCond472) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond472) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond472) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond472) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond472) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond472) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond472) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond472) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond472) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond472) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond472) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond472) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond472) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond472) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond472) CFA_SP SP+-2
          CFI (cfiCond472) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker473 Using cfiCommon1
          CFI (cfiPicker473) NoFunction
          CFI (cfiPicker473) Picker
        LCALL   ?Subroutine189 & 0xFFFF
??CrossCallReturnLabel_637:
        ADDC    A,R1
          CFI EndBlock cfiCond471
          CFI EndBlock cfiCond472
          CFI EndBlock cfiPicker473
        REQUIRE ??Subroutine231_0
        ; // Fall through to label ??Subroutine231_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine231_0:
          CFI Block cfiCond474 Using cfiCommon0
          CFI Function ZDO_ProcessEndDeviceTimeoutReq
          CFI Conditional ??CrossCallReturnLabel_425
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond475 Using cfiCommon0
          CFI (cfiCond475) Function ZDMatchSendState
          CFI (cfiCond475) Conditional ??CrossCallReturnLabel_426
          CFI (cfiCond475) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond475) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond475) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond475) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond475) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond475) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond475) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond475) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond475) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond475) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond475) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond475) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond475) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond475) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond475) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond475) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond475) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond475) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond475) CFA_SP SP+-2
          CFI (cfiCond475) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond476 Using cfiCommon0
          CFI (cfiCond476) Function ZDO_ParseUserDescRsp
          CFI (cfiCond476) Conditional ??CrossCallReturnLabel_427
          CFI (cfiCond476) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond476) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond476) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond476) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond476) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond476) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond476) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond476) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond476) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond476) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond476) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond476) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond476) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond476) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond476) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond476) CFA_SP SP+-2
          CFI (cfiCond476) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond477 Using cfiCommon0
          CFI (cfiCond477) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond477) Conditional ??CrossCallReturnLabel_428
          CFI (cfiCond477) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond477) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond477) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond477) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond477) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond477) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond477) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond477) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond477) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond477) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond477) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond477) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond477) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond477) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond477) CFA_SP SP+-2
          CFI (cfiCond477) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond478 Using cfiCommon0
          CFI (cfiCond478) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond478) Conditional ??CrossCallReturnLabel_429
          CFI (cfiCond478) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond478) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond478) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond478) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond478) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond478) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond478) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond478) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond478) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond478) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond478) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond478) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond478) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond478) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond478) CFA_SP SP+-2
          CFI (cfiCond478) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker479 Using cfiCommon1
          CFI (cfiPicker479) NoFunction
          CFI (cfiPicker479) Picker
        MOV     DPH,A
          CFI EndBlock cfiCond474
          CFI EndBlock cfiCond475
          CFI EndBlock cfiCond476
          CFI EndBlock cfiCond477
          CFI EndBlock cfiCond478
          CFI EndBlock cfiPicker479
        REQUIRE ??Subroutine232_0
        ; // Fall through to label ??Subroutine232_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine232_0:
          CFI Block cfiCond480 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_413
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond481 Using cfiCommon0
          CFI (cfiCond481) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond481) Conditional ??CrossCallReturnLabel_414
          CFI (cfiCond481) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond481) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond481) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond481) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond481) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond481) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond481) CFA_SP SP+-2
          CFI (cfiCond481) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond482 Using cfiCommon0
          CFI (cfiCond482) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond482) Conditional ??CrossCallReturnLabel_415
          CFI (cfiCond482) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond482) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond482) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond482) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond482) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond482) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond482) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond482) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond482) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond482) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond482) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond482) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond482) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond482) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond482) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond482) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond482) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond482) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond482) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond482) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond482) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond482) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond482) CFA_SP SP+-2
          CFI (cfiCond482) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond483 Using cfiCommon0
          CFI (cfiCond483) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond483) Conditional ??CrossCallReturnLabel_416
          CFI (cfiCond483) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond483) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond483) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond483) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond483) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond483) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond483) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond483) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond483) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond483) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond483) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond483) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond483) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond483) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond483) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond483) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond483) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond483) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond483) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond483) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond483) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond483) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond483) CFA_SP SP+-2
          CFI (cfiCond483) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond484 Using cfiCommon0
          CFI (cfiCond484) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond484) Conditional ??CrossCallReturnLabel_417
          CFI (cfiCond484) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond484) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond484) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond484) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond484) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond484) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond484) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond484) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond484) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond484) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond484) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond484) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond484) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond484) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond484) CFA_SP SP+-2
          CFI (cfiCond484) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond485 Using cfiCommon0
          CFI (cfiCond485) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond485) Conditional ??CrossCallReturnLabel_418
          CFI (cfiCond485) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond485) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond485) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond485) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond485) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond485) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond485) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond485) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond485) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond485) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond485) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond485) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond485) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond485) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond485) CFA_SP SP+-2
          CFI (cfiCond485) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond486 Using cfiCommon0
          CFI (cfiCond486) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond486) Conditional ??CrossCallReturnLabel_419
          CFI (cfiCond486) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond486) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond486) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond486) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond486) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond486) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond486) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond486) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond486) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond486) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond486) CFA_SP SP+-2
          CFI (cfiCond486) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond487 Using cfiCommon0
          CFI (cfiCond487) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond487) Conditional ??CrossCallReturnLabel_420
          CFI (cfiCond487) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond487) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond487) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond487) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond487) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond487) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond487) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond487) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond487) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond487) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond487) CFA_SP SP+-2
          CFI (cfiCond487) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond488 Using cfiCommon0
          CFI (cfiCond488) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond488) Conditional ??CrossCallReturnLabel_421
          CFI (cfiCond488) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond488) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond488) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond488) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond488) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond488) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond488) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond488) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond488) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond488) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond488) CFA_SP SP+-2
          CFI (cfiCond488) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond489 Using cfiCommon0
          CFI (cfiCond489) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond489) Conditional ??CrossCallReturnLabel_422
          CFI (cfiCond489) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond489) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond489) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond489) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond489) CFA_SP SP+-2
          CFI (cfiCond489) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond490 Using cfiCommon0
          CFI (cfiCond490) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond490) Conditional ??CrossCallReturnLabel_423
          CFI (cfiCond490) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond490) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond490) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond490) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond490) CFA_SP SP+-2
          CFI (cfiCond490) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond491 Using cfiCommon0
          CFI (cfiCond491) Function ZDMatchSendState
          CFI (cfiCond491) Conditional ??CrossCallReturnLabel_424
          CFI (cfiCond491) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond491) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond491) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond491) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond491) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond491) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond491) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond491) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond491) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond491) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond491) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond491) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond491) CFA_SP SP+-2
          CFI (cfiCond491) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond492 Using cfiCommon0
          CFI (cfiCond492) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond492) Conditional ??CrossCallReturnLabel_425
          CFI (cfiCond492) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond492) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond492) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond492) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond492) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond492) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond492) CFA_SP SP+-2
          CFI (cfiCond492) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond493 Using cfiCommon0
          CFI (cfiCond493) Function ZDMatchSendState
          CFI (cfiCond493) Conditional ??CrossCallReturnLabel_426
          CFI (cfiCond493) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond493) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond493) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond493) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond493) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond493) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond493) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond493) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond493) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond493) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond493) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond493) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond493) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond493) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond493) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond493) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond493) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond493) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond493) CFA_SP SP+-2
          CFI (cfiCond493) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond494 Using cfiCommon0
          CFI (cfiCond494) Function ZDO_ParseUserDescRsp
          CFI (cfiCond494) Conditional ??CrossCallReturnLabel_427
          CFI (cfiCond494) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond494) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond494) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond494) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond494) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond494) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond494) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond494) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond494) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond494) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond494) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond494) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond494) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond494) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond494) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond494) CFA_SP SP+-2
          CFI (cfiCond494) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond495 Using cfiCommon0
          CFI (cfiCond495) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond495) Conditional ??CrossCallReturnLabel_428
          CFI (cfiCond495) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond495) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond495) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond495) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond495) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond495) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond495) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond495) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond495) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond495) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond495) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond495) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond495) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond495) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond495) CFA_SP SP+-2
          CFI (cfiCond495) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond496 Using cfiCommon0
          CFI (cfiCond496) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond496) Conditional ??CrossCallReturnLabel_429
          CFI (cfiCond496) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond496) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond496) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond496) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond496) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond496) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond496) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond496) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond496) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond496) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond496) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond496) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond496) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond496) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond496) CFA_SP SP+-2
          CFI (cfiCond496) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker497 Using cfiCommon1
          CFI (cfiPicker497) NoFunction
          CFI (cfiPicker497) Picker
        LCALL   ?Subroutine199 & 0xFFFF
??CrossCallReturnLabel_460:
        RET
          CFI EndBlock cfiCond480
          CFI EndBlock cfiCond481
          CFI EndBlock cfiCond482
          CFI EndBlock cfiCond483
          CFI EndBlock cfiCond484
          CFI EndBlock cfiCond485
          CFI EndBlock cfiCond486
          CFI EndBlock cfiCond487
          CFI EndBlock cfiCond488
          CFI EndBlock cfiCond489
          CFI EndBlock cfiCond490
          CFI EndBlock cfiCond491
          CFI EndBlock cfiCond492
          CFI EndBlock cfiCond493
          CFI EndBlock cfiCond494
          CFI EndBlock cfiCond495
          CFI EndBlock cfiCond496
          CFI EndBlock cfiPicker497

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine199:
          CFI Block cfiCond498 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_454, ??CrossCallReturnLabel_131
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond499 Using cfiCommon0
          CFI (cfiCond499) Function ZDO_CompareClusterLists
          CFI (cfiCond499) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_454, ??CrossCallReturnLabel_132
          CFI (cfiCond499) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond499) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond499) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond499) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond499) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond499) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond499) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond499) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond499) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond499) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond499) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond499) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond499) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond499) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond499) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond499) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond499) CFA_SP SP+-6
          CFI (cfiCond499) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond500 Using cfiCommon0
          CFI (cfiCond500) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond500) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_454, ??CrossCallReturnLabel_133
          CFI (cfiCond500) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond500) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond500) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond500) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond500) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond500) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond500) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond500) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond500) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond500) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond500) CFA_SP SP+-6
          CFI (cfiCond500) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond501 Using cfiCommon0
          CFI (cfiCond501) Function ZDO_CompareClusterLists
          CFI (cfiCond501) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_455, ??CrossCallReturnLabel_160
          CFI (cfiCond501) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond501) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond501) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond501) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond501) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond501) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond501) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond501) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond501) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond501) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond501) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond501) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond501) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond501) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond501) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond501) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond501) CFA_SP SP+-6
          CFI (cfiCond501) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond502 Using cfiCommon0
          CFI (cfiCond502) Function ZDO_AnyClusterMatches
          CFI (cfiCond502) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_455, ??CrossCallReturnLabel_161
          CFI (cfiCond502) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond502) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond502) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond502) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond502) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond502) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond502) CFA_SP SP+-6
          CFI (cfiCond502) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond503 Using cfiCommon0
          CFI (cfiCond503) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond503) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_446
          CFI (cfiCond503) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond503) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond503) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond503) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond503) CFA_SP SP+-6
          CFI (cfiCond503) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond504 Using cfiCommon0
          CFI (cfiCond504) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond504) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_447
          CFI (cfiCond504) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond504) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond504) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond504) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond504) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond504) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond504) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond504) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond504) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond504) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond504) CFA_SP SP+-6
          CFI (cfiCond504) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond505 Using cfiCommon0
          CFI (cfiCond505) Function ZDO_RemoveMatchMemory
          CFI (cfiCond505) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_448
          CFI (cfiCond505) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond505) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond505) CFA_SP SP+-11
          CFI Block cfiCond506 Using cfiCommon0
          CFI (cfiCond506) Function ZDO_RemoveMatchMemory
          CFI (cfiCond506) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_449
          CFI (cfiCond506) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond506) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond506) CFA_SP SP+-11
          CFI Block cfiCond507 Using cfiCommon0
          CFI (cfiCond507) Function ZDO_RemoveMatchMemory
          CFI (cfiCond507) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_450
          CFI (cfiCond507) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond507) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond507) CFA_SP SP+-11
          CFI Block cfiCond508 Using cfiCommon0
          CFI (cfiCond508) Function ZDO_RemoveMatchMemory
          CFI (cfiCond508) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_451
          CFI (cfiCond508) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond508) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond508) CFA_SP SP+-11
          CFI Block cfiCond509 Using cfiCommon0
          CFI (cfiCond509) Function ZDO_RemoveMatchMemory
          CFI (cfiCond509) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_452
          CFI (cfiCond509) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond509) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond509) CFA_SP SP+-11
          CFI Block cfiCond510 Using cfiCommon0
          CFI (cfiCond510) Function ZDO_RemoveMatchMemory
          CFI (cfiCond510) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_453
          CFI (cfiCond510) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond510) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond510) CFA_SP SP+-11
          CFI Block cfiCond511 Using cfiCommon0
          CFI (cfiCond511) Function ZDO_CopyMatchInfo
          CFI (cfiCond511) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_444
          CFI (cfiCond511) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond511) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond511) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond511) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond511) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond511) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond511) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond511) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond511) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond511) CFA_SP SP+-6
          CFI (cfiCond511) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond512 Using cfiCommon0
          CFI (cfiCond512) Function ZDO_CopyMatchInfo
          CFI (cfiCond512) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_445
          CFI (cfiCond512) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond512) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond512) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond512) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond512) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond512) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond512) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond512) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond512) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond512) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond512) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond512) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond512) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond512) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond512) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond512) CFA_SP SP+-6
          CFI (cfiCond512) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond513 Using cfiCommon0
          CFI (cfiCond513) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond513) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_430
          CFI (cfiCond513) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond513) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond513) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond513) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond513) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond513) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond513) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond513) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond513) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond513) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond513) CFA_SP SP+-6
          CFI (cfiCond513) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond514 Using cfiCommon0
          CFI (cfiCond514) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond514) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_431
          CFI (cfiCond514) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond514) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond514) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond514) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond514) CFA_SP SP+-6
          CFI (cfiCond514) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond515 Using cfiCommon0
          CFI (cfiCond515) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond515) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_432
          CFI (cfiCond515) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond515) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond515) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond515) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond515) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond515) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond515) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond515) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond515) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond515) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond515) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond515) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond515) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond515) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond515) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond515) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond515) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond515) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond515) CFA_SP SP+-6
          CFI (cfiCond515) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond516 Using cfiCommon0
          CFI (cfiCond516) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond516) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_433
          CFI (cfiCond516) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond516) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond516) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond516) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond516) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond516) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond516) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond516) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond516) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond516) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond516) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond516) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond516) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond516) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond516) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond516) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond516) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond516) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond516) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond516) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond516) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond516) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond516) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond516) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond516) CFA_SP SP+-6
          CFI (cfiCond516) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond517 Using cfiCommon0
          CFI (cfiCond517) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond517) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_434
          CFI (cfiCond517) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond517) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond517) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond517) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond517) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond517) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond517) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond517) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond517) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond517) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond517) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond517) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond517) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond517) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond517) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond517) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond517) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond517) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond517) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond517) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond517) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond517) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond517) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond517) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond517) CFA_SP SP+-6
          CFI (cfiCond517) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond518 Using cfiCommon0
          CFI (cfiCond518) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond518) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_435
          CFI (cfiCond518) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond518) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond518) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond518) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond518) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond518) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond518) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond518) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond518) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond518) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond518) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond518) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond518) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond518) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond518) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond518) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond518) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond518) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond518) CFA_SP SP+-6
          CFI (cfiCond518) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond519 Using cfiCommon0
          CFI (cfiCond519) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond519) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_436
          CFI (cfiCond519) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond519) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond519) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond519) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond519) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond519) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond519) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond519) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond519) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond519) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond519) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond519) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond519) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond519) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond519) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond519) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond519) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond519) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond519) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond519) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond519) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond519) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond519) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond519) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond519) CFA_SP SP+-6
          CFI (cfiCond519) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond520 Using cfiCommon0
          CFI (cfiCond520) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond520) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_437
          CFI (cfiCond520) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond520) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond520) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond520) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond520) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond520) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond520) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond520) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond520) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond520) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond520) CFA_SP SP+-6
          CFI (cfiCond520) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond521 Using cfiCommon0
          CFI (cfiCond521) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond521) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_438
          CFI (cfiCond521) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond521) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond521) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond521) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond521) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond521) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond521) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond521) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond521) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond521) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond521) CFA_SP SP+-6
          CFI (cfiCond521) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond522 Using cfiCommon0
          CFI (cfiCond522) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond522) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_439
          CFI (cfiCond522) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond522) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond522) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond522) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond522) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond522) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond522) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond522) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond522) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond522) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond522) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond522) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond522) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond522) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond522) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond522) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond522) CFA_SP SP+-6
          CFI (cfiCond522) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond523 Using cfiCommon0
          CFI (cfiCond523) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond523) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_440
          CFI (cfiCond523) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond523) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond523) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond523) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond523) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond523) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond523) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond523) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond523) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond523) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond523) CFA_SP SP+-6
          CFI (cfiCond523) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond524 Using cfiCommon0
          CFI (cfiCond524) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond524) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_441
          CFI (cfiCond524) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond524) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond524) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond524) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond524) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond524) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond524) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond524) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond524) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond524) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond524) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond524) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond524) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond524) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond524) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond524) CFA_SP SP+-6
          CFI (cfiCond524) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond525 Using cfiCommon0
          CFI (cfiCond525) Function ZDO_RemoveMatchMemory
          CFI (cfiCond525) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_442
          CFI (cfiCond525) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond525) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond525) CFA_SP SP+-11
          CFI Block cfiCond526 Using cfiCommon0
          CFI (cfiCond526) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond526) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_443
          CFI (cfiCond526) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond526) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond526) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond526) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond526) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond526) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond526) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond526) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond526) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond526) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond526) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond526) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond526) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond526) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond526) CFA_SP SP+-6
          CFI (cfiCond526) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond527 Using cfiCommon0
          CFI (cfiCond527) Function ZDO_ProcessNodeDescReq
          CFI (cfiCond527) Conditional ??CrossCallReturnLabel_458, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_93
          CFI (cfiCond527) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond527) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond527) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond527) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond527) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond527) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond527) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond527) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond527) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond527) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond527) CFA_SP SP+-6
          CFI (cfiCond527) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond528 Using cfiCommon0
          CFI (cfiCond528) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond528) Conditional ??CrossCallReturnLabel_458, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_94
          CFI (cfiCond528) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond528) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond528) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond528) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond528) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond528) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond528) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond528) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond528) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond528) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond528) CFA_SP SP+-6
          CFI (cfiCond528) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond529 Using cfiCommon0
          CFI (cfiCond529) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond529) Conditional ??CrossCallReturnLabel_458, ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_110
          CFI (cfiCond529) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond529) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond529) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond529) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond529) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond529) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond529) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond529) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond529) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond529) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond529) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond529) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond529) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond529) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond529) CFA_SP SP+-6
          CFI (cfiCond529) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond530 Using cfiCommon0
          CFI (cfiCond530) Function ZDO_ProcessUserDescReq
          CFI (cfiCond530) Conditional ??CrossCallReturnLabel_458, ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_111
          CFI (cfiCond530) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond530) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond530) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond530) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond530) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond530) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond530) CFA_SP SP+-6
          CFI (cfiCond530) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond531 Using cfiCommon0
          CFI (cfiCond531) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond531) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_428
          CFI (cfiCond531) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond531) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond531) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond531) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond531) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond531) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond531) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond531) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond531) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond531) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond531) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond531) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond531) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond531) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond531) CFA_SP SP+-4
          CFI (cfiCond531) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond532 Using cfiCommon0
          CFI (cfiCond532) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond532) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_429
          CFI (cfiCond532) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond532) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond532) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond532) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond532) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond532) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond532) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond532) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond532) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond532) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond532) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond532) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond532) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond532) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond532) CFA_SP SP+-4
          CFI (cfiCond532) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond533 Using cfiCommon0
          CFI (cfiCond533) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond533) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_425
          CFI (cfiCond533) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond533) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond533) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond533) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond533) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond533) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond533) CFA_SP SP+-4
          CFI (cfiCond533) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond534 Using cfiCommon0
          CFI (cfiCond534) Function ZDMatchSendState
          CFI (cfiCond534) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_426
          CFI (cfiCond534) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond534) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond534) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond534) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond534) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond534) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond534) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond534) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond534) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond534) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond534) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond534) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond534) CFA_SP SP+-4
          CFI (cfiCond534) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond535 Using cfiCommon0
          CFI (cfiCond535) Function ZDO_ParseUserDescRsp
          CFI (cfiCond535) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_427
          CFI (cfiCond535) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond535) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond535) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond535) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond535) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond535) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond535) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond535) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond535) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond535) CFA_SP SP+-4
          CFI (cfiCond535) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond536 Using cfiCommon0
          CFI (cfiCond536) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond536) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_413
          CFI (cfiCond536) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond536) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond536) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond536) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond536) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond536) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond536) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond536) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond536) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond536) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond536) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond536) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond536) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond536) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond536) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond536) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond536) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond536) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond536) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond536) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond536) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond536) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond536) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond536) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond536) CFA_SP SP+-4
          CFI (cfiCond536) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond537 Using cfiCommon0
          CFI (cfiCond537) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond537) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_414
          CFI (cfiCond537) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond537) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond537) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond537) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond537) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond537) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond537) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond537) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond537) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond537) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond537) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond537) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond537) CFA_SP SP+-4
          CFI (cfiCond537) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond538 Using cfiCommon0
          CFI (cfiCond538) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond538) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_415
          CFI (cfiCond538) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond538) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond538) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond538) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond538) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond538) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond538) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond538) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond538) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond538) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond538) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond538) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond538) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond538) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond538) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond538) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond538) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond538) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond538) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond538) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond538) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond538) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond538) CFA_SP SP+-4
          CFI (cfiCond538) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond539 Using cfiCommon0
          CFI (cfiCond539) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond539) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_416
          CFI (cfiCond539) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond539) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond539) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond539) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond539) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond539) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond539) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond539) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond539) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond539) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond539) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond539) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond539) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond539) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond539) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond539) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond539) CFA_SP SP+-4
          CFI (cfiCond539) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond540 Using cfiCommon0
          CFI (cfiCond540) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond540) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_417
          CFI (cfiCond540) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond540) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond540) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond540) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond540) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond540) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond540) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond540) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond540) CFA_SP SP+-4
          CFI (cfiCond540) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond541 Using cfiCommon0
          CFI (cfiCond541) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond541) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_418
          CFI (cfiCond541) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond541) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond541) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond541) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond541) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond541) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond541) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond541) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond541) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond541) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond541) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond541) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond541) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond541) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond541) CFA_SP SP+-4
          CFI (cfiCond541) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond542 Using cfiCommon0
          CFI (cfiCond542) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond542) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_419
          CFI (cfiCond542) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond542) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond542) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond542) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond542) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond542) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond542) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond542) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond542) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond542) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond542) CFA_SP SP+-4
          CFI (cfiCond542) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond543 Using cfiCommon0
          CFI (cfiCond543) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond543) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_420
          CFI (cfiCond543) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond543) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond543) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond543) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond543) CFA_SP SP+-4
          CFI (cfiCond543) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond544 Using cfiCommon0
          CFI (cfiCond544) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond544) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_421
          CFI (cfiCond544) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond544) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond544) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond544) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond544) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond544) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond544) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond544) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond544) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond544) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond544) CFA_SP SP+-4
          CFI (cfiCond544) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond545 Using cfiCommon0
          CFI (cfiCond545) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond545) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_422
          CFI (cfiCond545) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond545) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond545) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond545) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond545) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond545) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond545) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond545) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond545) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond545) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond545) CFA_SP SP+-4
          CFI (cfiCond545) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond546 Using cfiCommon0
          CFI (cfiCond546) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond546) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_423
          CFI (cfiCond546) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond546) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond546) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond546) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond546) CFA_SP SP+-4
          CFI (cfiCond546) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond547 Using cfiCommon0
          CFI (cfiCond547) Function ZDMatchSendState
          CFI (cfiCond547) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_424
          CFI (cfiCond547) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond547) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond547) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond547) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond547) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond547) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond547) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond547) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond547) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond547) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond547) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond547) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond547) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond547) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond547) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond547) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond547) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond547) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond547) CFA_SP SP+-4
          CFI (cfiCond547) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond548 Using cfiCommon0
          CFI (cfiCond548) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond548) Conditional ??CrossCallReturnLabel_457, ??CrossCallReturnLabel_123
          CFI (cfiCond548) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond548) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond548) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond548) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond548) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond548) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond548) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond548) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond548) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond548) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond548) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond548) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond548) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond548) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond548) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond548) CFA_SP SP+-4
          CFI (cfiCond548) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond549 Using cfiCommon0
          CFI (cfiCond549) Function ZDMatchSendState
          CFI (cfiCond549) Conditional ??CrossCallReturnLabel_457, ??CrossCallReturnLabel_124
          CFI (cfiCond549) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond549) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond549) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond549) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond549) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond549) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond549) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond549) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond549) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond549) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond549) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond549) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond549) CFA_SP SP+-4
          CFI (cfiCond549) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond550 Using cfiCommon0
          CFI (cfiCond550) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond550) Conditional ??CrossCallReturnLabel_459, ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_20
          CFI (cfiCond550) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond550) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond550) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond550) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond550) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond550) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond550) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond550) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond550) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond550) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond550) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond550) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond550) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond550) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond550) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond550) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond550) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond550) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond550) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond550) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond550) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond550) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond550) CFA_SP SP+-6
          CFI (cfiCond550) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond551 Using cfiCommon0
          CFI (cfiCond551) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond551) Conditional ??CrossCallReturnLabel_459, ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_21
          CFI (cfiCond551) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond551) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond551) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond551) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond551) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond551) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond551) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond551) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond551) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond551) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond551) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond551) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond551) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond551) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond551) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond551) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond551) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond551) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond551) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond551) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond551) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond551) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond551) CFA_SP SP+-6
          CFI (cfiCond551) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond552 Using cfiCommon0
          CFI (cfiCond552) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond552) Conditional ??CrossCallReturnLabel_459, ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_162
          CFI (cfiCond552) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond552) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond552) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond552) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond552) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond552) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond552) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond552) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond552) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond552) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond552) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond552) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond552) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond552) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond552) CFA_SP SP+-6
          CFI (cfiCond552) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond553 Using cfiCommon0
          CFI (cfiCond553) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond553) Conditional ??CrossCallReturnLabel_459, ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_163
          CFI (cfiCond553) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond553) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond553) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond553) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond553) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond553) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond553) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond553) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond553) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond553) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond553) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond553) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond553) CFA_SP SP+-6
          CFI (cfiCond553) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker554 Using cfiCommon1
          CFI (cfiPicker554) NoFunction
          CFI (cfiPicker554) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI EndBlock cfiCond498
          CFI EndBlock cfiCond499
          CFI EndBlock cfiCond500
          CFI EndBlock cfiCond501
          CFI EndBlock cfiCond502
          CFI EndBlock cfiCond503
          CFI EndBlock cfiCond504
          CFI EndBlock cfiCond505
          CFI EndBlock cfiCond506
          CFI EndBlock cfiCond507
          CFI EndBlock cfiCond508
          CFI EndBlock cfiCond509
          CFI EndBlock cfiCond510
          CFI EndBlock cfiCond511
          CFI EndBlock cfiCond512
          CFI EndBlock cfiCond513
          CFI EndBlock cfiCond514
          CFI EndBlock cfiCond515
          CFI EndBlock cfiCond516
          CFI EndBlock cfiCond517
          CFI EndBlock cfiCond518
          CFI EndBlock cfiCond519
          CFI EndBlock cfiCond520
          CFI EndBlock cfiCond521
          CFI EndBlock cfiCond522
          CFI EndBlock cfiCond523
          CFI EndBlock cfiCond524
          CFI EndBlock cfiCond525
          CFI EndBlock cfiCond526
          CFI EndBlock cfiCond527
          CFI EndBlock cfiCond528
          CFI EndBlock cfiCond529
          CFI EndBlock cfiCond530
          CFI EndBlock cfiCond531
          CFI EndBlock cfiCond532
          CFI EndBlock cfiCond533
          CFI EndBlock cfiCond534
          CFI EndBlock cfiCond535
          CFI EndBlock cfiCond536
          CFI EndBlock cfiCond537
          CFI EndBlock cfiCond538
          CFI EndBlock cfiCond539
          CFI EndBlock cfiCond540
          CFI EndBlock cfiCond541
          CFI EndBlock cfiCond542
          CFI EndBlock cfiCond543
          CFI EndBlock cfiCond544
          CFI EndBlock cfiCond545
          CFI EndBlock cfiCond546
          CFI EndBlock cfiCond547
          CFI EndBlock cfiCond548
          CFI EndBlock cfiCond549
          CFI EndBlock cfiCond550
          CFI EndBlock cfiCond551
          CFI EndBlock cfiCond552
          CFI EndBlock cfiCond553
          CFI EndBlock cfiPicker554

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine56:
          CFI Block cfiCond555 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_446
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond556 Using cfiCommon0
          CFI (cfiCond556) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond556) Conditional ??CrossCallReturnLabel_447
          CFI (cfiCond556) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond556) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond556) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond556) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond556) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond556) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond556) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond556) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond556) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond556) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond556) CFA_SP SP+-2
          CFI (cfiCond556) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond557 Using cfiCommon0
          CFI (cfiCond557) Function ZDO_RemoveMatchMemory
          CFI (cfiCond557) Conditional ??CrossCallReturnLabel_448
          CFI (cfiCond557) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond557) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond557) CFA_SP SP+-7
          CFI Block cfiCond558 Using cfiCommon0
          CFI (cfiCond558) Function ZDO_RemoveMatchMemory
          CFI (cfiCond558) Conditional ??CrossCallReturnLabel_449
          CFI (cfiCond558) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond558) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond558) CFA_SP SP+-7
          CFI Block cfiCond559 Using cfiCommon0
          CFI (cfiCond559) Function ZDO_RemoveMatchMemory
          CFI (cfiCond559) Conditional ??CrossCallReturnLabel_450
          CFI (cfiCond559) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond559) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond559) CFA_SP SP+-7
          CFI Block cfiCond560 Using cfiCommon0
          CFI (cfiCond560) Function ZDO_RemoveMatchMemory
          CFI (cfiCond560) Conditional ??CrossCallReturnLabel_451
          CFI (cfiCond560) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond560) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond560) CFA_SP SP+-7
          CFI Block cfiCond561 Using cfiCommon0
          CFI (cfiCond561) Function ZDO_RemoveMatchMemory
          CFI (cfiCond561) Conditional ??CrossCallReturnLabel_452
          CFI (cfiCond561) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond561) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond561) CFA_SP SP+-7
          CFI Block cfiCond562 Using cfiCommon0
          CFI (cfiCond562) Function ZDO_RemoveMatchMemory
          CFI (cfiCond562) Conditional ??CrossCallReturnLabel_453
          CFI (cfiCond562) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond562) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond562) CFA_SP SP+-7
          CFI Block cfiPicker563 Using cfiCommon1
          CFI (cfiPicker563) NoFunction
          CFI (cfiPicker563) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
          CFI EndBlock cfiCond555
          CFI EndBlock cfiCond556
          CFI EndBlock cfiCond557
          CFI EndBlock cfiCond558
          CFI EndBlock cfiCond559
          CFI EndBlock cfiCond560
          CFI EndBlock cfiCond561
          CFI EndBlock cfiCond562
          CFI EndBlock cfiPicker563
        REQUIRE ??Subroutine233_0
        ; // Fall through to label ??Subroutine233_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine233_0:
          CFI Block cfiCond564 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_444
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond565 Using cfiCommon0
          CFI (cfiCond565) Function ZDO_CopyMatchInfo
          CFI (cfiCond565) Conditional ??CrossCallReturnLabel_445
          CFI (cfiCond565) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond565) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond565) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond565) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond565) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond565) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond565) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond565) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond565) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond565) CFA_SP SP+-2
          CFI (cfiCond565) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond566 Using cfiCommon0
          CFI (cfiCond566) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond566) Conditional ??CrossCallReturnLabel_446
          CFI (cfiCond566) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond566) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond566) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond566) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond566) CFA_SP SP+-2
          CFI (cfiCond566) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond567 Using cfiCommon0
          CFI (cfiCond567) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond567) Conditional ??CrossCallReturnLabel_447
          CFI (cfiCond567) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond567) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond567) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond567) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond567) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond567) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond567) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond567) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond567) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond567) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond567) CFA_SP SP+-2
          CFI (cfiCond567) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond568 Using cfiCommon0
          CFI (cfiCond568) Function ZDO_RemoveMatchMemory
          CFI (cfiCond568) Conditional ??CrossCallReturnLabel_448
          CFI (cfiCond568) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond568) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond568) CFA_SP SP+-7
          CFI Block cfiCond569 Using cfiCommon0
          CFI (cfiCond569) Function ZDO_RemoveMatchMemory
          CFI (cfiCond569) Conditional ??CrossCallReturnLabel_449
          CFI (cfiCond569) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond569) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond569) CFA_SP SP+-7
          CFI Block cfiCond570 Using cfiCommon0
          CFI (cfiCond570) Function ZDO_RemoveMatchMemory
          CFI (cfiCond570) Conditional ??CrossCallReturnLabel_450
          CFI (cfiCond570) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond570) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond570) CFA_SP SP+-7
          CFI Block cfiCond571 Using cfiCommon0
          CFI (cfiCond571) Function ZDO_RemoveMatchMemory
          CFI (cfiCond571) Conditional ??CrossCallReturnLabel_451
          CFI (cfiCond571) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond571) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond571) CFA_SP SP+-7
          CFI Block cfiCond572 Using cfiCommon0
          CFI (cfiCond572) Function ZDO_RemoveMatchMemory
          CFI (cfiCond572) Conditional ??CrossCallReturnLabel_452
          CFI (cfiCond572) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond572) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond572) CFA_SP SP+-7
          CFI Block cfiCond573 Using cfiCommon0
          CFI (cfiCond573) Function ZDO_RemoveMatchMemory
          CFI (cfiCond573) Conditional ??CrossCallReturnLabel_453
          CFI (cfiCond573) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond573) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond573) CFA_SP SP+-7
          CFI Block cfiPicker574 Using cfiCommon1
          CFI (cfiPicker574) NoFunction
          CFI (cfiPicker574) Picker
        MOV     DPH,A
          CFI EndBlock cfiCond564
          CFI EndBlock cfiCond565
          CFI EndBlock cfiCond566
          CFI EndBlock cfiCond567
          CFI EndBlock cfiCond568
          CFI EndBlock cfiCond569
          CFI EndBlock cfiCond570
          CFI EndBlock cfiCond571
          CFI EndBlock cfiCond572
          CFI EndBlock cfiCond573
          CFI EndBlock cfiPicker574
        REQUIRE ??Subroutine234_0
        ; // Fall through to label ??Subroutine234_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine234_0:
          CFI Block cfiCond575 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_430
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond576 Using cfiCommon0
          CFI (cfiCond576) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond576) Conditional ??CrossCallReturnLabel_431
          CFI (cfiCond576) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond576) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond576) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond576) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond576) CFA_SP SP+-2
          CFI (cfiCond576) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond577 Using cfiCommon0
          CFI (cfiCond577) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond577) Conditional ??CrossCallReturnLabel_432
          CFI (cfiCond577) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond577) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond577) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond577) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond577) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond577) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond577) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond577) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond577) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond577) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond577) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond577) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond577) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond577) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond577) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond577) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond577) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond577) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond577) CFA_SP SP+-2
          CFI (cfiCond577) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond578 Using cfiCommon0
          CFI (cfiCond578) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond578) Conditional ??CrossCallReturnLabel_433
          CFI (cfiCond578) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond578) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond578) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond578) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond578) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond578) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond578) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond578) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond578) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond578) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond578) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond578) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond578) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond578) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond578) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond578) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond578) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond578) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond578) CFA_SP SP+-2
          CFI (cfiCond578) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond579 Using cfiCommon0
          CFI (cfiCond579) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond579) Conditional ??CrossCallReturnLabel_434
          CFI (cfiCond579) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond579) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond579) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond579) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond579) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond579) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond579) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond579) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond579) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond579) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond579) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond579) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond579) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond579) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond579) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond579) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond579) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond579) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond579) CFA_SP SP+-2
          CFI (cfiCond579) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond580 Using cfiCommon0
          CFI (cfiCond580) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond580) Conditional ??CrossCallReturnLabel_435
          CFI (cfiCond580) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond580) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond580) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond580) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond580) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond580) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond580) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond580) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond580) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond580) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond580) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond580) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond580) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond580) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond580) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond580) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond580) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond580) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond580) CFA_SP SP+-2
          CFI (cfiCond580) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond581 Using cfiCommon0
          CFI (cfiCond581) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond581) Conditional ??CrossCallReturnLabel_436
          CFI (cfiCond581) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond581) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond581) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond581) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond581) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond581) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond581) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond581) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond581) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond581) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond581) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond581) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond581) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond581) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond581) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond581) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond581) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond581) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond581) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond581) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond581) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond581) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond581) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond581) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond581) CFA_SP SP+-2
          CFI (cfiCond581) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond582 Using cfiCommon0
          CFI (cfiCond582) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond582) Conditional ??CrossCallReturnLabel_437
          CFI (cfiCond582) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond582) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond582) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond582) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond582) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond582) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond582) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond582) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond582) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond582) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond582) CFA_SP SP+-2
          CFI (cfiCond582) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond583 Using cfiCommon0
          CFI (cfiCond583) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond583) Conditional ??CrossCallReturnLabel_438
          CFI (cfiCond583) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond583) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond583) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond583) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond583) CFA_SP SP+-2
          CFI (cfiCond583) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond584 Using cfiCommon0
          CFI (cfiCond584) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond584) Conditional ??CrossCallReturnLabel_439
          CFI (cfiCond584) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond584) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond584) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond584) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond584) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond584) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond584) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond584) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond584) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond584) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond584) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond584) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond584) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond584) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond584) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond584) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond584) CFA_SP SP+-2
          CFI (cfiCond584) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond585 Using cfiCommon0
          CFI (cfiCond585) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond585) Conditional ??CrossCallReturnLabel_440
          CFI (cfiCond585) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond585) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond585) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond585) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond585) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond585) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond585) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond585) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond585) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond585) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond585) CFA_SP SP+-2
          CFI (cfiCond585) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond586 Using cfiCommon0
          CFI (cfiCond586) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond586) Conditional ??CrossCallReturnLabel_441
          CFI (cfiCond586) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond586) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond586) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond586) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond586) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond586) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond586) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond586) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond586) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond586) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond586) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond586) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond586) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond586) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond586) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond586) CFA_SP SP+-2
          CFI (cfiCond586) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond587 Using cfiCommon0
          CFI (cfiCond587) Function ZDO_RemoveMatchMemory
          CFI (cfiCond587) Conditional ??CrossCallReturnLabel_442
          CFI (cfiCond587) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond587) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond587) CFA_SP SP+-7
          CFI Block cfiCond588 Using cfiCommon0
          CFI (cfiCond588) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond588) Conditional ??CrossCallReturnLabel_443
          CFI (cfiCond588) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond588) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond588) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond588) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond588) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond588) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond588) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond588) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond588) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond588) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond588) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond588) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond588) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond588) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond588) CFA_SP SP+-2
          CFI (cfiCond588) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond589 Using cfiCommon0
          CFI (cfiCond589) Function ZDO_CopyMatchInfo
          CFI (cfiCond589) Conditional ??CrossCallReturnLabel_444
          CFI (cfiCond589) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond589) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond589) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond589) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond589) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond589) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond589) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond589) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond589) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond589) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond589) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond589) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond589) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond589) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond589) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond589) CFA_SP SP+-2
          CFI (cfiCond589) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond590 Using cfiCommon0
          CFI (cfiCond590) Function ZDO_CopyMatchInfo
          CFI (cfiCond590) Conditional ??CrossCallReturnLabel_445
          CFI (cfiCond590) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond590) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond590) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond590) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond590) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond590) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond590) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond590) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond590) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond590) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond590) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond590) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond590) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond590) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond590) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond590) CFA_SP SP+-2
          CFI (cfiCond590) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond591 Using cfiCommon0
          CFI (cfiCond591) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond591) Conditional ??CrossCallReturnLabel_446
          CFI (cfiCond591) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond591) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond591) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond591) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond591) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond591) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond591) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond591) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond591) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond591) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond591) CFA_SP SP+-2
          CFI (cfiCond591) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond592 Using cfiCommon0
          CFI (cfiCond592) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond592) Conditional ??CrossCallReturnLabel_447
          CFI (cfiCond592) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond592) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond592) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond592) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond592) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond592) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond592) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond592) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond592) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond592) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond592) CFA_SP SP+-2
          CFI (cfiCond592) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond593 Using cfiCommon0
          CFI (cfiCond593) Function ZDO_RemoveMatchMemory
          CFI (cfiCond593) Conditional ??CrossCallReturnLabel_448
          CFI (cfiCond593) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond593) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond593) CFA_SP SP+-7
          CFI Block cfiCond594 Using cfiCommon0
          CFI (cfiCond594) Function ZDO_RemoveMatchMemory
          CFI (cfiCond594) Conditional ??CrossCallReturnLabel_449
          CFI (cfiCond594) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond594) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond594) CFA_SP SP+-7
          CFI Block cfiCond595 Using cfiCommon0
          CFI (cfiCond595) Function ZDO_RemoveMatchMemory
          CFI (cfiCond595) Conditional ??CrossCallReturnLabel_450
          CFI (cfiCond595) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond595) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond595) CFA_SP SP+-7
          CFI Block cfiCond596 Using cfiCommon0
          CFI (cfiCond596) Function ZDO_RemoveMatchMemory
          CFI (cfiCond596) Conditional ??CrossCallReturnLabel_451
          CFI (cfiCond596) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond596) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond596) CFA_SP SP+-7
          CFI Block cfiCond597 Using cfiCommon0
          CFI (cfiCond597) Function ZDO_RemoveMatchMemory
          CFI (cfiCond597) Conditional ??CrossCallReturnLabel_452
          CFI (cfiCond597) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond597) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond597) CFA_SP SP+-7
          CFI Block cfiCond598 Using cfiCommon0
          CFI (cfiCond598) Function ZDO_RemoveMatchMemory
          CFI (cfiCond598) Conditional ??CrossCallReturnLabel_453
          CFI (cfiCond598) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond598) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond598) CFA_SP SP+-7
          CFI Block cfiPicker599 Using cfiCommon1
          CFI (cfiPicker599) NoFunction
          CFI (cfiPicker599) Picker
        LCALL   ?Subroutine175 & 0xFFFF
??CrossCallReturnLabel_456:
        ORL     A,R1
        RET
          CFI EndBlock cfiCond575
          CFI EndBlock cfiCond576
          CFI EndBlock cfiCond577
          CFI EndBlock cfiCond578
          CFI EndBlock cfiCond579
          CFI EndBlock cfiCond580
          CFI EndBlock cfiCond581
          CFI EndBlock cfiCond582
          CFI EndBlock cfiCond583
          CFI EndBlock cfiCond584
          CFI EndBlock cfiCond585
          CFI EndBlock cfiCond586
          CFI EndBlock cfiCond587
          CFI EndBlock cfiCond588
          CFI EndBlock cfiCond589
          CFI EndBlock cfiCond590
          CFI EndBlock cfiCond591
          CFI EndBlock cfiCond592
          CFI EndBlock cfiCond593
          CFI EndBlock cfiCond594
          CFI EndBlock cfiCond595
          CFI EndBlock cfiCond596
          CFI EndBlock cfiCond597
          CFI EndBlock cfiCond598
          CFI EndBlock cfiPicker599

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine28:
          CFI Block cfiCond600 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_33
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond601 Using cfiCommon0
          CFI (cfiCond601) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond601) Conditional ??CrossCallReturnLabel_31
          CFI (cfiCond601) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond601) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond601) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond601) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond601) CFA_SP SP+-2
          CFI (cfiCond601) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond602 Using cfiCommon0
          CFI (cfiCond602) Function ZDMatchSendState
          CFI (cfiCond602) Conditional ??CrossCallReturnLabel_32
          CFI (cfiCond602) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond602) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond602) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond602) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond602) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond602) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond602) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond602) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond602) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond602) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond602) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond602) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond602) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond602) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond602) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond602) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond602) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond602) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond602) CFA_SP SP+-2
          CFI (cfiCond602) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker603 Using cfiCommon1
          CFI (cfiPicker603) NoFunction
          CFI (cfiPicker603) Picker
        MOVX    @DPTR,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond600
          CFI EndBlock cfiCond601
          CFI EndBlock cfiCond602
          CFI EndBlock cfiPicker603
// 2126 
// 2127 /*********************************************************************
// 2128  * @fn          ZDO_BuildSimpleDescBuf
// 2129  *
// 2130  * @brief       Build a byte sequence representation of a Simple Descriptor.
// 2131  *
// 2132  * @param       buf  - pointer to a byte array big enough for data.
// 2133  * @param       desc - SimpleDescriptionFormat_t *
// 2134  *
// 2135  * @return      none
// 2136  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2137 void ZDO_BuildSimpleDescBuf( uint8 *buf, SimpleDescriptionFormat_t *desc )
ZDO_BuildSimpleDescBuf:
          CFI Block cfiBlock604 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
        CODE
// 2138 {
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 2139   byte cnt;
// 2140   uint16 *ptr;
// 2141 
// 2142   *buf++ = desc->EndPoint;
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine235_0 & 0xFFFF
??CrossCallReturnLabel_462:
        MOVX    @DPTR,A
// 2143   *buf++ = HI_UINT16( desc->AppProfId );
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_463:
        LCALL   ?Subroutine33 & 0xFFFF
// 2144   *buf++ = LO_UINT16( desc->AppProfId );
??CrossCallReturnLabel_43:
        MOVX    @DPTR,A
// 2145   *buf++ = HI_UINT16( desc->AppDeviceId );
        MOV     A,R4
        ADD     A,#0x3
        MOV     R0,A
        CLR     A
        ADDC    A,R5
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_464:
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine33 & 0xFFFF
// 2146   *buf++ = LO_UINT16( desc->AppDeviceId );
??CrossCallReturnLabel_44:
        LCALL   ?Subroutine44 & 0xFFFF
// 2147 
// 2148   *buf++ = (byte)(desc->AppDevVer << 4);
??CrossCallReturnLabel_67:
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf0
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine44 & 0xFFFF
// 2149 
// 2150   *buf++ = desc->AppNumInClusters;
??CrossCallReturnLabel_68:
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_465:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#0x7
        MOV     R2,A
        JNC     ??ZDO_BuildSimpleDescBuf_0
        INC     R3
// 2151   ptr = desc->pAppInClusterList;
??ZDO_BuildSimpleDescBuf_0:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine232_0 & 0xFFFF
// 2152   for ( cnt = 0; cnt < desc->AppNumInClusters; ptr++, cnt++ )
??CrossCallReturnLabel_422:
        MOV     R6,#0x0
        SJMP    ??ZDO_BuildSimpleDescBuf_1
// 2153   {
// 2154     *buf++ = HI_UINT16( *ptr );
??ZDO_BuildSimpleDescBuf_2:
        LCALL   ?Subroutine19 & 0xFFFF
// 2155     *buf++ = LO_UINT16( *ptr );
// 2156   }
??CrossCallReturnLabel_18:
        JNC     ??ZDO_BuildSimpleDescBuf_3
        INC     R3
??ZDO_BuildSimpleDescBuf_3:
        MOV     A,R0
        ADD     A,#0x2
        MOV     R0,A
        JNC     ??ZDO_BuildSimpleDescBuf_4
        INC     R1
??ZDO_BuildSimpleDescBuf_4:
        INC     R6
??ZDO_BuildSimpleDescBuf_1:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,R6
        CLR     C
        SUBB    A,R7
        JC      ??ZDO_BuildSimpleDescBuf_2
// 2157 
// 2158   *buf++ = desc->AppNumOutClusters;
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_466:
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
// 2159   ptr = desc->pAppOutClusterList;
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine232_0 & 0xFFFF
// 2160   for ( cnt = 0; cnt < desc->AppNumOutClusters; ptr++, cnt++ )
??CrossCallReturnLabel_423:
        MOV     R6,#0x0
        SJMP    ??ZDO_BuildSimpleDescBuf_5
// 2161   {
// 2162     *buf++ = HI_UINT16( *ptr );
??ZDO_BuildSimpleDescBuf_6:
        LCALL   ?Subroutine19 & 0xFFFF
// 2163     *buf++ = LO_UINT16( *ptr );
// 2164   }
??CrossCallReturnLabel_19:
        JNC     ??ZDO_BuildSimpleDescBuf_7
        INC     R3
??ZDO_BuildSimpleDescBuf_7:
        MOV     A,R0
        ADD     A,#0x2
        MOV     R0,A
        JNC     ??ZDO_BuildSimpleDescBuf_8
        INC     R1
??ZDO_BuildSimpleDescBuf_8:
        INC     R6
??ZDO_BuildSimpleDescBuf_5:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,R6
        CLR     C
        SUBB    A,R7
        JC      ??ZDO_BuildSimpleDescBuf_6
// 2165 }
        LJMP    ??Subroutine210_0 & 0xFFFF
          CFI EndBlock cfiBlock604

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine96:
          CFI Block cfiCond605 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_463
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond606 Using cfiCommon0
          CFI (cfiCond606) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond606) Conditional ??CrossCallReturnLabel_464
          CFI (cfiCond606) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond606) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond606) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond606) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond606) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond606) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond606) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond606) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond606) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond606) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond606) CFA_SP SP+-2
          CFI (cfiCond606) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond607 Using cfiCommon0
          CFI (cfiCond607) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond607) Conditional ??CrossCallReturnLabel_465
          CFI (cfiCond607) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond607) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond607) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond607) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond607) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond607) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond607) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond607) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond607) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond607) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond607) CFA_SP SP+-2
          CFI (cfiCond607) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond608 Using cfiCommon0
          CFI (cfiCond608) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond608) Conditional ??CrossCallReturnLabel_466
          CFI (cfiCond608) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond608) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond608) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond608) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond608) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond608) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond608) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond608) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond608) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond608) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond608) CFA_SP SP+-2
          CFI (cfiCond608) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker609 Using cfiCommon1
          CFI (cfiPicker609) NoFunction
          CFI (cfiPicker609) Picker
        INC     DPTR
          CFI EndBlock cfiCond605
          CFI EndBlock cfiCond606
          CFI EndBlock cfiCond607
          CFI EndBlock cfiCond608
          CFI EndBlock cfiPicker609
        REQUIRE ??Subroutine235_0
        ; // Fall through to label ??Subroutine235_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine235_0:
          CFI Block cfiCond610 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_462
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond611 Using cfiCommon0
          CFI (cfiCond611) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond611) Conditional ??CrossCallReturnLabel_463
          CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond611) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond611) CFA_SP SP+-2
          CFI (cfiCond611) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond612 Using cfiCommon0
          CFI (cfiCond612) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond612) Conditional ??CrossCallReturnLabel_464
          CFI (cfiCond612) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond612) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond612) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond612) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond612) CFA_SP SP+-2
          CFI (cfiCond612) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond613 Using cfiCommon0
          CFI (cfiCond613) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond613) Conditional ??CrossCallReturnLabel_465
          CFI (cfiCond613) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond613) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond613) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond613) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond613) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond613) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond613) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond613) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond613) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond613) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond613) CFA_SP SP+-2
          CFI (cfiCond613) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond614 Using cfiCommon0
          CFI (cfiCond614) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond614) Conditional ??CrossCallReturnLabel_466
          CFI (cfiCond614) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond614) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond614) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond614) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond614) CFA_SP SP+-2
          CFI (cfiCond614) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker615 Using cfiCommon1
          CFI (cfiPicker615) NoFunction
          CFI (cfiPicker615) Picker
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        RET
          CFI EndBlock cfiCond610
          CFI EndBlock cfiCond611
          CFI EndBlock cfiCond612
          CFI EndBlock cfiCond613
          CFI EndBlock cfiCond614
          CFI EndBlock cfiPicker615

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine44:
          CFI Block cfiCond616 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_67
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond617 Using cfiCommon0
          CFI (cfiCond617) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond617) Conditional ??CrossCallReturnLabel_68
          CFI (cfiCond617) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond617) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond617) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond617) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond617) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond617) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond617) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond617) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond617) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond617) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond617) CFA_SP SP+-2
          CFI (cfiCond617) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker618 Using cfiCommon1
          CFI (cfiPicker618) NoFunction
          CFI (cfiPicker618) Picker
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond616
          CFI EndBlock cfiCond617
          CFI EndBlock cfiPicker618

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine33:
          CFI Block cfiCond619 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_43
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond620 Using cfiCommon0
          CFI (cfiCond620) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond620) Conditional ??CrossCallReturnLabel_44
          CFI (cfiCond620) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond620) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond620) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond620) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond620) CFA_SP SP+-2
          CFI (cfiCond620) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker621 Using cfiCommon1
          CFI (cfiPicker621) NoFunction
          CFI (cfiPicker621) Picker
        INC     DPTR
        LCALL   ?Subroutine155 & 0xFFFF
??CrossCallReturnLabel_261:
        INC     DPTR
        RET
          CFI EndBlock cfiCond619
          CFI EndBlock cfiCond620
          CFI EndBlock cfiPicker621

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine19:
          CFI Block cfiCond622 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_18
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond623 Using cfiCommon0
          CFI (cfiCond623) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond623) Conditional ??CrossCallReturnLabel_19
          CFI (cfiCond623) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond623) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond623) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond623) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond623) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond623) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond623) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond623) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond623) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond623) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond623) CFA_SP SP+-2
          CFI (cfiCond623) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker624 Using cfiCommon1
          CFI (cfiPicker624) NoFunction
          CFI (cfiPicker624) Picker
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine155 & 0xFFFF
??CrossCallReturnLabel_262:
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#0x2
        MOV     R2,A
        RET
          CFI EndBlock cfiCond622
          CFI EndBlock cfiCond623
          CFI EndBlock cfiPicker624

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine155:
          CFI Block cfiCond625 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_43
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond626 Using cfiCommon0
          CFI (cfiCond626) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond626) Conditional ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_44
          CFI (cfiCond626) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond626) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond626) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond626) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond626) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond626) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond626) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond626) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond626) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond626) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond626) CFA_SP SP+-4
          CFI (cfiCond626) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond627 Using cfiCommon0
          CFI (cfiCond627) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond627) Conditional ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_18
          CFI (cfiCond627) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond627) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond627) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond627) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond627) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond627) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond627) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond627) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond627) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond627) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond627) CFA_SP SP+-4
          CFI (cfiCond627) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond628 Using cfiCommon0
          CFI (cfiCond628) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond628) Conditional ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_19
          CFI (cfiCond628) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond628) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond628) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond628) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond628) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond628) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond628) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond628) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond628) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond628) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond628) CFA_SP SP+-4
          CFI (cfiCond628) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker629 Using cfiCommon1
          CFI (cfiPicker629) NoFunction
          CFI (cfiPicker629) Picker
        LCALL   ?Subroutine195 & 0xFFFF
??CrossCallReturnLabel_312:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        RET
          CFI EndBlock cfiCond625
          CFI EndBlock cfiCond626
          CFI EndBlock cfiCond627
          CFI EndBlock cfiCond628
          CFI EndBlock cfiPicker629
// 2166 
// 2167 #if ( ZG_BUILD_COORDINATOR_TYPE )
// 2168 /*********************************************************************
// 2169  * @fn      ZDO_MatchEndDeviceBind()
// 2170  *
// 2171  * @brief
// 2172  *
// 2173  *   Called to match end device binding requests
// 2174  *
// 2175  * @param  bindReq  - binding request information
// 2176  * @param  SecurityUse - Security enable/disable
// 2177  *
// 2178  * @return  none
// 2179  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2180 void ZDO_MatchEndDeviceBind( ZDEndDeviceBind_t *bindReq )
ZDO_MatchEndDeviceBind:
          CFI Block cfiBlock630 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
        CODE
// 2181 {
        FUNCALL ZDO_MatchEndDeviceBind, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CopyMatchInfo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, APS_SetEndDeviceBindTimeout
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CopyMatchInfo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CompareClusterLists
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CompareClusterLists
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDMatchSendState
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_RemoveMatchMemory
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 10
        MOV     A,#-0xa
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 2182   zAddrType_t dstAddr;
// 2183   uint8 sendRsp = FALSE;
        MOV     ?V0,#0x0
// 2184   uint8 status;
// 2185 
// 2186   // Is this the first request?
// 2187   if ( matchED == NULL )
        MOV     DPTR,#matchED
        LCALL   ??Subroutine234_0 & 0xFFFF
??CrossCallReturnLabel_441:
        JNZ     ??ZDO_MatchEndDeviceBind_0
// 2188   {
// 2189     // Create match info structure
// 2190     matchED = (ZDMatchEndDeviceBind_t *)osal_mem_alloc( sizeof ( ZDMatchEndDeviceBind_t ) );
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,#0x37
        MOV     R3,#0x0
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     DPTR,#matchED
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        LCALL   ?Subroutine38 & 0xFFFF
// 2191     if ( matchED )
??CrossCallReturnLabel_53:
        JZ      ??ZDO_MatchEndDeviceBind_1
// 2192     {
// 2193       // Clear the structure
// 2194       osal_memset( (uint8 *)matchED, 0, sizeof ( ZDMatchEndDeviceBind_t ) );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0x37
        MOV     R5,#0x0
        MOV     R1,#0x0
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
// 2195 
// 2196       // Copy the first request's information
// 2197       if ( !ZDO_CopyMatchInfo( &(matchED->ed1), bindReq ) )
        ; Setup parameters for call to function ZDO_CopyMatchInfo
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     DPTR,#matchED
        LCALL   ??Subroutine241_0 & 0xFFFF
// 2198       {
// 2199         status = ZDP_NO_ENTRY;
// 2200         sendRsp = TRUE;
// 2201       }
// 2202     }
??CrossCallReturnLabel_490:
        LCALL   `??ZDO_CopyMatchInfo::?relay`; Banked call to: ZDO_CopyMatchInfo
        MOV     A,R1
        JNZ     ??ZDO_MatchEndDeviceBind_2
// 2203     else
// 2204     {
// 2205       status = ZDP_NO_ENTRY;
??ZDO_MatchEndDeviceBind_1:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x78
        LJMP    ??ZDO_MatchEndDeviceBind_3 & 0xFFFF
// 2206       sendRsp = TRUE;
// 2207     }
// 2208 
// 2209     if ( !sendRsp )
// 2210     {
// 2211       // Set into the correct state
// 2212       matchED->state = ZDMATCH_WAIT_REQ;
??ZDO_MatchEndDeviceBind_2:
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_569:
        LCALL   ?Subroutine150 & 0xFFFF
??CrossCallReturnLabel_251:
        MOV     A,#0x1
        MOVX    @DPTR,A
// 2213 
// 2214       // Setup the timeout
// 2215       APS_SetEndDeviceBindTimeout( AIB_MaxBindingTime, ZDO_EndDeviceBindMatchTimeoutCB );
        ; Setup parameters for call to function APS_SetEndDeviceBindTimeout
        MOV     R4,#`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` & 0xff
        MOV     R5,#(`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` >> 8) & 0xff
        MOV     DPTR,#AIB_MaxBindingTime
        LCALL   ??Subroutine241_0 & 0xFFFF
// 2216     }
// 2217   }
??CrossCallReturnLabel_491:
        LCALL   `??APS_SetEndDeviceBindTimeout::?relay`; Banked call to: APS_SetEndDeviceBindTimeout
        LJMP    ??ZDO_MatchEndDeviceBind_4 & 0xFFFF
// 2218   else
// 2219   {
// 2220       matchED->state = ZDMATCH_SENDING_BINDS;
??ZDO_MatchEndDeviceBind_0:
        MOVX    A,@DPTR
        XCH     A,R0
        LCALL   ?Subroutine150 & 0xFFFF
??CrossCallReturnLabel_252:
        MOV     A,#0x2
        MOVX    @DPTR,A
// 2221 
// 2222       // Copy the 2nd request's information
// 2223       if ( !ZDO_CopyMatchInfo( &(matchED->ed2), bindReq ) )
        ; Setup parameters for call to function ZDO_CopyMatchInfo
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        LCALL   ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_171:
        LCALL   `??ZDO_CopyMatchInfo::?relay`; Banked call to: ZDO_CopyMatchInfo
        MOV     A,R1
        JNZ     ??ZDO_MatchEndDeviceBind_5
// 2224       {
// 2225         status = ZDP_NO_ENTRY;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x78
        MOVX    @DPTR,A
// 2226         sendRsp = TRUE;
        MOV     ?V0,#0x1
// 2227       }
// 2228 
// 2229       // Make a source match for ed1
// 2230       matchED->ed1numMatched = ZDO_CompareClusterLists(
// 2231                   matchED->ed1.numOutClusters, matchED->ed1.outClusters,
// 2232                   matchED->ed2.numInClusters, matchED->ed2.inClusters, ZDOBuildBuf );
??ZDO_MatchEndDeviceBind_5:
        ; Setup parameters for call to function ZDO_CompareClusterLists
        MOV     ?V2,#ZDOBuildBuf & 0xff
        MOV     ?V3,#(ZDOBuildBuf >> 8) & 0xff
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_138:
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_570:
        ADD     A,#0x28
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_236:
        MOV     R4,A
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_112:
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_571:
        ADD     A,#0x14
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_237:
        MOV     R1,A
        LCALL   `??ZDO_CompareClusterLists::?relay`; Banked call to: ZDO_CompareClusterLists
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 25)
        LCALL   ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_468:
        LCALL   ?Subroutine23 & 0xFFFF
// 2233       if ( matchED->ed1numMatched )
??CrossCallReturnLabel_473:
        ADD     A,#0x31
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_238:
        JZ      ??ZDO_MatchEndDeviceBind_6
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_87:
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
// 2234       {
// 2235         // Save the match list
// 2236         matchED->ed1Matched = osal_mem_alloc( (short)(matchED->ed1numMatched * sizeof ( uint16 )) );
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        LCALL   ?Subroutine179 & 0xFFFF
??CrossCallReturnLabel_559:
        XCH     A,R4
        ADD     A,#0x32
        LCALL   ?Subroutine47 & 0xFFFF
// 2237         if ( matchED->ed1Matched )
??CrossCallReturnLabel_470:
        JZ      ??ZDO_MatchEndDeviceBind_7
// 2238         {
// 2239           osal_memcpy( matchED->ed1Matched, ZDOBuildBuf, (matchED->ed1numMatched * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V4,#ZDOBuildBuf & 0xff
        MOV     ?V5,#(ZDOBuildBuf >> 8) & 0xff
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 28)
        LCALL   ?Subroutine58 & 0xFFFF
// 2240         }
??CrossCallReturnLabel_88:
        MOV     R4,A
        CLR     A
        RLC     A
        MOV     R5,A
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_114:
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 25)
        SJMP    ??ZDO_MatchEndDeviceBind_6
// 2241         else
// 2242         {
// 2243           // Allocation error, stop
// 2244           status = ZDP_NO_ENTRY;
??ZDO_MatchEndDeviceBind_7:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x78
        MOVX    @DPTR,A
// 2245           sendRsp = TRUE;
        MOV     ?V0,#0x1
// 2246         }
// 2247       }
// 2248 
// 2249       // Make a source match for ed2
// 2250       matchED->ed2numMatched = ZDO_CompareClusterLists(
// 2251                   matchED->ed2.numOutClusters, matchED->ed2.outClusters,
// 2252                   matchED->ed1.numInClusters, matchED->ed1.inClusters, ZDOBuildBuf );
??ZDO_MatchEndDeviceBind_6:
        ; Setup parameters for call to function ZDO_CompareClusterLists
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_140:
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_572:
        ADD     A,#0x11
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_239:
        MOV     R4,A
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_116:
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_573:
        ADD     A,#0x2b
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_240:
        MOV     R1,A
        LCALL   `??ZDO_CompareClusterLists::?relay`; Banked call to: ZDO_CompareClusterLists
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     A,R1
        MOV     R0,A
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_574:
        ADD     A,#0x34
        LCALL   ?Subroutine23 & 0xFFFF
// 2253       if ( matchED->ed2numMatched )
??CrossCallReturnLabel_474:
        ADD     A,#0x34
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_241:
        JZ      ??ZDO_MatchEndDeviceBind_8
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_90:
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
// 2254       {
// 2255         // Save the match list
// 2256         matchED->ed2Matched = osal_mem_alloc( (short)(matchED->ed2numMatched * sizeof ( uint16 )) );
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        LCALL   ?Subroutine179 & 0xFFFF
??CrossCallReturnLabel_560:
        XCH     A,R4
        ADD     A,#0x35
        LCALL   ?Subroutine47 & 0xFFFF
// 2257         if ( matchED->ed2Matched )
??CrossCallReturnLabel_471:
        JZ      ??ZDO_MatchEndDeviceBind_9
// 2258         {
// 2259           osal_memcpy( matchED->ed2Matched, ZDOBuildBuf, (matchED->ed2numMatched * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V4,#ZDOBuildBuf & 0xff
        MOV     ?V5,#(ZDOBuildBuf >> 8) & 0xff
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 28)
        LCALL   ?Subroutine59 & 0xFFFF
// 2260         }
??CrossCallReturnLabel_91:
        MOV     R4,A
        CLR     A
        RLC     A
        MOV     R5,A
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_118:
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 25)
// 2261         else
// 2262         {
// 2263           // Allocation error, stop
// 2264           status = ZDP_NO_ENTRY;
// 2265           sendRsp = TRUE;
// 2266         }
// 2267       }
// 2268 
// 2269       if ( (sendRsp == FALSE) && (matchED->ed1numMatched || matchED->ed2numMatched) )
??ZDO_MatchEndDeviceBind_8:
        MOV     A,?V0
        MOV     C,0xE0 /* A   */.0
        JC      ??ZDO_MatchEndDeviceBind_10
        LCALL   ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_469:
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_242:
        JNZ     ??ZDO_MatchEndDeviceBind_11
        MOV     DPTR,#matchED
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_99:
        JZ      ??ZDO_MatchEndDeviceBind_10
// 2270       {
// 2271         // Do the first unbind/bind state
// 2272         ZDMatchSendState( ZDMATCH_REASON_START, ZDP_SUCCESS, 0 );
??ZDO_MatchEndDeviceBind_11:
        ; Setup parameters for call to function ZDMatchSendState
        MOV     R3,#0x0
        MOV     R2,#0x0
        MOV     R1,#0x0
        LCALL   `??ZDMatchSendState::?relay`; Banked call to: ZDMatchSendState
// 2273       }
// 2274       else
// 2275       {
// 2276         status = ZDP_NO_MATCH;
// 2277         sendRsp = TRUE;
// 2278       }
// 2279   }
// 2280 
// 2281   if ( sendRsp )
        LJMP    ??ZDO_MatchEndDeviceBind_4 & 0xFFFF
??ZDO_MatchEndDeviceBind_9:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x78
        MOVX    @DPTR,A
??ZDO_MatchEndDeviceBind_10:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7a
??ZDO_MatchEndDeviceBind_3:
        MOVX    @DPTR,A
// 2282   {
// 2283     // send response to this requester
// 2284     dstAddr.addrMode = Addr16Bit;
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        LCALL   ?Subroutine54 & 0xFFFF
// 2285     dstAddr.addr.shortAddr = bindReq->srcAddr;
??CrossCallReturnLabel_83:
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine220_0 & 0xFFFF
// 2286     ZDP_EndDeviceBindRsp( bindReq->TransSeq, &dstAddr, status, bindReq->SecurityUse );
??CrossCallReturnLabel_376:
        ; Setup parameters for call to function ZDP_SendData
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        LCALL   ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_344:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     ?V0,#0x20
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     R1,#0x1
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP102_8
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 25)
// 2287 
// 2288     if ( matchED->state == ZDMATCH_SENDING_BINDS )
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_127:
        JNZ     ??ZDO_MatchEndDeviceBind_12
// 2289     {
// 2290       // send response to first requester
// 2291       dstAddr.addrMode = Addr16Bit;
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        MOVX    @DPTR,A
// 2292       dstAddr.addr.shortAddr = matchED->ed1.srcAddr;
        LCALL   ?Subroutine76 & 0xFFFF
// 2293       ZDP_EndDeviceBindRsp( matchED->ed1.TransSeq, &dstAddr, status, matchED->ed1.SecurityUse );
// 2294     }
??CrossCallReturnLabel_123:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_8:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     ?V0,#0x20
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     R1,#0x1
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP102_8
        MOV     DPTR,#matchED
        LCALL   ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_492:
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 25)
// 2295 
// 2296     // Process ended - release memory used
// 2297     ZDO_RemoveMatchMemory();
??ZDO_MatchEndDeviceBind_12:
        ; Setup parameters for call to function ZDO_RemoveMatchMemory
        LCALL   `??ZDO_RemoveMatchMemory::?relay`; Banked call to: ZDO_RemoveMatchMemory
// 2298   }
// 2299 }
??ZDO_MatchEndDeviceBind_4:
        MOV     A,#0xa
        LJMP    ?Subroutine9 & 0xFFFF
          CFI EndBlock cfiBlock630

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine150:
          CFI Block cfiCond631 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_251
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond632 Using cfiCommon0
          CFI (cfiCond632) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond632) Conditional ??CrossCallReturnLabel_252
          CFI (cfiCond632) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond632) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond632) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond632) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond632) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond632) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond632) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond632) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond632) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond632) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond632) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond632) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond632) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond632) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond632) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond632) CFA_SP SP+-2
          CFI (cfiCond632) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker633 Using cfiCommon1
          CFI (cfiPicker633) NoFunction
          CFI (cfiPicker633) Picker
        LCALL   ?Subroutine193 & 0xFFFF
??CrossCallReturnLabel_311:
        RET
          CFI EndBlock cfiCond631
          CFI EndBlock cfiCond632
          CFI EndBlock cfiPicker633

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine193:
          CFI Block cfiCond634 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_251
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond635 Using cfiCommon0
          CFI (cfiCond635) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond635) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_252
          CFI (cfiCond635) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond635) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond635) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond635) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond635) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond635) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond635) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond635) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond635) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond635) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond635) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond635) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond635) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond635) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond635) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond635) CFA_SP SP+-4
          CFI (cfiCond635) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond636 Using cfiCommon0
          CFI (cfiCond636) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond636) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_127
          CFI (cfiCond636) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond636) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond636) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond636) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond636) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond636) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond636) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond636) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond636) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond636) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond636) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond636) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond636) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond636) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond636) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond636) CFA_SP SP+-4
          CFI (cfiCond636) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond637 Using cfiCommon0
          CFI (cfiCond637) Function ZDMatchSendState
          CFI (cfiCond637) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_128
          CFI (cfiCond637) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond637) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond637) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond637) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond637) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond637) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond637) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond637) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond637) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond637) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond637) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond637) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond637) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond637) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond637) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond637) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond637) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond637) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond637) CFA_SP SP+-4
          CFI (cfiCond637) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker638 Using cfiCommon1
          CFI (cfiPicker638) NoFunction
          CFI (cfiPicker638) Picker
        ADD     A,#0x2e
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond634
          CFI EndBlock cfiCond635
          CFI EndBlock cfiCond636
          CFI EndBlock cfiCond637
          CFI EndBlock cfiPicker638

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine91:
          CFI Block cfiCond639 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_468
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond640 Using cfiCommon0
          CFI (cfiCond640) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond640) Conditional ??CrossCallReturnLabel_469
          CFI (cfiCond640) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond640) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond640) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond640) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond640) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond640) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond640) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond640) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond640) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond640) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond640) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond640) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond640) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond640) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond640) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond640) CFA_SP SP+-2
          CFI (cfiCond640) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker641 Using cfiCommon1
          CFI (cfiPicker641) NoFunction
          CFI (cfiPicker641) Picker
        MOV     DPTR,#matchED
          CFI EndBlock cfiCond639
          CFI EndBlock cfiCond640
          CFI EndBlock cfiPicker641
        REQUIRE ??Subroutine236_0
        ; // Fall through to label ??Subroutine236_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine236_0:
          CFI Block cfiCond642 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_467
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond643 Using cfiCommon0
          CFI (cfiCond643) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond643) Conditional ??CrossCallReturnLabel_468
          CFI (cfiCond643) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond643) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond643) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond643) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond643) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond643) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond643) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond643) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond643) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond643) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond643) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond643) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond643) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond643) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond643) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond643) CFA_SP SP+-2
          CFI (cfiCond643) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond644 Using cfiCommon0
          CFI (cfiCond644) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond644) Conditional ??CrossCallReturnLabel_469
          CFI (cfiCond644) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond644) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond644) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond644) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond644) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond644) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond644) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond644) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond644) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond644) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond644) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond644) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond644) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond644) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond644) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond644) CFA_SP SP+-2
          CFI (cfiCond644) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker645 Using cfiCommon1
          CFI (cfiPicker645) NoFunction
          CFI (cfiPicker645) Picker
        LCALL   ??Subroutine246_0 & 0xFFFF
??CrossCallReturnLabel_591:
        ADD     A,#0x31
        RET
          CFI EndBlock cfiCond642
          CFI EndBlock cfiCond643
          CFI EndBlock cfiCond644
          CFI EndBlock cfiPicker645

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine47:
          CFI Block cfiCond646 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_470
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond647 Using cfiCommon0
          CFI (cfiCond647) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond647) Conditional ??CrossCallReturnLabel_471
          CFI (cfiCond647) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond647) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond647) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond647) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond647) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond647) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond647) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond647) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond647) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond647) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond647) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond647) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond647) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond647) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond647) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond647) CFA_SP SP+-2
          CFI (cfiCond647) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker648 Using cfiCommon1
          CFI (cfiPicker648) NoFunction
          CFI (cfiPicker648) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R4
        MOV     DPH,A
          CFI EndBlock cfiCond646
          CFI EndBlock cfiCond647
          CFI EndBlock cfiPicker648
        REQUIRE ??Subroutine237_0
        ; // Fall through to label ??Subroutine237_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine237_0:
          CFI Block cfiCond649 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_472
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond650 Using cfiCommon0
          CFI (cfiCond650) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond650) Conditional ??CrossCallReturnLabel_470
          CFI (cfiCond650) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond650) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond650) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond650) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond650) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond650) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond650) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond650) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond650) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond650) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond650) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond650) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond650) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond650) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond650) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond650) CFA_SP SP+-2
          CFI (cfiCond650) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond651 Using cfiCommon0
          CFI (cfiCond651) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond651) Conditional ??CrossCallReturnLabel_471
          CFI (cfiCond651) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond651) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond651) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond651) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond651) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond651) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond651) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond651) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond651) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond651) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond651) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond651) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond651) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond651) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond651) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond651) CFA_SP SP+-2
          CFI (cfiCond651) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker652 Using cfiCommon1
          CFI (cfiPicker652) NoFunction
          CFI (cfiPicker652) Picker
        LCALL   ?Subroutine161 & 0xFFFF
??CrossCallReturnLabel_526:
        MOV     A,R2
        ORL     A,R3
        RET
          CFI EndBlock cfiCond649
          CFI EndBlock cfiCond650
          CFI EndBlock cfiCond651
          CFI EndBlock cfiPicker652

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine23:
          CFI Block cfiCond653 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_473
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond654 Using cfiCommon0
          CFI (cfiCond654) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond654) Conditional ??CrossCallReturnLabel_474
          CFI (cfiCond654) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond654) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond654) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond654) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond654) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond654) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond654) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond654) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond654) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond654) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond654) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond654) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond654) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond654) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond654) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond654) CFA_SP SP+-2
          CFI (cfiCond654) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker655 Using cfiCommon1
          CFI (cfiPicker655) NoFunction
          CFI (cfiPicker655) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
          CFI EndBlock cfiCond653
          CFI EndBlock cfiCond654
          CFI EndBlock cfiPicker655
        REQUIRE ??Subroutine238_0
        ; // Fall through to label ??Subroutine238_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine238_0:
          CFI Block cfiCond656 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_475
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond657 Using cfiCommon0
          CFI (cfiCond657) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond657) Conditional ??CrossCallReturnLabel_473
          CFI (cfiCond657) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond657) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond657) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond657) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond657) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond657) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond657) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond657) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond657) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond657) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond657) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond657) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond657) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond657) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond657) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond657) CFA_SP SP+-2
          CFI (cfiCond657) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond658 Using cfiCommon0
          CFI (cfiCond658) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond658) Conditional ??CrossCallReturnLabel_474
          CFI (cfiCond658) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond658) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond658) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond658) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond658) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond658) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond658) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond658) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond658) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond658) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond658) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond658) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond658) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond658) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond658) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond658) CFA_SP SP+-2
          CFI (cfiCond658) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker659 Using cfiCommon1
          CFI (cfiPicker659) NoFunction
          CFI (cfiPicker659) Picker
        LCALL   ?Subroutine153 & 0xFFFF
??CrossCallReturnLabel_476:
        XCH     A,R0
        RET
          CFI EndBlock cfiCond656
          CFI EndBlock cfiCond657
          CFI EndBlock cfiCond658
          CFI EndBlock cfiPicker659

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine153:
          CFI Block cfiCond660 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_473
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond661 Using cfiCommon0
          CFI (cfiCond661) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond661) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_474
          CFI (cfiCond661) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond661) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond661) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond661) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond661) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond661) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond661) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond661) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond661) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond661) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond661) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond661) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond661) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond661) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond661) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond661) CFA_SP SP+-4
          CFI (cfiCond661) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond662 Using cfiCommon0
          CFI (cfiCond662) Function ZDMatchSendState
          CFI (cfiCond662) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_475
          CFI (cfiCond662) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond662) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond662) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond662) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond662) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond662) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond662) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond662) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond662) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond662) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond662) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond662) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond662) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond662) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond662) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond662) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond662) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond662) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond662) CFA_SP SP+-4
          CFI (cfiCond662) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond663 Using cfiCommon0
          CFI (cfiCond663) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond663) Conditional ??CrossCallReturnLabel_477, ??CrossCallReturnLabel_8
          CFI (cfiCond663) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond663) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond663) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond663) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond663) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond663) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond663) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond663) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond663) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond663) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond663) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond663) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond663) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond663) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond663) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond663) CFA_SP SP+-4
          CFI (cfiCond663) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond664 Using cfiCommon0
          CFI (cfiCond664) Function ZDMatchSendState
          CFI (cfiCond664) Conditional ??CrossCallReturnLabel_477, ??CrossCallReturnLabel_9
          CFI (cfiCond664) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond664) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond664) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond664) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond664) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond664) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond664) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond664) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond664) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond664) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond664) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond664) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond664) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond664) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond664) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond664) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond664) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond664) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond664) CFA_SP SP+-4
          CFI (cfiCond664) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker665 Using cfiCommon1
          CFI (cfiPicker665) NoFunction
          CFI (cfiPicker665) Picker
        MOV     A,R1
          CFI EndBlock cfiCond660
          CFI EndBlock cfiCond661
          CFI EndBlock cfiCond662
          CFI EndBlock cfiCond663
          CFI EndBlock cfiCond664
          CFI EndBlock cfiPicker665
        REQUIRE ??Subroutine239_0
        ; // Fall through to label ??Subroutine239_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine239_0:
          CFI Block cfiCond666 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_478, ??CrossCallReturnLabel_53
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond667 Using cfiCommon0
          CFI (cfiCond667) Function ZDMatchSendState
          CFI (cfiCond667) Conditional ??CrossCallReturnLabel_478, ??CrossCallReturnLabel_54
          CFI (cfiCond667) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond667) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond667) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond667) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond667) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond667) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond667) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond667) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond667) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond667) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond667) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond667) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond667) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond667) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond667) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond667) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond667) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond667) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond667) CFA_SP SP+-4
          CFI (cfiCond667) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond668 Using cfiCommon0
          CFI (cfiCond668) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond668) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_473
          CFI (cfiCond668) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond668) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond668) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond668) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond668) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond668) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond668) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond668) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond668) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond668) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond668) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond668) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond668) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond668) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond668) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond668) CFA_SP SP+-4
          CFI (cfiCond668) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond669 Using cfiCommon0
          CFI (cfiCond669) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond669) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_474
          CFI (cfiCond669) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond669) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond669) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond669) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond669) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond669) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond669) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond669) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond669) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond669) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond669) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond669) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond669) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond669) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond669) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond669) CFA_SP SP+-4
          CFI (cfiCond669) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond670 Using cfiCommon0
          CFI (cfiCond670) Function ZDMatchSendState
          CFI (cfiCond670) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_475
          CFI (cfiCond670) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond670) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond670) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond670) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond670) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond670) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond670) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond670) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond670) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond670) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond670) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond670) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond670) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond670) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond670) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond670) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond670) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond670) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond670) CFA_SP SP+-4
          CFI (cfiCond670) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond671 Using cfiCommon0
          CFI (cfiCond671) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond671) Conditional ??CrossCallReturnLabel_477, ??CrossCallReturnLabel_8
          CFI (cfiCond671) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond671) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond671) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond671) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond671) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond671) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond671) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond671) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond671) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond671) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond671) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond671) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond671) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond671) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond671) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond671) CFA_SP SP+-4
          CFI (cfiCond671) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond672 Using cfiCommon0
          CFI (cfiCond672) Function ZDMatchSendState
          CFI (cfiCond672) Conditional ??CrossCallReturnLabel_477, ??CrossCallReturnLabel_9
          CFI (cfiCond672) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond672) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond672) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond672) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond672) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond672) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond672) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond672) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond672) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond672) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond672) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond672) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond672) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond672) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond672) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond672) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond672) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond672) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond672) CFA_SP SP+-4
          CFI (cfiCond672) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker673 Using cfiCommon1
          CFI (cfiPicker673) NoFunction
          CFI (cfiPicker673) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function ZDP_SendData
        ; Setup parameters for call to function ZDP_SendData
        ; Setup parameters for call to function ZDP_SendData
        MOV     DPTR,#matchED
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond666
          CFI EndBlock cfiCond667
          CFI EndBlock cfiCond668
          CFI EndBlock cfiCond669
          CFI EndBlock cfiCond670
          CFI EndBlock cfiCond671
          CFI EndBlock cfiCond672
          CFI EndBlock cfiPicker673
// 2300 
// 2301 /*********************************************************************
// 2302  * @fn      ZDO_RemoveMatchMemory()
// 2303  *
// 2304  * @brief   Called to clear the memory used for the end device bind.
// 2305  *
// 2306  * @param  none
// 2307  *
// 2308  * @return  none
// 2309  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2310 static void ZDO_RemoveMatchMemory( void )
ZDO_RemoveMatchMemory:
          CFI Block cfiBlock674 Using cfiCommon0
          CFI Function ZDO_RemoveMatchMemory
        CODE
// 2311 {
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2312   if ( matchED != NULL )
        MOV     DPTR,#matchED
        LCALL   ??Subroutine234_0 & 0xFFFF
??CrossCallReturnLabel_442:
        JZ      ??ZDO_RemoveMatchMemory_0
// 2313   {
// 2314     if ( matchED->ed2Matched != NULL )
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x35
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_448:
        JZ      ??ZDO_RemoveMatchMemory_1
// 2315     {
// 2316       osal_mem_free( matchED->ed2Matched );
        ; Setup parameters for call to function osal_mem_free
        LCALL   ?Subroutine73 & 0xFFFF
// 2317     }
??CrossCallReturnLabel_119:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2318     if ( matchED->ed1Matched != NULL )
??ZDO_RemoveMatchMemory_1:
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_575:
        ADD     A,#0x32
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_449:
        JZ      ??ZDO_RemoveMatchMemory_2
// 2319     {
// 2320       osal_mem_free( matchED->ed1Matched );
        ; Setup parameters for call to function osal_mem_free
        LCALL   ?Subroutine71 & 0xFFFF
// 2321     }
??CrossCallReturnLabel_115:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2322     if ( matchED->ed1.inClusters != NULL )
??ZDO_RemoveMatchMemory_2:
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_576:
        ADD     A,#0x12
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_450:
        JZ      ??ZDO_RemoveMatchMemory_3
// 2323     {
// 2324       osal_mem_free( matchED->ed1.inClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL   ?Subroutine86 & 0xFFFF
// 2325     }
??CrossCallReturnLabel_141:
        LCALL   ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_493:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2326     if ( matchED->ed1.outClusters != NULL )
??ZDO_RemoveMatchMemory_3:
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_577:
        ADD     A,#0x15
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_451:
        JZ      ??ZDO_RemoveMatchMemory_4
// 2327     {
// 2328       osal_mem_free( matchED->ed1.outClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL   ?Subroutine70 & 0xFFFF
// 2329     }
??CrossCallReturnLabel_113:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2330     if ( matchED->ed2.inClusters != NULL )
??ZDO_RemoveMatchMemory_4:
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_578:
        ADD     A,#0x29
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_452:
        JZ      ??ZDO_RemoveMatchMemory_5
// 2331     {
// 2332       osal_mem_free( matchED->ed2.inClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL   ?Subroutine85 & 0xFFFF
// 2333     }
??CrossCallReturnLabel_139:
        LCALL   ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_494:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2334     if ( matchED->ed2.outClusters != NULL )
??ZDO_RemoveMatchMemory_5:
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_579:
        ADD     A,#0x2c
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_453:
        JZ      ??ZDO_RemoveMatchMemory_6
// 2335     {
// 2336       osal_mem_free( matchED->ed2.outClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL   ?Subroutine72 & 0xFFFF
// 2337     }
??CrossCallReturnLabel_117:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2338 
// 2339     osal_mem_free( matchED );
??ZDO_RemoveMatchMemory_6:
        ; Setup parameters for call to function osal_mem_free
        MOV     DPTR,#matchED
        LCALL   ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_495:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2340     matchED = (ZDMatchEndDeviceBind_t *)NULL;
        MOV     DPTR,#matchED
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 2341   }
// 2342 }
??ZDO_RemoveMatchMemory_0:
          CFI EndBlock cfiBlock674
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock675 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+-5
          CFI DPL0 Frame(CFA_SP, 4)
          CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
          CFI CFA_SP SP+-4
          CFI DPH0 SameValue
        POP     DPL
          CFI CFA_SP SP+-3
          CFI DPL0 SameValue
        LJMP    ?BRET
          CFI EndBlock cfiBlock675

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine102:
          CFI Block cfiCond676 Using cfiCommon0
          CFI Function ZDO_ProcessDeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_507
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond677 Using cfiCommon0
          CFI (cfiCond677) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond677) Conditional ??CrossCallReturnLabel_508
          CFI (cfiCond677) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond677) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond677) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond677) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond677) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond677) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond677) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond677) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond677) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond677) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond677) CFA_SP SP+-2
          CFI (cfiCond677) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond678 Using cfiCommon0
          CFI (cfiCond678) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond678) Conditional ??CrossCallReturnLabel_509
          CFI (cfiCond678) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond678) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond678) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond678) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond678) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond678) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond678) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond678) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond678) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond678) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond678) CFA_SP SP+-2
          CFI (cfiCond678) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker679 Using cfiCommon1
          CFI (cfiPicker679) NoFunction
          CFI (cfiPicker679) Picker
        MOV     R4,DPL
        MOV     R5,DPH
          CFI EndBlock cfiCond676
          CFI EndBlock cfiCond677
          CFI EndBlock cfiCond678
          CFI EndBlock cfiPicker679
        REQUIRE ??Subroutine240_0
        ; // Fall through to label ??Subroutine240_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine240_0:
          CFI Block cfiCond680 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_503
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond681 Using cfiCommon0
          CFI (cfiCond681) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond681) Conditional ??CrossCallReturnLabel_504
          CFI (cfiCond681) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond681) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond681) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond681) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond681) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond681) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond681) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond681) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond681) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond681) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond681) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond681) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond681) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond681) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond681) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond681) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond681) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond681) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond681) CFA_SP SP+-2
          CFI (cfiCond681) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond682 Using cfiCommon0
          CFI (cfiCond682) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond682) Conditional ??CrossCallReturnLabel_505
          CFI (cfiCond682) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond682) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond682) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond682) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond682) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond682) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond682) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond682) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond682) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond682) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond682) CFA_SP SP+-2
          CFI (cfiCond682) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond683 Using cfiCommon0
          CFI (cfiCond683) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond683) Conditional ??CrossCallReturnLabel_506
          CFI (cfiCond683) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond683) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond683) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond683) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond683) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond683) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond683) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond683) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond683) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond683) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond683) CFA_SP SP+-2
          CFI (cfiCond683) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond684 Using cfiCommon0
          CFI (cfiCond684) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond684) Conditional ??CrossCallReturnLabel_507
          CFI (cfiCond684) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond684) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond684) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond684) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond684) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond684) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond684) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond684) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond684) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond684) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond684) CFA_SP SP+-2
          CFI (cfiCond684) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond685 Using cfiCommon0
          CFI (cfiCond685) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond685) Conditional ??CrossCallReturnLabel_508
          CFI (cfiCond685) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond685) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond685) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond685) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond685) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond685) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond685) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond685) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond685) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond685) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond685) CFA_SP SP+-2
          CFI (cfiCond685) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond686 Using cfiCommon0
          CFI (cfiCond686) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond686) Conditional ??CrossCallReturnLabel_509
          CFI (cfiCond686) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond686) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond686) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond686) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond686) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond686) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond686) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond686) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond686) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond686) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond686) CFA_SP SP+-2
          CFI (cfiCond686) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker687 Using cfiCommon1
          CFI (cfiPicker687) NoFunction
          CFI (cfiPicker687) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
          CFI EndBlock cfiCond680
          CFI EndBlock cfiCond681
          CFI EndBlock cfiCond682
          CFI EndBlock cfiCond683
          CFI EndBlock cfiCond684
          CFI EndBlock cfiCond685
          CFI EndBlock cfiCond686
          CFI EndBlock cfiPicker687
        REQUIRE ??Subroutine241_0
        ; // Fall through to label ??Subroutine241_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine241_0:
          CFI Block cfiCond688 Using cfiCommon0
          CFI Function ZDO_StartDevice
          CFI Conditional ??CrossCallReturnLabel_479
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond689 Using cfiCommon0
          CFI (cfiCond689) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond689) Conditional ??CrossCallReturnLabel_480
          CFI (cfiCond689) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond689) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond689) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond689) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond689) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond689) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond689) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond689) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond689) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond689) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond689) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond689) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond689) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond689) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond689) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond689) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond689) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond689) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond689) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond689) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond689) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond689) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond689) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond689) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond689) CFA_SP SP+-2
          CFI (cfiCond689) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond690 Using cfiCommon0
          CFI (cfiCond690) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond690) Conditional ??CrossCallReturnLabel_481
          CFI (cfiCond690) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond690) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond690) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond690) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond690) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond690) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond690) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond690) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond690) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond690) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond690) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond690) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond690) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond690) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond690) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond690) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond690) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond690) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond690) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond690) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond690) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond690) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond690) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond690) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond690) CFA_SP SP+-2
          CFI (cfiCond690) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond691 Using cfiCommon0
          CFI (cfiCond691) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond691) Conditional ??CrossCallReturnLabel_482
          CFI (cfiCond691) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond691) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond691) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond691) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond691) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond691) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond691) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond691) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond691) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond691) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond691) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond691) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond691) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond691) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond691) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond691) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond691) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond691) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond691) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond691) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond691) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond691) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond691) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond691) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond691) CFA_SP SP+-2
          CFI (cfiCond691) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond692 Using cfiCommon0
          CFI (cfiCond692) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond692) Conditional ??CrossCallReturnLabel_483
          CFI (cfiCond692) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond692) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond692) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond692) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond692) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond692) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond692) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond692) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond692) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond692) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond692) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond692) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond692) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond692) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond692) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond692) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond692) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond692) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond692) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond692) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond692) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond692) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond692) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond692) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond692) CFA_SP SP+-2
          CFI (cfiCond692) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond693 Using cfiCommon0
          CFI (cfiCond693) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond693) Conditional ??CrossCallReturnLabel_484
          CFI (cfiCond693) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond693) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond693) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond693) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond693) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond693) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond693) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond693) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond693) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond693) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond693) CFA_SP SP+-2
          CFI (cfiCond693) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond694 Using cfiCommon0
          CFI (cfiCond694) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond694) Conditional ??CrossCallReturnLabel_485
          CFI (cfiCond694) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond694) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond694) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond694) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond694) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond694) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond694) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond694) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond694) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond694) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond694) CFA_SP SP+-2
          CFI (cfiCond694) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond695 Using cfiCommon0
          CFI (cfiCond695) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond695) Conditional ??CrossCallReturnLabel_486
          CFI (cfiCond695) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond695) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond695) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond695) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond695) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond695) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond695) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond695) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond695) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond695) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond695) CFA_SP SP+-2
          CFI (cfiCond695) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond696 Using cfiCommon0
          CFI (cfiCond696) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond696) Conditional ??CrossCallReturnLabel_487
          CFI (cfiCond696) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond696) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond696) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond696) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond696) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond696) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond696) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond696) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond696) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond696) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond696) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond696) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond696) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond696) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond696) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond696) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond696) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond696) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond696) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond696) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond696) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond696) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond696) CFA_SP SP+-2
          CFI (cfiCond696) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond697 Using cfiCommon0
          CFI (cfiCond697) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond697) Conditional ??CrossCallReturnLabel_488
          CFI (cfiCond697) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond697) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond697) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond697) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond697) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond697) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond697) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond697) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond697) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond697) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond697) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond697) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond697) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond697) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond697) CFA_SP SP+-2
          CFI (cfiCond697) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond698 Using cfiCommon0
          CFI (cfiCond698) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond698) Conditional ??CrossCallReturnLabel_489
          CFI (cfiCond698) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond698) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond698) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond698) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond698) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond698) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond698) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond698) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond698) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond698) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond698) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond698) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond698) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond698) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond698) CFA_SP SP+-2
          CFI (cfiCond698) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond699 Using cfiCommon0
          CFI (cfiCond699) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond699) Conditional ??CrossCallReturnLabel_490
          CFI (cfiCond699) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond699) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond699) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond699) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond699) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond699) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond699) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond699) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond699) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond699) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond699) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond699) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond699) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond699) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond699) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond699) CFA_SP SP+-2
          CFI (cfiCond699) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond700 Using cfiCommon0
          CFI (cfiCond700) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond700) Conditional ??CrossCallReturnLabel_491
          CFI (cfiCond700) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond700) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond700) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond700) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond700) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond700) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond700) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond700) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond700) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond700) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond700) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond700) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond700) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond700) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond700) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond700) CFA_SP SP+-2
          CFI (cfiCond700) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond701 Using cfiCommon0
          CFI (cfiCond701) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond701) Conditional ??CrossCallReturnLabel_492
          CFI (cfiCond701) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond701) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond701) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond701) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond701) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond701) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond701) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond701) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond701) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond701) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond701) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond701) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond701) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond701) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond701) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond701) CFA_SP SP+-2
          CFI (cfiCond701) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond702 Using cfiCommon0
          CFI (cfiCond702) Function ZDO_RemoveMatchMemory
          CFI (cfiCond702) Conditional ??CrossCallReturnLabel_493
          CFI (cfiCond702) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond702) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond702) CFA_SP SP+-7
          CFI Block cfiCond703 Using cfiCommon0
          CFI (cfiCond703) Function ZDO_RemoveMatchMemory
          CFI (cfiCond703) Conditional ??CrossCallReturnLabel_494
          CFI (cfiCond703) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond703) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond703) CFA_SP SP+-7
          CFI Block cfiCond704 Using cfiCommon0
          CFI (cfiCond704) Function ZDO_RemoveMatchMemory
          CFI (cfiCond704) Conditional ??CrossCallReturnLabel_495
          CFI (cfiCond704) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond704) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond704) CFA_SP SP+-7
          CFI Block cfiCond705 Using cfiCommon0
          CFI (cfiCond705) Function ZDO_CopyMatchInfo
          CFI (cfiCond705) Conditional ??CrossCallReturnLabel_496
          CFI (cfiCond705) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond705) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond705) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond705) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond705) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond705) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond705) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond705) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond705) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond705) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond705) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond705) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond705) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond705) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond705) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond705) CFA_SP SP+-2
          CFI (cfiCond705) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond706 Using cfiCommon0
          CFI (cfiCond706) Function ZDO_CopyMatchInfo
          CFI (cfiCond706) Conditional ??CrossCallReturnLabel_497
          CFI (cfiCond706) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond706) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond706) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond706) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond706) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond706) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond706) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond706) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond706) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond706) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond706) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond706) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond706) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond706) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond706) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond706) CFA_SP SP+-2
          CFI (cfiCond706) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond707 Using cfiCommon0
          CFI (cfiCond707) Function ZDO_CopyMatchInfo
          CFI (cfiCond707) Conditional ??CrossCallReturnLabel_498
          CFI (cfiCond707) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond707) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond707) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond707) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond707) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond707) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond707) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond707) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond707) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond707) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond707) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond707) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond707) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond707) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond707) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond707) CFA_SP SP+-2
          CFI (cfiCond707) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond708 Using cfiCommon0
          CFI (cfiCond708) Function ZDO_CopyMatchInfo
          CFI (cfiCond708) Conditional ??CrossCallReturnLabel_499
          CFI (cfiCond708) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond708) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond708) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond708) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond708) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond708) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond708) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond708) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond708) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond708) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond708) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond708) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond708) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond708) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond708) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond708) CFA_SP SP+-2
          CFI (cfiCond708) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond709 Using cfiCommon0
          CFI (cfiCond709) Function ZDMatchSendState
          CFI (cfiCond709) Conditional ??CrossCallReturnLabel_500
          CFI (cfiCond709) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond709) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond709) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond709) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond709) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond709) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond709) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond709) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond709) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond709) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond709) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond709) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond709) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond709) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond709) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond709) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond709) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond709) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond709) CFA_SP SP+-2
          CFI (cfiCond709) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond710 Using cfiCommon0
          CFI (cfiCond710) Function ZDMatchSendState
          CFI (cfiCond710) Conditional ??CrossCallReturnLabel_501
          CFI (cfiCond710) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond710) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond710) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond710) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond710) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond710) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond710) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond710) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond710) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond710) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond710) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond710) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond710) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond710) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond710) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond710) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond710) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond710) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond710) CFA_SP SP+-2
          CFI (cfiCond710) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond711 Using cfiCommon0
          CFI (cfiCond711) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond711) Conditional ??CrossCallReturnLabel_502
          CFI (cfiCond711) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond711) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond711) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond711) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond711) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond711) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond711) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond711) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond711) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond711) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond711) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond711) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond711) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond711) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond711) CFA_SP SP+-2
          CFI (cfiCond711) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond712 Using cfiCommon0
          CFI (cfiCond712) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond712) Conditional ??CrossCallReturnLabel_503
          CFI (cfiCond712) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond712) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond712) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond712) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond712) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond712) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond712) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond712) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond712) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond712) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond712) CFA_SP SP+-2
          CFI (cfiCond712) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond713 Using cfiCommon0
          CFI (cfiCond713) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond713) Conditional ??CrossCallReturnLabel_504
          CFI (cfiCond713) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond713) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond713) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond713) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond713) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond713) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond713) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond713) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond713) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond713) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond713) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond713) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond713) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond713) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond713) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond713) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond713) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond713) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond713) CFA_SP SP+-2
          CFI (cfiCond713) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond714 Using cfiCommon0
          CFI (cfiCond714) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond714) Conditional ??CrossCallReturnLabel_505
          CFI (cfiCond714) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond714) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond714) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond714) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond714) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond714) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond714) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond714) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond714) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond714) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond714) CFA_SP SP+-2
          CFI (cfiCond714) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond715 Using cfiCommon0
          CFI (cfiCond715) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond715) Conditional ??CrossCallReturnLabel_506
          CFI (cfiCond715) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond715) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond715) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond715) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond715) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond715) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond715) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond715) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond715) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond715) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond715) CFA_SP SP+-2
          CFI (cfiCond715) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond716 Using cfiCommon0
          CFI (cfiCond716) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond716) Conditional ??CrossCallReturnLabel_507
          CFI (cfiCond716) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond716) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond716) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond716) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond716) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond716) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond716) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond716) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond716) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond716) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond716) CFA_SP SP+-2
          CFI (cfiCond716) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond717 Using cfiCommon0
          CFI (cfiCond717) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond717) Conditional ??CrossCallReturnLabel_508
          CFI (cfiCond717) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond717) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond717) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond717) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond717) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond717) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond717) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond717) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond717) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond717) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond717) CFA_SP SP+-2
          CFI (cfiCond717) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond718 Using cfiCommon0
          CFI (cfiCond718) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond718) Conditional ??CrossCallReturnLabel_509
          CFI (cfiCond718) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond718) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond718) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond718) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond718) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond718) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond718) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond718) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond718) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond718) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond718) CFA_SP SP+-2
          CFI (cfiCond718) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker719 Using cfiCommon1
          CFI (cfiPicker719) NoFunction
          CFI (cfiPicker719) Picker
        LCALL   ??Subroutine243_0 & 0xFFFF
??CrossCallReturnLabel_511:
        RET
          CFI EndBlock cfiCond688
          CFI EndBlock cfiCond689
          CFI EndBlock cfiCond690
          CFI EndBlock cfiCond691
          CFI EndBlock cfiCond692
          CFI EndBlock cfiCond693
          CFI EndBlock cfiCond694
          CFI EndBlock cfiCond695
          CFI EndBlock cfiCond696
          CFI EndBlock cfiCond697
          CFI EndBlock cfiCond698
          CFI EndBlock cfiCond699
          CFI EndBlock cfiCond700
          CFI EndBlock cfiCond701
          CFI EndBlock cfiCond702
          CFI EndBlock cfiCond703
          CFI EndBlock cfiCond704
          CFI EndBlock cfiCond705
          CFI EndBlock cfiCond706
          CFI EndBlock cfiCond707
          CFI EndBlock cfiCond708
          CFI EndBlock cfiCond709
          CFI EndBlock cfiCond710
          CFI EndBlock cfiCond711
          CFI EndBlock cfiCond712
          CFI EndBlock cfiCond713
          CFI EndBlock cfiCond714
          CFI EndBlock cfiCond715
          CFI EndBlock cfiCond716
          CFI EndBlock cfiCond717
          CFI EndBlock cfiCond718
          CFI EndBlock cfiPicker719

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine86:
          CFI Block cfiCond720 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_140
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond721 Using cfiCommon0
          CFI (cfiCond721) Function ZDO_RemoveMatchMemory
          CFI (cfiCond721) Conditional ??CrossCallReturnLabel_141
          CFI (cfiCond721) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond721) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond721) CFA_SP SP+-7
          CFI Block cfiPicker722 Using cfiCommon1
          CFI (cfiPicker722) NoFunction
          CFI (cfiPicker722) Picker
        LCALL   ?Subroutine171 & 0xFFFF
??CrossCallReturnLabel_589:
        ADD     A,#0x12
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond720
          CFI EndBlock cfiCond721
          CFI EndBlock cfiPicker722

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine85:
          CFI Block cfiCond723 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_138
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond724 Using cfiCommon0
          CFI (cfiCond724) Function ZDO_RemoveMatchMemory
          CFI (cfiCond724) Conditional ??CrossCallReturnLabel_139
          CFI (cfiCond724) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond724) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond724) CFA_SP SP+-7
          CFI Block cfiPicker725 Using cfiCommon1
          CFI (cfiPicker725) NoFunction
          CFI (cfiPicker725) Picker
        LCALL   ?Subroutine171 & 0xFFFF
??CrossCallReturnLabel_588:
        ADD     A,#0x29
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond723
          CFI EndBlock cfiCond724
          CFI EndBlock cfiPicker725

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine73:
          CFI Block cfiCond726 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_118
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond727 Using cfiCommon0
          CFI (cfiCond727) Function ZDO_RemoveMatchMemory
          CFI (cfiCond727) Conditional ??CrossCallReturnLabel_119
          CFI (cfiCond727) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond727) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond727) CFA_SP SP+-7
          CFI Block cfiPicker728 Using cfiCommon1
          CFI (cfiPicker728) NoFunction
          CFI (cfiPicker728) Picker
        LCALL   ?Subroutine171 & 0xFFFF
??CrossCallReturnLabel_586:
        ADD     A,#0x35
        LCALL   ?Subroutine166 & 0xFFFF
??CrossCallReturnLabel_516:
        RET
          CFI EndBlock cfiCond726
          CFI EndBlock cfiCond727
          CFI EndBlock cfiPicker728

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine72:
          CFI Block cfiCond729 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_116
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond730 Using cfiCommon0
          CFI (cfiCond730) Function ZDO_RemoveMatchMemory
          CFI (cfiCond730) Conditional ??CrossCallReturnLabel_117
          CFI (cfiCond730) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond730) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond730) CFA_SP SP+-7
          CFI Block cfiPicker731 Using cfiCommon1
          CFI (cfiPicker731) NoFunction
          CFI (cfiPicker731) Picker
        LCALL   ?Subroutine171 & 0xFFFF
??CrossCallReturnLabel_585:
        ADD     A,#0x2c
        LCALL   ?Subroutine166 & 0xFFFF
??CrossCallReturnLabel_515:
        RET
          CFI EndBlock cfiCond729
          CFI EndBlock cfiCond730
          CFI EndBlock cfiPicker731

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine71:
          CFI Block cfiCond732 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_114
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond733 Using cfiCommon0
          CFI (cfiCond733) Function ZDO_RemoveMatchMemory
          CFI (cfiCond733) Conditional ??CrossCallReturnLabel_115
          CFI (cfiCond733) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond733) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond733) CFA_SP SP+-7
          CFI Block cfiPicker734 Using cfiCommon1
          CFI (cfiPicker734) NoFunction
          CFI (cfiPicker734) Picker
        LCALL   ?Subroutine171 & 0xFFFF
??CrossCallReturnLabel_584:
        ADD     A,#0x32
        LCALL   ?Subroutine166 & 0xFFFF
??CrossCallReturnLabel_514:
        RET
          CFI EndBlock cfiCond732
          CFI EndBlock cfiCond733
          CFI EndBlock cfiPicker734

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine166:
          CFI Block cfiCond735 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_118
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond736 Using cfiCommon0
          CFI (cfiCond736) Function ZDO_RemoveMatchMemory
          CFI (cfiCond736) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_119
          CFI (cfiCond736) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond736) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond736) CFA_SP SP+-9
          CFI Block cfiCond737 Using cfiCommon0
          CFI (cfiCond737) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond737) Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_116
          CFI (cfiCond737) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond737) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond737) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond737) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond737) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond737) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond737) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond737) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond737) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond737) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond737) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond737) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond737) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond737) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond737) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond737) CFA_SP SP+-4
          CFI (cfiCond737) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond738 Using cfiCommon0
          CFI (cfiCond738) Function ZDO_RemoveMatchMemory
          CFI (cfiCond738) Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_117
          CFI (cfiCond738) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond738) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond738) CFA_SP SP+-9
          CFI Block cfiCond739 Using cfiCommon0
          CFI (cfiCond739) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond739) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_114
          CFI (cfiCond739) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond739) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond739) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond739) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond739) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond739) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond739) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond739) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond739) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond739) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond739) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond739) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond739) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond739) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond739) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond739) CFA_SP SP+-4
          CFI (cfiCond739) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond740 Using cfiCommon0
          CFI (cfiCond740) Function ZDO_RemoveMatchMemory
          CFI (cfiCond740) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_115
          CFI (cfiCond740) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond740) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond740) CFA_SP SP+-9
          CFI Block cfiCond741 Using cfiCommon0
          CFI (cfiCond741) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond741) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_112
          CFI (cfiCond741) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond741) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond741) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond741) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond741) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond741) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond741) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond741) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond741) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond741) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond741) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond741) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond741) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond741) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond741) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond741) CFA_SP SP+-4
          CFI (cfiCond741) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond742 Using cfiCommon0
          CFI (cfiCond742) Function ZDO_RemoveMatchMemory
          CFI (cfiCond742) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_113
          CFI (cfiCond742) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond742) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond742) CFA_SP SP+-9
          CFI Block cfiPicker743 Using cfiCommon1
          CFI (cfiPicker743) NoFunction
          CFI (cfiPicker743) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
          CFI EndBlock cfiCond735
          CFI EndBlock cfiCond736
          CFI EndBlock cfiCond737
          CFI EndBlock cfiCond738
          CFI EndBlock cfiCond739
          CFI EndBlock cfiCond740
          CFI EndBlock cfiCond741
          CFI EndBlock cfiCond742
          CFI EndBlock cfiPicker743
        REQUIRE ??Subroutine242_0
        ; // Fall through to label ??Subroutine242_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine242_0:
          CFI Block cfiCond744 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_159
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond745 Using cfiCommon0
          CFI (cfiCond745) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond745) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_158
          CFI (cfiCond745) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond745) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond745) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond745) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond745) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond745) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond745) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond745) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond745) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond745) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond745) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond745) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond745) CFA_SP SP+-4
          CFI (cfiCond745) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond746 Using cfiCommon0
          CFI (cfiCond746) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond746) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_118
          CFI (cfiCond746) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond746) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond746) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond746) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond746) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond746) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond746) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond746) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond746) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond746) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond746) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond746) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond746) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond746) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond746) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond746) CFA_SP SP+-4
          CFI (cfiCond746) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond747 Using cfiCommon0
          CFI (cfiCond747) Function ZDO_RemoveMatchMemory
          CFI (cfiCond747) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_119
          CFI (cfiCond747) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond747) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond747) CFA_SP SP+-9
          CFI Block cfiCond748 Using cfiCommon0
          CFI (cfiCond748) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond748) Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_116
          CFI (cfiCond748) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond748) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond748) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond748) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond748) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond748) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond748) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond748) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond748) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond748) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond748) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond748) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond748) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond748) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond748) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond748) CFA_SP SP+-4
          CFI (cfiCond748) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond749 Using cfiCommon0
          CFI (cfiCond749) Function ZDO_RemoveMatchMemory
          CFI (cfiCond749) Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_117
          CFI (cfiCond749) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond749) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond749) CFA_SP SP+-9
          CFI Block cfiCond750 Using cfiCommon0
          CFI (cfiCond750) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond750) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_114
          CFI (cfiCond750) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond750) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond750) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond750) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond750) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond750) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond750) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond750) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond750) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond750) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond750) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond750) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond750) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond750) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond750) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond750) CFA_SP SP+-4
          CFI (cfiCond750) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond751 Using cfiCommon0
          CFI (cfiCond751) Function ZDO_RemoveMatchMemory
          CFI (cfiCond751) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_115
          CFI (cfiCond751) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond751) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond751) CFA_SP SP+-9
          CFI Block cfiCond752 Using cfiCommon0
          CFI (cfiCond752) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond752) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_112
          CFI (cfiCond752) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond752) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond752) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond752) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond752) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond752) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond752) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond752) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond752) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond752) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond752) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond752) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond752) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond752) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond752) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond752) CFA_SP SP+-4
          CFI (cfiCond752) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond753 Using cfiCommon0
          CFI (cfiCond753) Function ZDO_RemoveMatchMemory
          CFI (cfiCond753) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_113
          CFI (cfiCond753) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond753) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond753) CFA_SP SP+-9
          CFI Block cfiPicker754 Using cfiCommon1
          CFI (cfiPicker754) NoFunction
          CFI (cfiPicker754) Picker
        MOV     DPH,A
          CFI EndBlock cfiCond744
          CFI EndBlock cfiCond745
          CFI EndBlock cfiCond746
          CFI EndBlock cfiCond747
          CFI EndBlock cfiCond748
          CFI EndBlock cfiCond749
          CFI EndBlock cfiCond750
          CFI EndBlock cfiCond751
          CFI EndBlock cfiCond752
          CFI EndBlock cfiCond753
          CFI EndBlock cfiPicker754
        REQUIRE ??Subroutine243_0
        ; // Fall through to label ??Subroutine243_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine243_0:
          CFI Block cfiCond755 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_104
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond756 Using cfiCommon0
          CFI (cfiCond756) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond756) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_105
          CFI (cfiCond756) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond756) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond756) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond756) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond756) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond756) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond756) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond756) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond756) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond756) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond756) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond756) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond756) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond756) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond756) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond756) CFA_SP SP+-4
          CFI (cfiCond756) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond757 Using cfiCommon0
          CFI (cfiCond757) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond757) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_507
          CFI (cfiCond757) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond757) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond757) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond757) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond757) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond757) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond757) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond757) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond757) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond757) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond757) CFA_SP SP+-4
          CFI (cfiCond757) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond758 Using cfiCommon0
          CFI (cfiCond758) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond758) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_508
          CFI (cfiCond758) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond758) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond758) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond758) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond758) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond758) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond758) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond758) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond758) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond758) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond758) CFA_SP SP+-4
          CFI (cfiCond758) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond759 Using cfiCommon0
          CFI (cfiCond759) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond759) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_509
          CFI (cfiCond759) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond759) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond759) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond759) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond759) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond759) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond759) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond759) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond759) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond759) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond759) CFA_SP SP+-4
          CFI (cfiCond759) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond760 Using cfiCommon0
          CFI (cfiCond760) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond760) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_503
          CFI (cfiCond760) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond760) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond760) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond760) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond760) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond760) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond760) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond760) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond760) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond760) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond760) CFA_SP SP+-4
          CFI (cfiCond760) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond761 Using cfiCommon0
          CFI (cfiCond761) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond761) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_504
          CFI (cfiCond761) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond761) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond761) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond761) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond761) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond761) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond761) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond761) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond761) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond761) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond761) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond761) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond761) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond761) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond761) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond761) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond761) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond761) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond761) CFA_SP SP+-4
          CFI (cfiCond761) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond762 Using cfiCommon0
          CFI (cfiCond762) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond762) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_505
          CFI (cfiCond762) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond762) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond762) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond762) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond762) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond762) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond762) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond762) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond762) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond762) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond762) CFA_SP SP+-4
          CFI (cfiCond762) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond763 Using cfiCommon0
          CFI (cfiCond763) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond763) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_506
          CFI (cfiCond763) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond763) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond763) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond763) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond763) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond763) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond763) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond763) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond763) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond763) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond763) CFA_SP SP+-4
          CFI (cfiCond763) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond764 Using cfiCommon0
          CFI (cfiCond764) Function ZDO_StartDevice
          CFI (cfiCond764) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_479
          CFI (cfiCond764) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond764) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond764) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond764) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond764) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond764) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond764) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond764) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond764) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond764) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond764) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond764) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond764) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond764) CFA_SP SP+-4
          CFI (cfiCond764) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond765 Using cfiCommon0
          CFI (cfiCond765) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond765) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_480
          CFI (cfiCond765) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond765) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond765) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond765) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond765) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond765) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond765) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond765) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond765) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond765) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond765) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond765) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond765) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond765) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond765) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond765) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond765) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond765) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond765) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond765) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond765) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond765) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond765) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond765) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond765) CFA_SP SP+-4
          CFI (cfiCond765) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond766 Using cfiCommon0
          CFI (cfiCond766) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond766) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_481
          CFI (cfiCond766) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond766) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond766) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond766) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond766) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond766) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond766) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond766) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond766) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond766) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond766) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond766) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond766) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond766) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond766) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond766) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond766) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond766) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond766) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond766) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond766) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond766) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond766) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond766) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond766) CFA_SP SP+-4
          CFI (cfiCond766) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond767 Using cfiCommon0
          CFI (cfiCond767) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond767) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_482
          CFI (cfiCond767) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond767) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond767) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond767) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond767) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond767) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond767) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond767) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond767) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond767) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond767) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond767) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond767) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond767) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond767) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond767) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond767) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond767) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond767) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond767) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond767) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond767) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond767) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond767) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond767) CFA_SP SP+-4
          CFI (cfiCond767) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond768 Using cfiCommon0
          CFI (cfiCond768) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond768) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_483
          CFI (cfiCond768) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond768) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond768) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond768) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond768) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond768) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond768) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond768) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond768) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond768) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond768) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond768) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond768) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond768) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond768) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond768) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond768) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond768) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond768) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond768) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond768) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond768) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond768) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond768) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond768) CFA_SP SP+-4
          CFI (cfiCond768) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond769 Using cfiCommon0
          CFI (cfiCond769) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond769) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_484
          CFI (cfiCond769) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond769) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond769) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond769) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond769) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond769) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond769) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond769) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond769) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond769) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond769) CFA_SP SP+-4
          CFI (cfiCond769) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond770 Using cfiCommon0
          CFI (cfiCond770) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond770) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_485
          CFI (cfiCond770) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond770) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond770) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond770) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond770) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond770) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond770) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond770) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond770) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond770) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond770) CFA_SP SP+-4
          CFI (cfiCond770) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond771 Using cfiCommon0
          CFI (cfiCond771) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond771) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_486
          CFI (cfiCond771) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond771) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond771) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond771) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond771) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond771) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond771) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond771) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond771) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond771) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond771) CFA_SP SP+-4
          CFI (cfiCond771) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond772 Using cfiCommon0
          CFI (cfiCond772) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond772) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_487
          CFI (cfiCond772) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond772) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond772) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond772) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond772) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond772) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond772) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond772) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond772) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond772) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond772) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond772) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond772) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond772) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond772) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond772) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond772) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond772) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond772) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond772) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond772) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond772) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond772) CFA_SP SP+-4
          CFI (cfiCond772) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond773 Using cfiCommon0
          CFI (cfiCond773) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond773) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_488
          CFI (cfiCond773) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond773) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond773) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond773) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond773) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond773) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond773) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond773) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond773) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond773) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond773) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond773) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond773) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond773) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond773) CFA_SP SP+-4
          CFI (cfiCond773) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond774 Using cfiCommon0
          CFI (cfiCond774) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond774) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_489
          CFI (cfiCond774) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond774) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond774) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond774) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond774) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond774) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond774) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond774) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond774) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond774) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond774) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond774) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond774) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond774) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond774) CFA_SP SP+-4
          CFI (cfiCond774) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond775 Using cfiCommon0
          CFI (cfiCond775) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond775) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_490
          CFI (cfiCond775) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond775) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond775) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond775) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond775) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond775) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond775) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond775) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond775) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond775) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond775) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond775) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond775) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond775) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond775) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond775) CFA_SP SP+-4
          CFI (cfiCond775) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond776 Using cfiCommon0
          CFI (cfiCond776) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond776) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_491
          CFI (cfiCond776) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond776) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond776) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond776) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond776) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond776) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond776) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond776) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond776) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond776) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond776) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond776) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond776) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond776) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond776) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond776) CFA_SP SP+-4
          CFI (cfiCond776) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond777 Using cfiCommon0
          CFI (cfiCond777) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond777) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_492
          CFI (cfiCond777) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond777) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond777) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond777) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond777) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond777) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond777) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond777) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond777) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond777) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond777) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond777) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond777) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond777) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond777) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond777) CFA_SP SP+-4
          CFI (cfiCond777) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond778 Using cfiCommon0
          CFI (cfiCond778) Function ZDO_RemoveMatchMemory
          CFI (cfiCond778) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_493
          CFI (cfiCond778) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond778) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond778) CFA_SP SP+-9
          CFI Block cfiCond779 Using cfiCommon0
          CFI (cfiCond779) Function ZDO_RemoveMatchMemory
          CFI (cfiCond779) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_494
          CFI (cfiCond779) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond779) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond779) CFA_SP SP+-9
          CFI Block cfiCond780 Using cfiCommon0
          CFI (cfiCond780) Function ZDO_RemoveMatchMemory
          CFI (cfiCond780) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_495
          CFI (cfiCond780) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond780) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond780) CFA_SP SP+-9
          CFI Block cfiCond781 Using cfiCommon0
          CFI (cfiCond781) Function ZDO_CopyMatchInfo
          CFI (cfiCond781) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_496
          CFI (cfiCond781) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond781) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond781) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond781) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond781) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond781) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond781) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond781) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond781) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond781) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond781) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond781) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond781) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond781) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond781) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond781) CFA_SP SP+-4
          CFI (cfiCond781) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond782 Using cfiCommon0
          CFI (cfiCond782) Function ZDO_CopyMatchInfo
          CFI (cfiCond782) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_497
          CFI (cfiCond782) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond782) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond782) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond782) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond782) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond782) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond782) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond782) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond782) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond782) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond782) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond782) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond782) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond782) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond782) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond782) CFA_SP SP+-4
          CFI (cfiCond782) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond783 Using cfiCommon0
          CFI (cfiCond783) Function ZDO_CopyMatchInfo
          CFI (cfiCond783) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_498
          CFI (cfiCond783) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond783) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond783) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond783) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond783) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond783) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond783) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond783) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond783) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond783) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond783) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond783) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond783) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond783) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond783) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond783) CFA_SP SP+-4
          CFI (cfiCond783) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond784 Using cfiCommon0
          CFI (cfiCond784) Function ZDO_CopyMatchInfo
          CFI (cfiCond784) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_499
          CFI (cfiCond784) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond784) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond784) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond784) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond784) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond784) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond784) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond784) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond784) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond784) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond784) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond784) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond784) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond784) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond784) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond784) CFA_SP SP+-4
          CFI (cfiCond784) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond785 Using cfiCommon0
          CFI (cfiCond785) Function ZDMatchSendState
          CFI (cfiCond785) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_500
          CFI (cfiCond785) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond785) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond785) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond785) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond785) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond785) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond785) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond785) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond785) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond785) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond785) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond785) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond785) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond785) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond785) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond785) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond785) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond785) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond785) CFA_SP SP+-4
          CFI (cfiCond785) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond786 Using cfiCommon0
          CFI (cfiCond786) Function ZDMatchSendState
          CFI (cfiCond786) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_501
          CFI (cfiCond786) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond786) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond786) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond786) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond786) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond786) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond786) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond786) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond786) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond786) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond786) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond786) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond786) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond786) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond786) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond786) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond786) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond786) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond786) CFA_SP SP+-4
          CFI (cfiCond786) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond787 Using cfiCommon0
          CFI (cfiCond787) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond787) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_502
          CFI (cfiCond787) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond787) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond787) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond787) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond787) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond787) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond787) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond787) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond787) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond787) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond787) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond787) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond787) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond787) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond787) CFA_SP SP+-4
          CFI (cfiCond787) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond788 Using cfiCommon0
          CFI (cfiCond788) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond788) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_159
          CFI (cfiCond788) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond788) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond788) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond788) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond788) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond788) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond788) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond788) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond788) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond788) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond788) CFA_SP SP+-4
          CFI (cfiCond788) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond789 Using cfiCommon0
          CFI (cfiCond789) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond789) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_158
          CFI (cfiCond789) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond789) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond789) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond789) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond789) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond789) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond789) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond789) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond789) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond789) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond789) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond789) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond789) CFA_SP SP+-4
          CFI (cfiCond789) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond790 Using cfiCommon0
          CFI (cfiCond790) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond790) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_118
          CFI (cfiCond790) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond790) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond790) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond790) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond790) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond790) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond790) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond790) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond790) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond790) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond790) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond790) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond790) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond790) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond790) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond790) CFA_SP SP+-4
          CFI (cfiCond790) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond791 Using cfiCommon0
          CFI (cfiCond791) Function ZDO_RemoveMatchMemory
          CFI (cfiCond791) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_119
          CFI (cfiCond791) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond791) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond791) CFA_SP SP+-9
          CFI Block cfiCond792 Using cfiCommon0
          CFI (cfiCond792) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond792) Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_116
          CFI (cfiCond792) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond792) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond792) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond792) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond792) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond792) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond792) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond792) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond792) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond792) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond792) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond792) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond792) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond792) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond792) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond792) CFA_SP SP+-4
          CFI (cfiCond792) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond793 Using cfiCommon0
          CFI (cfiCond793) Function ZDO_RemoveMatchMemory
          CFI (cfiCond793) Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_117
          CFI (cfiCond793) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond793) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond793) CFA_SP SP+-9
          CFI Block cfiCond794 Using cfiCommon0
          CFI (cfiCond794) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond794) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_114
          CFI (cfiCond794) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond794) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond794) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond794) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond794) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond794) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond794) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond794) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond794) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond794) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond794) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond794) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond794) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond794) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond794) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond794) CFA_SP SP+-4
          CFI (cfiCond794) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond795 Using cfiCommon0
          CFI (cfiCond795) Function ZDO_RemoveMatchMemory
          CFI (cfiCond795) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_115
          CFI (cfiCond795) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond795) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond795) CFA_SP SP+-9
          CFI Block cfiCond796 Using cfiCommon0
          CFI (cfiCond796) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond796) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_112
          CFI (cfiCond796) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond796) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond796) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond796) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond796) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond796) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond796) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond796) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond796) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond796) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond796) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond796) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond796) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond796) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond796) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond796) CFA_SP SP+-4
          CFI (cfiCond796) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond797 Using cfiCommon0
          CFI (cfiCond797) Function ZDO_RemoveMatchMemory
          CFI (cfiCond797) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_113
          CFI (cfiCond797) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond797) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond797) CFA_SP SP+-9
          CFI Block cfiPicker798 Using cfiCommon1
          CFI (cfiPicker798) NoFunction
          CFI (cfiPicker798) Picker
        LCALL   ??Subroutine257_0 & 0xFFFF
??CrossCallReturnLabel_651:
        MOV     R3,A
        RET
          CFI EndBlock cfiCond755
          CFI EndBlock cfiCond756
          CFI EndBlock cfiCond757
          CFI EndBlock cfiCond758
          CFI EndBlock cfiCond759
          CFI EndBlock cfiCond760
          CFI EndBlock cfiCond761
          CFI EndBlock cfiCond762
          CFI EndBlock cfiCond763
          CFI EndBlock cfiCond764
          CFI EndBlock cfiCond765
          CFI EndBlock cfiCond766
          CFI EndBlock cfiCond767
          CFI EndBlock cfiCond768
          CFI EndBlock cfiCond769
          CFI EndBlock cfiCond770
          CFI EndBlock cfiCond771
          CFI EndBlock cfiCond772
          CFI EndBlock cfiCond773
          CFI EndBlock cfiCond774
          CFI EndBlock cfiCond775
          CFI EndBlock cfiCond776
          CFI EndBlock cfiCond777
          CFI EndBlock cfiCond778
          CFI EndBlock cfiCond779
          CFI EndBlock cfiCond780
          CFI EndBlock cfiCond781
          CFI EndBlock cfiCond782
          CFI EndBlock cfiCond783
          CFI EndBlock cfiCond784
          CFI EndBlock cfiCond785
          CFI EndBlock cfiCond786
          CFI EndBlock cfiCond787
          CFI EndBlock cfiCond788
          CFI EndBlock cfiCond789
          CFI EndBlock cfiCond790
          CFI EndBlock cfiCond791
          CFI EndBlock cfiCond792
          CFI EndBlock cfiCond793
          CFI EndBlock cfiCond794
          CFI EndBlock cfiCond795
          CFI EndBlock cfiCond796
          CFI EndBlock cfiCond797
          CFI EndBlock cfiPicker798

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine70:
          CFI Block cfiCond799 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_112
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond800 Using cfiCommon0
          CFI (cfiCond800) Function ZDO_RemoveMatchMemory
          CFI (cfiCond800) Conditional ??CrossCallReturnLabel_113
          CFI (cfiCond800) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond800) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond800) CFA_SP SP+-7
          CFI Block cfiPicker801 Using cfiCommon1
          CFI (cfiPicker801) NoFunction
          CFI (cfiPicker801) Picker
        LCALL   ?Subroutine171 & 0xFFFF
??CrossCallReturnLabel_583:
        ADD     A,#0x15
        LCALL   ?Subroutine166 & 0xFFFF
??CrossCallReturnLabel_513:
        RET
          CFI EndBlock cfiCond799
          CFI EndBlock cfiCond800
          CFI EndBlock cfiPicker801
// 2343 
// 2344 /*********************************************************************
// 2345  * @fn      ZDO_CopyMatchInfo()
// 2346  *
// 2347  * @brief   Called to copy memory used for the end device bind.
// 2348  *
// 2349  * @param  srcReq - source information
// 2350  * @param  dstReq - destination location
// 2351  *
// 2352  * @return  TRUE if copy was successful.
// 2353  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2354 static uint8 ZDO_CopyMatchInfo( ZDEndDeviceBind_t *destReq, ZDEndDeviceBind_t *srcReq )
ZDO_CopyMatchInfo:
          CFI Block cfiBlock802 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
        CODE
// 2355 {
        FUNCALL ZDO_CopyMatchInfo, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0,R4
        MOV     ?V1,R5
// 2356   uint8 allOK = TRUE;
        MOV     ?V2,#0x1
// 2357 
// 2358   // Copy bind information into the match info structure
// 2359   osal_memcpy( (uint8 *)destReq, srcReq, sizeof ( ZDEndDeviceBind_t ) );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V4,R4
        MOV     ?V5,R5
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     R4,#0x17
        MOV     R5,#0x0
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
// 2360 
// 2361   // Initialize the destination cluster pointers
// 2362   destReq->inClusters = NULL;
        LCALL   ?Subroutine18 & 0xFFFF
// 2363   destReq->outClusters = NULL;
// 2364 
// 2365   // Copy input cluster IDs
// 2366   if ( srcReq->numInClusters )
??CrossCallReturnLabel_16:
        MOV     A,?V0
        ADD     A,#0x11
        LCALL   ??Subroutine259_0 & 0xFFFF
??CrossCallReturnLabel_622:
        MOVX    A,@DPTR
        JZ      ??ZDO_CopyMatchInfo_0
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ??Subroutine266_0 & 0xFFFF
// 2367   {
// 2368     destReq->inClusters = osal_mem_alloc( (short)(srcReq->numInClusters * sizeof ( uint16 )) );
??CrossCallReturnLabel_670:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     R0,?V4
        MOV     R1,?V5
        LCALL   ?Subroutine21 & 0xFFFF
// 2369     if ( destReq->inClusters )
??CrossCallReturnLabel_517:
        JZ      ??ZDO_CopyMatchInfo_1
// 2370     {
// 2371       // Copy the clusters
// 2372       osal_memcpy( (uint8*)(destReq->inClusters), (uint8 *)(srcReq->inClusters),
// 2373                       (srcReq->numInClusters * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,?V0
        ADD     A,#0x12
        LCALL   ?Subroutine107 & 0xFFFF
// 2374     }
??CrossCallReturnLabel_166:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     A,?V0
        ADD     A,#0x11
        LCALL   ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_178:
        LCALL   ??Subroutine216_0 & 0xFFFF
??CrossCallReturnLabel_351:
        LCALL   ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_496:
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        SJMP    ??ZDO_CopyMatchInfo_0
// 2375     else
// 2376     {
// 2377       allOK = FALSE;
??ZDO_CopyMatchInfo_1:
        MOV     ?V2,#0x0
// 2378     }
// 2379   }
// 2380 
// 2381   // Copy output cluster IDs
// 2382   if ( srcReq->numOutClusters )
??ZDO_CopyMatchInfo_0:
        LCALL   ?Subroutine142 & 0xFFFF
??CrossCallReturnLabel_227:
        MOVX    A,@DPTR
        JZ      ??ZDO_CopyMatchInfo_2
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ??Subroutine266_0 & 0xFFFF
// 2383   {
// 2384     destReq->outClusters = osal_mem_alloc( (short)(srcReq->numOutClusters * sizeof ( uint16 )) );
??CrossCallReturnLabel_671:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     R0,?V4
        MOV     R1,?V5
        MOV     A,R6
        ADD     A,#0x15
        LCALL   ??Subroutine244_0 & 0xFFFF
// 2385     if ( destReq->outClusters )
??CrossCallReturnLabel_518:
        JZ      ??ZDO_CopyMatchInfo_3
// 2386     {
// 2387       // Copy the clusters
// 2388       osal_memcpy( (uint8 *)(destReq->outClusters), (uint8 *)(srcReq->outClusters),
// 2389                       (srcReq->numOutClusters * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,?V0
        ADD     A,#0x15
        LCALL   ?Subroutine107 & 0xFFFF
// 2390     }
??CrossCallReturnLabel_167:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     A,?V0
        ADD     A,#0x14
        LCALL   ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_179:
        LCALL   ?Subroutine145 & 0xFFFF
??CrossCallReturnLabel_233:
        LCALL   ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_497:
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
// 2391     else
// 2392     {
// 2393       allOK = FALSE;
// 2394     }
// 2395   }
// 2396 
// 2397   if ( allOK == FALSE )
??ZDO_CopyMatchInfo_2:
        MOV     A,?V2
        MOV     C,0xE0 /* A   */.0
        JC      ??ZDO_CopyMatchInfo_4
// 2398   {
// 2399     if ( destReq->inClusters != NULL )
??ZDO_CopyMatchInfo_5:
        MOV     A,R6
        ADD     A,#0x12
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        LCALL   ??Subroutine233_0 & 0xFFFF
??CrossCallReturnLabel_444:
        JZ      ??ZDO_CopyMatchInfo_6
// 2400     {
// 2401       osal_mem_free( destReq->inClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL   ?Subroutine147 & 0xFFFF
// 2402     }
??CrossCallReturnLabel_353:
        LCALL   ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_498:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2403     if ( destReq->outClusters != NULL )
??ZDO_CopyMatchInfo_6:
        MOV     A,R6
        ADD     A,#0x15
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        LCALL   ??Subroutine233_0 & 0xFFFF
??CrossCallReturnLabel_445:
        JZ      ??ZDO_CopyMatchInfo_4
// 2404     {
// 2405       osal_mem_free( destReq->outClusters );
        ; Setup parameters for call to function osal_mem_free
        MOV     A,R6
        LCALL   ?Subroutine145 & 0xFFFF
// 2406     }
// 2407   }
??CrossCallReturnLabel_234:
        LCALL   ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_499:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2408 
// 2409   return ( allOK );
??ZDO_CopyMatchInfo_4:
        MOV     R1,?V2
        LJMP    ??Subroutine213_0 & 0xFFFF
??ZDO_CopyMatchInfo_3:
        MOV     ?V2,#0x0
        SJMP    ??ZDO_CopyMatchInfo_5
// 2410 }
          CFI EndBlock cfiBlock802

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine145:
          CFI Block cfiCond803 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_233
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond804 Using cfiCommon0
          CFI (cfiCond804) Function ZDO_CopyMatchInfo
          CFI (cfiCond804) Conditional ??CrossCallReturnLabel_234
          CFI (cfiCond804) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond804) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond804) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond804) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond804) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond804) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond804) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond804) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond804) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond804) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond804) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond804) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond804) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond804) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond804) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond804) CFA_SP SP+-2
          CFI (cfiCond804) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker805 Using cfiCommon1
          CFI (cfiPicker805) NoFunction
          CFI (cfiPicker805) Picker
        LCALL   ?Subroutine202 & 0xFFFF
??CrossCallReturnLabel_322:
        RET
          CFI EndBlock cfiCond803
          CFI EndBlock cfiCond804
          CFI EndBlock cfiPicker805

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine114:
          CFI Block cfiCond806 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_178
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond807 Using cfiCommon0
          CFI (cfiCond807) Function ZDO_CopyMatchInfo
          CFI (cfiCond807) Conditional ??CrossCallReturnLabel_179
          CFI (cfiCond807) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond807) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond807) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond807) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond807) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond807) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond807) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond807) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond807) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond807) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond807) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond807) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond807) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond807) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond807) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond807) CFA_SP SP+-2
          CFI (cfiCond807) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker808 Using cfiCommon1
          CFI (cfiPicker808) NoFunction
          CFI (cfiPicker808) Picker
        LCALL   ?Subroutine190 & 0xFFFF
??CrossCallReturnLabel_384:
        ADD     A,0xE0 /* A   */
        MOV     R4,A
        CLR     A
        RLC     A
        MOV     R5,A
        MOV     A,R6
        RET
          CFI EndBlock cfiCond806
          CFI EndBlock cfiCond807
          CFI EndBlock cfiPicker808

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine107:
          CFI Block cfiCond809 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_166
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond810 Using cfiCommon0
          CFI (cfiCond810) Function ZDO_CopyMatchInfo
          CFI (cfiCond810) Conditional ??CrossCallReturnLabel_167
          CFI (cfiCond810) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond810) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond810) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond810) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond810) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond810) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond810) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond810) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond810) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond810) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond810) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond810) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond810) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond810) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond810) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond810) CFA_SP SP+-2
          CFI (cfiCond810) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker811 Using cfiCommon1
          CFI (cfiPicker811) NoFunction
          CFI (cfiPicker811) Picker
        LCALL   ?Subroutine190 & 0xFFFF
??CrossCallReturnLabel_383:
        MOV     ?V4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V5,A
        MOV     R0,#?V4
        RET
          CFI EndBlock cfiCond809
          CFI EndBlock cfiCond810
          CFI EndBlock cfiPicker811

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine21:
          CFI Block cfiCond812 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_517
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond813 Using cfiCommon0
          CFI (cfiCond813) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond813) Conditional ??CrossCallReturnLabel_521
          CFI (cfiCond813) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond813) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond813) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond813) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond813) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond813) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond813) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond813) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond813) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond813) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond813) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond813) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond813) CFA_SP SP+-2
          CFI (cfiCond813) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker814 Using cfiCommon1
          CFI (cfiPicker814) NoFunction
          CFI (cfiPicker814) Picker
        MOV     A,R6
        ADD     A,#0x12
          CFI EndBlock cfiCond812
          CFI EndBlock cfiCond813
          CFI EndBlock cfiPicker814
        REQUIRE ??Subroutine244_0
        ; // Fall through to label ??Subroutine244_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine244_0:
          CFI Block cfiCond815 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_518
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond816 Using cfiCommon0
          CFI (cfiCond816) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond816) Conditional ??CrossCallReturnLabel_520
          CFI (cfiCond816) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond816) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond816) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond816) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond816) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond816) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond816) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond816) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond816) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond816) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond816) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond816) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond816) CFA_SP SP+-2
          CFI (cfiCond816) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond817 Using cfiCommon0
          CFI (cfiCond817) Function ZDO_CopyMatchInfo
          CFI (cfiCond817) Conditional ??CrossCallReturnLabel_517
          CFI (cfiCond817) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond817) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond817) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond817) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond817) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond817) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond817) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond817) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond817) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond817) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond817) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond817) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond817) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond817) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond817) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond817) CFA_SP SP+-2
          CFI (cfiCond817) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond818 Using cfiCommon0
          CFI (cfiCond818) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond818) Conditional ??CrossCallReturnLabel_521
          CFI (cfiCond818) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond818) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond818) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond818) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond818) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond818) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond818) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond818) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond818) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond818) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond818) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond818) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond818) CFA_SP SP+-2
          CFI (cfiCond818) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker819 Using cfiCommon1
          CFI (cfiPicker819) NoFunction
          CFI (cfiPicker819) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
          CFI EndBlock cfiCond815
          CFI EndBlock cfiCond816
          CFI EndBlock cfiCond817
          CFI EndBlock cfiCond818
          CFI EndBlock cfiPicker819
        REQUIRE ??Subroutine245_0
        ; // Fall through to label ??Subroutine245_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine245_0:
          CFI Block cfiCond820 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_519
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond821 Using cfiCommon0
          CFI (cfiCond821) Function ZDO_CopyMatchInfo
          CFI (cfiCond821) Conditional ??CrossCallReturnLabel_518
          CFI (cfiCond821) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond821) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond821) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond821) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond821) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond821) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond821) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond821) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond821) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond821) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond821) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond821) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond821) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond821) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond821) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond821) CFA_SP SP+-2
          CFI (cfiCond821) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond822 Using cfiCommon0
          CFI (cfiCond822) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond822) Conditional ??CrossCallReturnLabel_520
          CFI (cfiCond822) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond822) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond822) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond822) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond822) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond822) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond822) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond822) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond822) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond822) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond822) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond822) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond822) CFA_SP SP+-2
          CFI (cfiCond822) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond823 Using cfiCommon0
          CFI (cfiCond823) Function ZDO_CopyMatchInfo
          CFI (cfiCond823) Conditional ??CrossCallReturnLabel_517
          CFI (cfiCond823) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond823) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond823) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond823) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond823) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond823) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond823) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond823) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond823) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond823) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond823) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond823) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond823) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond823) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond823) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond823) CFA_SP SP+-2
          CFI (cfiCond823) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond824 Using cfiCommon0
          CFI (cfiCond824) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond824) Conditional ??CrossCallReturnLabel_521
          CFI (cfiCond824) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond824) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond824) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond824) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond824) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond824) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond824) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond824) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond824) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond824) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond824) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond824) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond824) CFA_SP SP+-2
          CFI (cfiCond824) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker825 Using cfiCommon1
          CFI (cfiPicker825) NoFunction
          CFI (cfiPicker825) Picker
        LCALL   ?Subroutine161 & 0xFFFF
??CrossCallReturnLabel_527:
        MOV     A,R0
        ORL     A,R1
        RET
          CFI EndBlock cfiCond820
          CFI EndBlock cfiCond821
          CFI EndBlock cfiCond822
          CFI EndBlock cfiCond823
          CFI EndBlock cfiCond824
          CFI EndBlock cfiPicker825
// 2411 
// 2412 /*********************************************************************
// 2413  * @fn      ZDMatchSendState()
// 2414  *
// 2415  * @brief   State machine for the End device match message algorithm.
// 2416  *
// 2417  * @param  reason - state of algoritm
// 2418  * @param  status - initial message status
// 2419  * @param  TransSeq - next transaction sequence number
// 2420  *
// 2421  * @return  FALSE if error and we are not currently matching, TRUE
// 2422  *          if success.
// 2423  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2424 uint8 ZDMatchSendState( uint8 reason, uint8 status, uint8 TransSeq )
ZDMatchSendState:
          CFI Block cfiBlock826 Using cfiCommon0
          CFI Function ZDMatchSendState
        CODE
// 2425 {
        FUNCALL ZDMatchSendState, APS_SetEndDeviceBindTimeout
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDP_BindUnbindReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 45, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 45, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, APS_SetEndDeviceBindTimeout
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDO_RemoveMatchMemory
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 19
        MOV     A,#-0x13
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     ?V3,R1
        MOV     ?V6,R2
        MOV     ?V7,R3
// 2426   uint8 *dstIEEEAddr = NULL;
        MOV     ?V4,#0x0
        MOV     ?V5,#0x0
// 2427   uint8 dstEP = 0xFF;
        MOV     ?V2,#-0x1
// 2428   zAddrType_t dstAddr;
// 2429   zAddrType_t destinationAddr;
// 2430   uint16 msgType;
// 2431   uint16 clusterID = 0xFFFF;
        MOV     ?V8,#-0x1
        MOV     ?V9,#-0x1
// 2432   ZDEndDeviceBind_t *ed = NULL;
        MOV     ?V0,#0x0
        MOV     ?V1,#0x0
// 2433   uint8 rspStatus = ZDP_SUCCESS;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        LCALL   ?Subroutine38 & 0xFFFF
// 2434 
// 2435   if ( matchED == NULL )
??CrossCallReturnLabel_54:
        JZ      ??ZDMatchSendState_0
// 2436   {
// 2437     return ( FALSE );
// 2438   }
// 2439 
// 2440   // Check sequence number
// 2441   if ( reason == ZDMATCH_REASON_BIND_RSP || reason == ZDMATCH_REASON_UNBIND_RSP )
        MOV     A,#0x3
        XRL     A,?V3
        JZ      ??ZDMatchSendState_1
        MOV     A,#0x2
        XRL     A,?V3
        JNZ     ??ZDMatchSendState_2
// 2442   {
// 2443     if ( TransSeq != matchED->transSeq )
??ZDMatchSendState_1:
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x30
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_243:
        XRL     A,?V7
        JZ      ??ZDMatchSendState_2
// 2444     {
// 2445       return( FALSE ); // ignore the message
??ZDMatchSendState_0:
        MOV     R1,#0x0
        LJMP    ??ZDMatchSendState_3 & 0xFFFF
// 2446     }
// 2447   }
// 2448 
// 2449   // turn off timer
// 2450   APS_SetEndDeviceBindTimeout( 0, ZDO_EndDeviceBindMatchTimeoutCB );
??ZDMatchSendState_2:
        ; Setup parameters for call to function APS_SetEndDeviceBindTimeout
        MOV     R4,#`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` & 0xff
        MOV     R5,#(`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` >> 8) & 0xff
        MOV     R2,#0x0
        MOV     R3,#0x0
        LCALL   `??APS_SetEndDeviceBindTimeout::?relay`; Banked call to: APS_SetEndDeviceBindTimeout
// 2451 
// 2452   if ( reason == ZDMATCH_REASON_TIMEOUT )
        MOV     A,#0x1
        XRL     A,?V3
        JNZ     ??ZDMatchSendState_4
// 2453   {
// 2454     rspStatus = ZDP_TIMEOUT;    // The process will stop
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7b
        SJMP    ??ZDMatchSendState_5
// 2455   }
// 2456 
// 2457   if ( reason == ZDMATCH_REASON_START || reason == ZDMATCH_REASON_BIND_RSP )
??ZDMatchSendState_4:
        MOV     A,?V3
        JZ      ??ZDMatchSendState_6
        MOV     A,#0x3
        XRL     A,?V3
        JNZ     ??ZDMatchSendState_7
// 2458   {
// 2459     matchED->sending = ZDMATCH_SENDING_UNBIND;
??ZDMatchSendState_6:
        MOV     DPTR,#matchED
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_134:
        MOVX    @DPTR,A
// 2460 
// 2461     if ( reason == ZDMATCH_REASON_BIND_RSP && status != ZDP_SUCCESS )
        MOV     A,#0x3
        XRL     A,?V3
        JNZ     ??ZDMatchSendState_8
        MOV     A,?V6
        JZ      ??ZDMatchSendState_9
// 2462     {
// 2463       rspStatus = status;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        SJMP    ??ZDMatchSendState_5
// 2464     }
// 2465   }
// 2466   else if ( reason == ZDMATCH_REASON_UNBIND_RSP )
??ZDMatchSendState_7:
        MOV     A,#0x2
        XRL     A,?V3
        JNZ     ??ZDMatchSendState_9
// 2467   {
// 2468     if ( status == ZDP_SUCCESS )
        MOV     A,?V6
        MOV     DPTR,#matchED
        JNZ     ??ZDMatchSendState_10
// 2469     {
// 2470       matchED->sending = ZDMATCH_SENDING_UNBIND;
        LCALL   ?Subroutine82 & 0xFFFF
// 2471     }
??CrossCallReturnLabel_135:
        SJMP    ??ZDMatchSendState_5
// 2472     else
// 2473     {
// 2474       matchED->sending = ZDMATCH_SENDING_BIND;
??ZDMatchSendState_10:
        LCALL   ??Subroutine252_0 & 0xFFFF
// 2475     }
// 2476   }
??CrossCallReturnLabel_567:
        LCALL   ?Subroutine205 & 0xFFFF
??CrossCallReturnLabel_326:
        MOV     A,#0x2
??ZDMatchSendState_5:
        MOVX    @DPTR,A
        SJMP    ??ZDMatchSendState_9
// 2477 
// 2478   if ( reason != ZDMATCH_REASON_START && matchED->sending == ZDMATCH_SENDING_UNBIND )
??ZDMatchSendState_8:
        MOV     A,?V3
        JZ      ??ZDMatchSendState_11
??ZDMatchSendState_9:
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_129:
        JNZ     ??ZDMatchSendState_11
// 2479   {
// 2480     // Move to the next cluster ID
// 2481     if ( matchED->ed1numMatched )
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_125:
        JZ      ??ZDMatchSendState_12
// 2482     {
// 2483       matchED->ed1numMatched--;
        LCALL   ??Subroutine236_0 & 0xFFFF
// 2484     }
??CrossCallReturnLabel_467:
        SJMP    ??ZDMatchSendState_13
// 2485     else if ( matchED->ed2numMatched )
??ZDMatchSendState_12:
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_100:
        JZ      ??ZDMatchSendState_11
// 2486     {
// 2487       matchED->ed2numMatched--;
        LCALL   ?Subroutine92 & 0xFFFF
// 2488     }
// 2489   }
??CrossCallReturnLabel_580:
        ADD     A,#0x34
??ZDMatchSendState_13:
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_244:
        DEC     A
        MOVX    @DPTR,A
// 2490 
// 2491   // What message do we send now
// 2492   if ( matchED->ed1numMatched )
??ZDMatchSendState_11:
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_126:
        JZ      ??ZDMatchSendState_14
// 2493   {
// 2494     ed = &(matchED->ed1);
        LCALL   ??Subroutine251_0 & 0xFFFF
// 2495     clusterID = matchED->ed1Matched[matchED->ed1numMatched-1];
??CrossCallReturnLabel_561:
        LCALL   ?Subroutine58 & 0xFFFF
// 2496     dstIEEEAddr = matchED->ed2.ieeeAddr;
// 2497     dstEP = matchED->ed2.endpoint;
// 2498   }
??CrossCallReturnLabel_89:
        LCALL   ?Subroutine201 & 0xFFFF
??CrossCallReturnLabel_649:
        XCH     A,R2
        ADD     A,#0x32
        LCALL   ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_95:
        ADD     A,#0x1d
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_142:
        ADD     A,#0x25
        SJMP    ??ZDMatchSendState_15
// 2499   else if ( matchED->ed2numMatched )
??ZDMatchSendState_14:
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_101:
        JZ      ??ZDMatchSendState_16
// 2500   {
// 2501     ed = &(matchED->ed2);
        MOV     DPTR,#matchED
        MOVX    A,@DPTR
        ADD     A,#0x17
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     ?V1,A
// 2502     clusterID = matchED->ed2Matched[matchED->ed2numMatched-1];
        LCALL   ?Subroutine59 & 0xFFFF
// 2503     dstIEEEAddr = matchED->ed1.ieeeAddr;
// 2504     dstEP = matchED->ed1.endpoint;
// 2505   }
??CrossCallReturnLabel_92:
        LCALL   ?Subroutine201 & 0xFFFF
??CrossCallReturnLabel_650:
        XCH     A,R2
        ADD     A,#0x35
        LCALL   ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_96:
        ADD     A,#0x6
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_143:
        ADD     A,#0xe
??ZDMatchSendState_15:
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_245:
        MOV     ?V2,A
// 2506 
// 2507   dstAddr.addrMode = Addr16Bit;
??ZDMatchSendState_16:
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        LCALL   ?Subroutine28 & 0xFFFF
// 2508 
// 2509   // Send the next message
// 2510   if ( (rspStatus == ZDP_SUCCESS) && ed )
??CrossCallReturnLabel_32:
        JZ      $+5
        LJMP    ??ZDMatchSendState_17 & 0xFFFF
        MOV     A,?V0
        ORL     A,?V1
        JNZ     $+5
        LJMP    ??ZDMatchSendState_17 & 0xFFFF
// 2511   {
// 2512     // Send unbind/bind message to source
// 2513     if ( matchED->sending == ZDMATCH_SENDING_UNBIND )
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_130:
        JNZ     ??ZDMatchSendState_18
// 2514     {
// 2515       msgType = Unbind_req;
        MOV     R6,#0x22
        SJMP    ??ZDMatchSendState_19
// 2516     }
// 2517     else
// 2518     {
// 2519       msgType = Bind_req;
??ZDMatchSendState_18:
        MOV     R6,#0x21
// 2520     }
// 2521 
// 2522     dstAddr.addr.shortAddr = ed->srcAddr;
??ZDMatchSendState_19:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine232_0 & 0xFFFF
??CrossCallReturnLabel_424:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine220_0 & 0xFFFF
// 2523 
// 2524     // Save off the transaction sequence number
// 2525     matchED->transSeq = ZDP_TransID;
??CrossCallReturnLabel_377:
        MOV     DPTR,#ZDP_TransID
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_581:
        ADD     A,#0x30
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2526 
// 2527     destinationAddr.addrMode = Addr64Bit;
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x3
        MOVX    @DPTR,A
// 2528     osal_cpyExtAddr( destinationAddr.addr.extAddr, dstIEEEAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V4
        MOV     R5,?V5
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2529 
// 2530     ZDP_BindUnbindReq( msgType, &dstAddr, ed->ieeeAddr, ed->endpoint, clusterID,
// 2531         &destinationAddr, dstEP, ed->SecurityUse );
        ; Setup parameters for call to function ZDP_BindUnbindReq
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V4,A
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 39)
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V4,R0
        MOV     ?V5,R1
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 41)
        MOV     R0,#?V8
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 43)
        MOV     A,?V0
        ADD     A,#0x6
        MOV     ?V4,A
        CLR     A
        ADDC    A,?V1
        MOV     ?V5,A
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 45)
        LCALL   ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_212:
        MOV     R1,A
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP102_8
        MOV     A,R6
        MOV     R2,A
        MOV     R3,#0x0
        LCALL   `??ZDP_BindUnbindReq::?relay`; Banked call to: ZDP_BindUnbindReq
        MOV     A,#0x8
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
// 2532 
// 2533     // Set timeout for response
// 2534     APS_SetEndDeviceBindTimeout( AIB_MaxBindingTime, ZDO_EndDeviceBindMatchTimeoutCB );
        ; Setup parameters for call to function APS_SetEndDeviceBindTimeout
        MOV     R4,#`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` & 0xff
        MOV     R5,#(`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` >> 8) & 0xff
        MOV     DPTR,#AIB_MaxBindingTime
        LCALL   ??Subroutine241_0 & 0xFFFF
// 2535   }
??CrossCallReturnLabel_500:
        LCALL   `??APS_SetEndDeviceBindTimeout::?relay`; Banked call to: APS_SetEndDeviceBindTimeout
        LJMP    ??ZDMatchSendState_20 & 0xFFFF
// 2536   else
// 2537   {
// 2538     // Send the response messages to requesting devices
// 2539     // send response to first requester
// 2540     dstAddr.addr.shortAddr = matchED->ed1.srcAddr;
??ZDMatchSendState_17:
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_124:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine15 & 0xFFFF
// 2541     ZDP_EndDeviceBindRsp( matchED->ed1.TransSeq, &dstAddr, rspStatus, matchED->ed1.SecurityUse );
??CrossCallReturnLabel_9:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV     ?V0,#0x20
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 42)
        MOV     R1,#0x1
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP102_8
        MOV     DPTR,#matchED
        LCALL   ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_501:
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
// 2542 
// 2543     // send response to second requester
// 2544     if ( matchED->state == ZDMATCH_SENDING_BINDS )
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_128:
        JNZ     ??ZDMatchSendState_21
// 2545     {
// 2546       dstAddr.addr.shortAddr = matchED->ed2.srcAddr;
        LCALL   ?Subroutine92 & 0xFFFF
// 2547       ZDP_EndDeviceBindRsp( matchED->ed2.TransSeq, &dstAddr, rspStatus, matchED->ed2.SecurityUse );
// 2548     }
??CrossCallReturnLabel_582:
        ADD     A,#0x19
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        LCALL   ??Subroutine231_0 & 0xFFFF
??CrossCallReturnLabel_426:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ??Subroutine238_0 & 0xFFFF
??CrossCallReturnLabel_475:
        ADD     A,#0x18
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_347:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV     ?V0,#0x20
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 42)
        MOV     R1,#0x1
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP102_8
        LCALL   ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_172:
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
// 2549 
// 2550     // Process ended - release memory used
// 2551     ZDO_RemoveMatchMemory();
??ZDMatchSendState_21:
        ; Setup parameters for call to function ZDO_RemoveMatchMemory
        LCALL   `??ZDO_RemoveMatchMemory::?relay`; Banked call to: ZDO_RemoveMatchMemory
// 2552   }
// 2553 
// 2554   return ( TRUE );
??ZDMatchSendState_20:
        MOV     R1,#0x1
??ZDMatchSendState_3:
        MOV     A,#0x13
        LJMP    ?Subroutine8 & 0xFFFF
// 2555 }
          CFI EndBlock cfiBlock826

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine146:
          CFI Block cfiCond827 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_235
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond828 Using cfiCommon0
          CFI (cfiCond828) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond828) Conditional ??CrossCallReturnLabel_236
          CFI (cfiCond828) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond828) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond828) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond828) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond828) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond828) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond828) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond828) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond828) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond828) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond828) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond828) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond828) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond828) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond828) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond828) CFA_SP SP+-2
          CFI (cfiCond828) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond829 Using cfiCommon0
          CFI (cfiCond829) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond829) Conditional ??CrossCallReturnLabel_237
          CFI (cfiCond829) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond829) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond829) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond829) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond829) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond829) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond829) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond829) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond829) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond829) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond829) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond829) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond829) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond829) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond829) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond829) CFA_SP SP+-2
          CFI (cfiCond829) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond830 Using cfiCommon0
          CFI (cfiCond830) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond830) Conditional ??CrossCallReturnLabel_238
          CFI (cfiCond830) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond830) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond830) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond830) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond830) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond830) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond830) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond830) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond830) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond830) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond830) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond830) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond830) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond830) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond830) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond830) CFA_SP SP+-2
          CFI (cfiCond830) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond831 Using cfiCommon0
          CFI (cfiCond831) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond831) Conditional ??CrossCallReturnLabel_239
          CFI (cfiCond831) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond831) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond831) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond831) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond831) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond831) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond831) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond831) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond831) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond831) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond831) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond831) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond831) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond831) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond831) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond831) CFA_SP SP+-2
          CFI (cfiCond831) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond832 Using cfiCommon0
          CFI (cfiCond832) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond832) Conditional ??CrossCallReturnLabel_240
          CFI (cfiCond832) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond832) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond832) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond832) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond832) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond832) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond832) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond832) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond832) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond832) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond832) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond832) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond832) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond832) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond832) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond832) CFA_SP SP+-2
          CFI (cfiCond832) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond833 Using cfiCommon0
          CFI (cfiCond833) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond833) Conditional ??CrossCallReturnLabel_241
          CFI (cfiCond833) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond833) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond833) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond833) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond833) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond833) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond833) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond833) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond833) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond833) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond833) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond833) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond833) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond833) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond833) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond833) CFA_SP SP+-2
          CFI (cfiCond833) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond834 Using cfiCommon0
          CFI (cfiCond834) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond834) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond834) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond834) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond834) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond834) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond834) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond834) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond834) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond834) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond834) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond834) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond834) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond834) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond834) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond834) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond834) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond834) CFA_SP SP+-2
          CFI (cfiCond834) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond835 Using cfiCommon0
          CFI (cfiCond835) Function ZDMatchSendState
          CFI (cfiCond835) Conditional ??CrossCallReturnLabel_243
          CFI (cfiCond835) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond835) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond835) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond835) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond835) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond835) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond835) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond835) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond835) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond835) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond835) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond835) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond835) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond835) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond835) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond835) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond835) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond835) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond835) CFA_SP SP+-2
          CFI (cfiCond835) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond836 Using cfiCommon0
          CFI (cfiCond836) Function ZDMatchSendState
          CFI (cfiCond836) Conditional ??CrossCallReturnLabel_244
          CFI (cfiCond836) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond836) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond836) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond836) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond836) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond836) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond836) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond836) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond836) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond836) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond836) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond836) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond836) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond836) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond836) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond836) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond836) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond836) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond836) CFA_SP SP+-2
          CFI (cfiCond836) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond837 Using cfiCommon0
          CFI (cfiCond837) Function ZDMatchSendState
          CFI (cfiCond837) Conditional ??CrossCallReturnLabel_245
          CFI (cfiCond837) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond837) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond837) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond837) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond837) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond837) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond837) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond837) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond837) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond837) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond837) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond837) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond837) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond837) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond837) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond837) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond837) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond837) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond837) CFA_SP SP+-2
          CFI (cfiCond837) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond838 Using cfiCommon0
          CFI (cfiCond838) Function ZDO_ParseAddrRsp
          CFI (cfiCond838) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond838) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond838) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond838) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond838) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond838) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond838) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond838) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond838) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond838) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond838) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond838) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond838) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond838) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond838) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond838) CFA_SP SP+-2
          CFI (cfiCond838) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker839 Using cfiCommon1
          CFI (cfiPicker839) NoFunction
          CFI (cfiPicker839) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond827
          CFI EndBlock cfiCond828
          CFI EndBlock cfiCond829
          CFI EndBlock cfiCond830
          CFI EndBlock cfiCond831
          CFI EndBlock cfiCond832
          CFI EndBlock cfiCond833
          CFI EndBlock cfiCond834
          CFI EndBlock cfiCond835
          CFI EndBlock cfiCond836
          CFI EndBlock cfiCond837
          CFI EndBlock cfiCond838
          CFI EndBlock cfiPicker839

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine133:
          CFI Block cfiCond840 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_210
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond841 Using cfiCommon0
          CFI (cfiCond841) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond841) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond841) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond841) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond841) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond841) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond841) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond841) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond841) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond841) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond841) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond841) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond841) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond841) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond841) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond841) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond841) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond841) CFA_SP SP+-2
          CFI (cfiCond841) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond842 Using cfiCommon0
          CFI (cfiCond842) Function ZDMatchSendState
          CFI (cfiCond842) Conditional ??CrossCallReturnLabel_212
          CFI (cfiCond842) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond842) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond842) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond842) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond842) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond842) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond842) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond842) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond842) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond842) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond842) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond842) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond842) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond842) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond842) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond842) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond842) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond842) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond842) CFA_SP SP+-2
          CFI (cfiCond842) CFA_XSP16 add(XSP16, 45)
          CFI Block cfiPicker843 Using cfiCommon1
          CFI (cfiPicker843) NoFunction
          CFI (cfiPicker843) Picker
        MOV     A,?V0
        LCALL   ??Subroutine254_0 & 0xFFFF
??CrossCallReturnLabel_600:
        LCALL   ??Subroutine223_0 & 0xFFFF
??CrossCallReturnLabel_381:
        RET
          CFI EndBlock cfiCond840
          CFI EndBlock cfiCond841
          CFI EndBlock cfiCond842
          CFI EndBlock cfiPicker843

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine109:
          CFI Block cfiCond844 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_171
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond845 Using cfiCommon0
          CFI (cfiCond845) Function ZDMatchSendState
          CFI (cfiCond845) Conditional ??CrossCallReturnLabel_172
          CFI (cfiCond845) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond845) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond845) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond845) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond845) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond845) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond845) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond845) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond845) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond845) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond845) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond845) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond845) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond845) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond845) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond845) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond845) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond845) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond845) CFA_SP SP+-2
          CFI (cfiCond845) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker846 Using cfiCommon1
          CFI (cfiPicker846) NoFunction
          CFI (cfiPicker846) Picker
        MOV     DPTR,#matchED
        MOVX    A,@DPTR
        ADD     A,#0x17
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R3,A
        RET
          CFI EndBlock cfiCond844
          CFI EndBlock cfiCond845
          CFI EndBlock cfiPicker846

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine87:
          CFI Block cfiCond847 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_142
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond848 Using cfiCommon0
          CFI (cfiCond848) Function ZDMatchSendState
          CFI (cfiCond848) Conditional ??CrossCallReturnLabel_143
          CFI (cfiCond848) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond848) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond848) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond848) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond848) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond848) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond848) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond848) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond848) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond848) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond848) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond848) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond848) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond848) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond848) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond848) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond848) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond848) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond848) CFA_SP SP+-2
          CFI (cfiCond848) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker849 Using cfiCommon1
          CFI (cfiPicker849) NoFunction
          CFI (cfiPicker849) Picker
        MOV     ?V4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     ?V5,A
        LCALL   ?Subroutine171 & 0xFFFF
??CrossCallReturnLabel_590:
        RET
          CFI EndBlock cfiCond847
          CFI EndBlock cfiCond848
          CFI EndBlock cfiPicker849

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine171:
          CFI Block cfiCond850 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_589, ??CrossCallReturnLabel_140
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond851 Using cfiCommon0
          CFI (cfiCond851) Function ZDO_RemoveMatchMemory
          CFI (cfiCond851) Conditional ??CrossCallReturnLabel_589, ??CrossCallReturnLabel_141
          CFI (cfiCond851) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond851) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond851) CFA_SP SP+-9
          CFI Block cfiCond852 Using cfiCommon0
          CFI (cfiCond852) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond852) Conditional ??CrossCallReturnLabel_588, ??CrossCallReturnLabel_138
          CFI (cfiCond852) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond852) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond852) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond852) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond852) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond852) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond852) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond852) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond852) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond852) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond852) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond852) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond852) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond852) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond852) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond852) CFA_SP SP+-4
          CFI (cfiCond852) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond853 Using cfiCommon0
          CFI (cfiCond853) Function ZDO_RemoveMatchMemory
          CFI (cfiCond853) Conditional ??CrossCallReturnLabel_588, ??CrossCallReturnLabel_139
          CFI (cfiCond853) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond853) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond853) CFA_SP SP+-9
          CFI Block cfiCond854 Using cfiCommon0
          CFI (cfiCond854) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond854) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_118
          CFI (cfiCond854) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond854) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond854) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond854) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond854) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond854) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond854) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond854) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond854) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond854) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond854) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond854) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond854) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond854) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond854) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond854) CFA_SP SP+-4
          CFI (cfiCond854) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond855 Using cfiCommon0
          CFI (cfiCond855) Function ZDO_RemoveMatchMemory
          CFI (cfiCond855) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_119
          CFI (cfiCond855) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond855) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond855) CFA_SP SP+-9
          CFI Block cfiCond856 Using cfiCommon0
          CFI (cfiCond856) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond856) Conditional ??CrossCallReturnLabel_585, ??CrossCallReturnLabel_116
          CFI (cfiCond856) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond856) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond856) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond856) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond856) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond856) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond856) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond856) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond856) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond856) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond856) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond856) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond856) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond856) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond856) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond856) CFA_SP SP+-4
          CFI (cfiCond856) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond857 Using cfiCommon0
          CFI (cfiCond857) Function ZDO_RemoveMatchMemory
          CFI (cfiCond857) Conditional ??CrossCallReturnLabel_585, ??CrossCallReturnLabel_117
          CFI (cfiCond857) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond857) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond857) CFA_SP SP+-9
          CFI Block cfiCond858 Using cfiCommon0
          CFI (cfiCond858) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond858) Conditional ??CrossCallReturnLabel_584, ??CrossCallReturnLabel_114
          CFI (cfiCond858) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond858) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond858) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond858) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond858) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond858) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond858) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond858) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond858) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond858) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond858) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond858) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond858) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond858) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond858) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond858) CFA_SP SP+-4
          CFI (cfiCond858) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond859 Using cfiCommon0
          CFI (cfiCond859) Function ZDO_RemoveMatchMemory
          CFI (cfiCond859) Conditional ??CrossCallReturnLabel_584, ??CrossCallReturnLabel_115
          CFI (cfiCond859) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond859) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond859) CFA_SP SP+-9
          CFI Block cfiCond860 Using cfiCommon0
          CFI (cfiCond860) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond860) Conditional ??CrossCallReturnLabel_583, ??CrossCallReturnLabel_112
          CFI (cfiCond860) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond860) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond860) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond860) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond860) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond860) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond860) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond860) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond860) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond860) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond860) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond860) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond860) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond860) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond860) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond860) CFA_SP SP+-4
          CFI (cfiCond860) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond861 Using cfiCommon0
          CFI (cfiCond861) Function ZDO_RemoveMatchMemory
          CFI (cfiCond861) Conditional ??CrossCallReturnLabel_583, ??CrossCallReturnLabel_113
          CFI (cfiCond861) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond861) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond861) CFA_SP SP+-9
          CFI Block cfiCond862 Using cfiCommon0
          CFI (cfiCond862) Function ZDMatchSendState
          CFI (cfiCond862) Conditional ??CrossCallReturnLabel_590, ??CrossCallReturnLabel_142
          CFI (cfiCond862) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond862) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond862) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond862) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond862) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond862) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond862) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond862) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond862) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond862) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond862) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond862) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond862) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond862) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond862) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond862) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond862) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond862) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond862) CFA_SP SP+-4
          CFI (cfiCond862) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond863 Using cfiCommon0
          CFI (cfiCond863) Function ZDMatchSendState
          CFI (cfiCond863) Conditional ??CrossCallReturnLabel_590, ??CrossCallReturnLabel_143
          CFI (cfiCond863) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond863) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond863) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond863) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond863) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond863) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond863) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond863) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond863) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond863) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond863) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond863) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond863) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond863) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond863) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond863) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond863) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond863) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond863) CFA_SP SP+-4
          CFI (cfiCond863) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond864 Using cfiCommon0
          CFI (cfiCond864) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond864) Conditional ??CrossCallReturnLabel_587, ??CrossCallReturnLabel_127
          CFI (cfiCond864) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond864) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond864) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond864) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond864) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond864) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond864) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond864) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond864) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond864) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond864) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond864) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond864) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond864) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond864) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond864) CFA_SP SP+-4
          CFI (cfiCond864) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond865 Using cfiCommon0
          CFI (cfiCond865) Function ZDMatchSendState
          CFI (cfiCond865) Conditional ??CrossCallReturnLabel_587, ??CrossCallReturnLabel_128
          CFI (cfiCond865) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond865) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond865) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond865) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond865) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond865) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond865) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond865) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond865) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond865) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond865) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond865) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond865) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond865) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond865) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond865) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond865) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond865) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond865) CFA_SP SP+-4
          CFI (cfiCond865) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker866 Using cfiCommon1
          CFI (cfiPicker866) NoFunction
          CFI (cfiPicker866) Picker
        MOV     DPTR,#matchED
          CFI EndBlock cfiCond850
          CFI EndBlock cfiCond851
          CFI EndBlock cfiCond852
          CFI EndBlock cfiCond853
          CFI EndBlock cfiCond854
          CFI EndBlock cfiCond855
          CFI EndBlock cfiCond856
          CFI EndBlock cfiCond857
          CFI EndBlock cfiCond858
          CFI EndBlock cfiCond859
          CFI EndBlock cfiCond860
          CFI EndBlock cfiCond861
          CFI EndBlock cfiCond862
          CFI EndBlock cfiCond863
          CFI EndBlock cfiCond864
          CFI EndBlock cfiCond865
          CFI EndBlock cfiPicker866
        REQUIRE ??Subroutine246_0
        ; // Fall through to label ??Subroutine246_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine246_0:
          CFI Block cfiCond867 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_468
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond868 Using cfiCommon0
          CFI (cfiCond868) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond868) Conditional ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_469
          CFI (cfiCond868) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond868) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond868) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond868) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond868) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond868) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond868) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond868) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond868) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond868) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond868) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond868) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond868) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond868) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond868) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond868) CFA_SP SP+-4
          CFI (cfiCond868) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond869 Using cfiCommon0
          CFI (cfiCond869) Function ZDMatchSendState
          CFI (cfiCond869) Conditional ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_467
          CFI (cfiCond869) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond869) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond869) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond869) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond869) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond869) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond869) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond869) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond869) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond869) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond869) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond869) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond869) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond869) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond869) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond869) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond869) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond869) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond869) CFA_SP SP+-4
          CFI (cfiCond869) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond870 Using cfiCommon0
          CFI (cfiCond870) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond870) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_569
          CFI (cfiCond870) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond870) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond870) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond870) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond870) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond870) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond870) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond870) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond870) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond870) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond870) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond870) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond870) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond870) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond870) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond870) CFA_SP SP+-4
          CFI (cfiCond870) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond871 Using cfiCommon0
          CFI (cfiCond871) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond871) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_570
          CFI (cfiCond871) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond871) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond871) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond871) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond871) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond871) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond871) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond871) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond871) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond871) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond871) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond871) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond871) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond871) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond871) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond871) CFA_SP SP+-4
          CFI (cfiCond871) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond872 Using cfiCommon0
          CFI (cfiCond872) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond872) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_571
          CFI (cfiCond872) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond872) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond872) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond872) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond872) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond872) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond872) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond872) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond872) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond872) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond872) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond872) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond872) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond872) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond872) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond872) CFA_SP SP+-4
          CFI (cfiCond872) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond873 Using cfiCommon0
          CFI (cfiCond873) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond873) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_572
          CFI (cfiCond873) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond873) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond873) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond873) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond873) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond873) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond873) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond873) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond873) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond873) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond873) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond873) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond873) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond873) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond873) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond873) CFA_SP SP+-4
          CFI (cfiCond873) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond874 Using cfiCommon0
          CFI (cfiCond874) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond874) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_573
          CFI (cfiCond874) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond874) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond874) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond874) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond874) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond874) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond874) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond874) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond874) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond874) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond874) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond874) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond874) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond874) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond874) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond874) CFA_SP SP+-4
          CFI (cfiCond874) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond875 Using cfiCommon0
          CFI (cfiCond875) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond875) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_574
          CFI (cfiCond875) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond875) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond875) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond875) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond875) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond875) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond875) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond875) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond875) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond875) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond875) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond875) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond875) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond875) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond875) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond875) CFA_SP SP+-4
          CFI (cfiCond875) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond876 Using cfiCommon0
          CFI (cfiCond876) Function ZDO_RemoveMatchMemory
          CFI (cfiCond876) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_575
          CFI (cfiCond876) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond876) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond876) CFA_SP SP+-9
          CFI Block cfiCond877 Using cfiCommon0
          CFI (cfiCond877) Function ZDO_RemoveMatchMemory
          CFI (cfiCond877) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_576
          CFI (cfiCond877) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond877) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond877) CFA_SP SP+-9
          CFI Block cfiCond878 Using cfiCommon0
          CFI (cfiCond878) Function ZDO_RemoveMatchMemory
          CFI (cfiCond878) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_577
          CFI (cfiCond878) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond878) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond878) CFA_SP SP+-9
          CFI Block cfiCond879 Using cfiCommon0
          CFI (cfiCond879) Function ZDO_RemoveMatchMemory
          CFI (cfiCond879) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_578
          CFI (cfiCond879) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond879) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond879) CFA_SP SP+-9
          CFI Block cfiCond880 Using cfiCommon0
          CFI (cfiCond880) Function ZDO_RemoveMatchMemory
          CFI (cfiCond880) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_579
          CFI (cfiCond880) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond880) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond880) CFA_SP SP+-9
          CFI Block cfiCond881 Using cfiCommon0
          CFI (cfiCond881) Function ZDMatchSendState
          CFI (cfiCond881) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_580
          CFI (cfiCond881) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond881) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond881) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond881) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond881) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond881) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond881) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond881) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond881) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond881) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond881) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond881) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond881) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond881) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond881) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond881) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond881) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond881) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond881) CFA_SP SP+-4
          CFI (cfiCond881) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond882 Using cfiCommon0
          CFI (cfiCond882) Function ZDMatchSendState
          CFI (cfiCond882) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_581
          CFI (cfiCond882) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond882) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond882) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond882) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond882) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond882) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond882) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond882) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond882) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond882) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond882) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond882) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond882) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond882) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond882) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond882) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond882) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond882) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond882) CFA_SP SP+-5
          CFI (cfiCond882) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond883 Using cfiCommon0
          CFI (cfiCond883) Function ZDMatchSendState
          CFI (cfiCond883) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_582
          CFI (cfiCond883) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond883) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond883) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond883) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond883) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond883) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond883) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond883) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond883) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond883) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond883) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond883) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond883) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond883) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond883) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond883) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond883) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond883) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond883) CFA_SP SP+-4
          CFI (cfiCond883) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond884 Using cfiCommon0
          CFI (cfiCond884) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond884) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_564
          CFI (cfiCond884) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond884) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond884) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond884) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond884) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond884) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond884) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond884) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond884) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond884) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond884) CFA_SP SP+-4
          CFI (cfiCond884) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond885 Using cfiCommon0
          CFI (cfiCond885) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond885) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_565
          CFI (cfiCond885) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond885) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond885) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond885) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond885) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond885) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond885) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond885) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond885) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond885) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond885) CFA_SP SP+-4
          CFI (cfiCond885) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond886 Using cfiCommon0
          CFI (cfiCond886) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond886) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_566
          CFI (cfiCond886) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond886) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond886) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond886) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond886) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond886) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond886) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond886) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond886) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond886) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond886) CFA_SP SP+-4
          CFI (cfiCond886) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond887 Using cfiCommon0
          CFI (cfiCond887) Function ZDMatchSendState
          CFI (cfiCond887) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_567
          CFI (cfiCond887) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond887) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond887) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond887) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond887) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond887) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond887) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond887) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond887) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond887) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond887) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond887) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond887) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond887) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond887) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond887) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond887) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond887) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond887) CFA_SP SP+-4
          CFI (cfiCond887) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond888 Using cfiCommon0
          CFI (cfiCond888) Function ZDO_ParseAddrRsp
          CFI (cfiCond888) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_568
          CFI (cfiCond888) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond888) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond888) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond888) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond888) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond888) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond888) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond888) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond888) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond888) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond888) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond888) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond888) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond888) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond888) CFA_SP SP+-4
          CFI (cfiCond888) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond889 Using cfiCommon0
          CFI (cfiCond889) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond889) Conditional ??CrossCallReturnLabel_589, ??CrossCallReturnLabel_140
          CFI (cfiCond889) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond889) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond889) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond889) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond889) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond889) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond889) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond889) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond889) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond889) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond889) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond889) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond889) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond889) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond889) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond889) CFA_SP SP+-4
          CFI (cfiCond889) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond890 Using cfiCommon0
          CFI (cfiCond890) Function ZDO_RemoveMatchMemory
          CFI (cfiCond890) Conditional ??CrossCallReturnLabel_589, ??CrossCallReturnLabel_141
          CFI (cfiCond890) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond890) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond890) CFA_SP SP+-9
          CFI Block cfiCond891 Using cfiCommon0
          CFI (cfiCond891) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond891) Conditional ??CrossCallReturnLabel_588, ??CrossCallReturnLabel_138
          CFI (cfiCond891) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond891) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond891) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond891) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond891) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond891) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond891) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond891) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond891) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond891) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond891) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond891) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond891) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond891) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond891) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond891) CFA_SP SP+-4
          CFI (cfiCond891) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond892 Using cfiCommon0
          CFI (cfiCond892) Function ZDO_RemoveMatchMemory
          CFI (cfiCond892) Conditional ??CrossCallReturnLabel_588, ??CrossCallReturnLabel_139
          CFI (cfiCond892) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond892) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond892) CFA_SP SP+-9
          CFI Block cfiCond893 Using cfiCommon0
          CFI (cfiCond893) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond893) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_118
          CFI (cfiCond893) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond893) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond893) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond893) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond893) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond893) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond893) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond893) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond893) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond893) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond893) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond893) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond893) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond893) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond893) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond893) CFA_SP SP+-4
          CFI (cfiCond893) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond894 Using cfiCommon0
          CFI (cfiCond894) Function ZDO_RemoveMatchMemory
          CFI (cfiCond894) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_119
          CFI (cfiCond894) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond894) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond894) CFA_SP SP+-9
          CFI Block cfiCond895 Using cfiCommon0
          CFI (cfiCond895) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond895) Conditional ??CrossCallReturnLabel_585, ??CrossCallReturnLabel_116
          CFI (cfiCond895) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond895) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond895) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond895) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond895) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond895) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond895) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond895) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond895) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond895) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond895) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond895) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond895) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond895) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond895) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond895) CFA_SP SP+-4
          CFI (cfiCond895) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond896 Using cfiCommon0
          CFI (cfiCond896) Function ZDO_RemoveMatchMemory
          CFI (cfiCond896) Conditional ??CrossCallReturnLabel_585, ??CrossCallReturnLabel_117
          CFI (cfiCond896) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond896) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond896) CFA_SP SP+-9
          CFI Block cfiCond897 Using cfiCommon0
          CFI (cfiCond897) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond897) Conditional ??CrossCallReturnLabel_584, ??CrossCallReturnLabel_114
          CFI (cfiCond897) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond897) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond897) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond897) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond897) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond897) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond897) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond897) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond897) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond897) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond897) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond897) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond897) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond897) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond897) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond897) CFA_SP SP+-4
          CFI (cfiCond897) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond898 Using cfiCommon0
          CFI (cfiCond898) Function ZDO_RemoveMatchMemory
          CFI (cfiCond898) Conditional ??CrossCallReturnLabel_584, ??CrossCallReturnLabel_115
          CFI (cfiCond898) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond898) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond898) CFA_SP SP+-9
          CFI Block cfiCond899 Using cfiCommon0
          CFI (cfiCond899) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond899) Conditional ??CrossCallReturnLabel_583, ??CrossCallReturnLabel_112
          CFI (cfiCond899) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond899) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond899) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond899) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond899) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond899) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond899) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond899) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond899) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond899) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond899) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond899) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond899) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond899) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond899) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond899) CFA_SP SP+-4
          CFI (cfiCond899) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond900 Using cfiCommon0
          CFI (cfiCond900) Function ZDO_RemoveMatchMemory
          CFI (cfiCond900) Conditional ??CrossCallReturnLabel_583, ??CrossCallReturnLabel_113
          CFI (cfiCond900) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond900) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond900) CFA_SP SP+-9
          CFI Block cfiCond901 Using cfiCommon0
          CFI (cfiCond901) Function ZDMatchSendState
          CFI (cfiCond901) Conditional ??CrossCallReturnLabel_590, ??CrossCallReturnLabel_142
          CFI (cfiCond901) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond901) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond901) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond901) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond901) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond901) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond901) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond901) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond901) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond901) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond901) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond901) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond901) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond901) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond901) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond901) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond901) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond901) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond901) CFA_SP SP+-4
          CFI (cfiCond901) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond902 Using cfiCommon0
          CFI (cfiCond902) Function ZDMatchSendState
          CFI (cfiCond902) Conditional ??CrossCallReturnLabel_590, ??CrossCallReturnLabel_143
          CFI (cfiCond902) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond902) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond902) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond902) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond902) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond902) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond902) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond902) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond902) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond902) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond902) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond902) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond902) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond902) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond902) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond902) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond902) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond902) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond902) CFA_SP SP+-4
          CFI (cfiCond902) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond903 Using cfiCommon0
          CFI (cfiCond903) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond903) Conditional ??CrossCallReturnLabel_587, ??CrossCallReturnLabel_127
          CFI (cfiCond903) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond903) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond903) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond903) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond903) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond903) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond903) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond903) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond903) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond903) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond903) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond903) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond903) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond903) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond903) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond903) CFA_SP SP+-4
          CFI (cfiCond903) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond904 Using cfiCommon0
          CFI (cfiCond904) Function ZDMatchSendState
          CFI (cfiCond904) Conditional ??CrossCallReturnLabel_587, ??CrossCallReturnLabel_128
          CFI (cfiCond904) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond904) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond904) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond904) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond904) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond904) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond904) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond904) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond904) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond904) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond904) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond904) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond904) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond904) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond904) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond904) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond904) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond904) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond904) CFA_SP SP+-4
          CFI (cfiCond904) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker905 Using cfiCommon1
          CFI (cfiPicker905) NoFunction
          CFI (cfiPicker905) Picker
        LCALL   ?Subroutine200 & 0xFFFF
??CrossCallReturnLabel_596:
        RET
          CFI EndBlock cfiCond867
          CFI EndBlock cfiCond868
          CFI EndBlock cfiCond869
          CFI EndBlock cfiCond870
          CFI EndBlock cfiCond871
          CFI EndBlock cfiCond872
          CFI EndBlock cfiCond873
          CFI EndBlock cfiCond874
          CFI EndBlock cfiCond875
          CFI EndBlock cfiCond876
          CFI EndBlock cfiCond877
          CFI EndBlock cfiCond878
          CFI EndBlock cfiCond879
          CFI EndBlock cfiCond880
          CFI EndBlock cfiCond881
          CFI EndBlock cfiCond882
          CFI EndBlock cfiCond883
          CFI EndBlock cfiCond884
          CFI EndBlock cfiCond885
          CFI EndBlock cfiCond886
          CFI EndBlock cfiCond887
          CFI EndBlock cfiCond888
          CFI EndBlock cfiCond889
          CFI EndBlock cfiCond890
          CFI EndBlock cfiCond891
          CFI EndBlock cfiCond892
          CFI EndBlock cfiCond893
          CFI EndBlock cfiCond894
          CFI EndBlock cfiCond895
          CFI EndBlock cfiCond896
          CFI EndBlock cfiCond897
          CFI EndBlock cfiCond898
          CFI EndBlock cfiCond899
          CFI EndBlock cfiCond900
          CFI EndBlock cfiCond901
          CFI EndBlock cfiCond902
          CFI EndBlock cfiCond903
          CFI EndBlock cfiCond904
          CFI EndBlock cfiPicker905

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine200:
          CFI Block cfiCond906 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_589, ??CrossCallReturnLabel_140
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond907 Using cfiCommon0
          CFI (cfiCond907) Function ZDO_RemoveMatchMemory
          CFI (cfiCond907) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_589, ??CrossCallReturnLabel_141
          CFI (cfiCond907) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond907) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond907) CFA_SP SP+-11
          CFI Block cfiCond908 Using cfiCommon0
          CFI (cfiCond908) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond908) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_588, ??CrossCallReturnLabel_138
          CFI (cfiCond908) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond908) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond908) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond908) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond908) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond908) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond908) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond908) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond908) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond908) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond908) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond908) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond908) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond908) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond908) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond908) CFA_SP SP+-6
          CFI (cfiCond908) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond909 Using cfiCommon0
          CFI (cfiCond909) Function ZDO_RemoveMatchMemory
          CFI (cfiCond909) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_588, ??CrossCallReturnLabel_139
          CFI (cfiCond909) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond909) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond909) CFA_SP SP+-11
          CFI Block cfiCond910 Using cfiCommon0
          CFI (cfiCond910) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond910) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_118
          CFI (cfiCond910) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond910) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond910) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond910) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond910) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond910) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond910) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond910) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond910) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond910) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond910) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond910) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond910) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond910) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond910) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond910) CFA_SP SP+-6
          CFI (cfiCond910) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond911 Using cfiCommon0
          CFI (cfiCond911) Function ZDO_RemoveMatchMemory
          CFI (cfiCond911) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_119
          CFI (cfiCond911) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond911) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond911) CFA_SP SP+-11
          CFI Block cfiCond912 Using cfiCommon0
          CFI (cfiCond912) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond912) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_585, ??CrossCallReturnLabel_116
          CFI (cfiCond912) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond912) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond912) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond912) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond912) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond912) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond912) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond912) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond912) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond912) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond912) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond912) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond912) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond912) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond912) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond912) CFA_SP SP+-6
          CFI (cfiCond912) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond913 Using cfiCommon0
          CFI (cfiCond913) Function ZDO_RemoveMatchMemory
          CFI (cfiCond913) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_585, ??CrossCallReturnLabel_117
          CFI (cfiCond913) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond913) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond913) CFA_SP SP+-11
          CFI Block cfiCond914 Using cfiCommon0
          CFI (cfiCond914) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond914) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_584, ??CrossCallReturnLabel_114
          CFI (cfiCond914) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond914) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond914) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond914) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond914) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond914) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond914) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond914) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond914) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond914) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond914) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond914) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond914) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond914) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond914) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond914) CFA_SP SP+-6
          CFI (cfiCond914) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond915 Using cfiCommon0
          CFI (cfiCond915) Function ZDO_RemoveMatchMemory
          CFI (cfiCond915) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_584, ??CrossCallReturnLabel_115
          CFI (cfiCond915) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond915) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond915) CFA_SP SP+-11
          CFI Block cfiCond916 Using cfiCommon0
          CFI (cfiCond916) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond916) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_583, ??CrossCallReturnLabel_112
          CFI (cfiCond916) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond916) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond916) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond916) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond916) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond916) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond916) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond916) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond916) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond916) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond916) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond916) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond916) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond916) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond916) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond916) CFA_SP SP+-6
          CFI (cfiCond916) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond917 Using cfiCommon0
          CFI (cfiCond917) Function ZDO_RemoveMatchMemory
          CFI (cfiCond917) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_583, ??CrossCallReturnLabel_113
          CFI (cfiCond917) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond917) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond917) CFA_SP SP+-11
          CFI Block cfiCond918 Using cfiCommon0
          CFI (cfiCond918) Function ZDMatchSendState
          CFI (cfiCond918) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_590, ??CrossCallReturnLabel_142
          CFI (cfiCond918) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond918) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond918) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond918) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond918) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond918) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond918) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond918) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond918) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond918) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond918) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond918) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond918) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond918) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond918) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond918) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond918) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond918) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond918) CFA_SP SP+-6
          CFI (cfiCond918) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond919 Using cfiCommon0
          CFI (cfiCond919) Function ZDMatchSendState
          CFI (cfiCond919) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_590, ??CrossCallReturnLabel_143
          CFI (cfiCond919) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond919) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond919) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond919) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond919) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond919) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond919) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond919) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond919) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond919) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond919) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond919) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond919) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond919) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond919) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond919) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond919) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond919) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond919) CFA_SP SP+-6
          CFI (cfiCond919) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond920 Using cfiCommon0
          CFI (cfiCond920) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond920) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_587, ??CrossCallReturnLabel_127
          CFI (cfiCond920) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond920) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond920) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond920) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond920) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond920) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond920) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond920) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond920) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond920) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond920) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond920) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond920) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond920) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond920) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond920) CFA_SP SP+-6
          CFI (cfiCond920) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond921 Using cfiCommon0
          CFI (cfiCond921) Function ZDMatchSendState
          CFI (cfiCond921) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_587, ??CrossCallReturnLabel_128
          CFI (cfiCond921) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond921) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond921) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond921) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond921) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond921) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond921) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond921) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond921) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond921) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond921) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond921) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond921) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond921) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond921) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond921) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond921) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond921) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond921) CFA_SP SP+-6
          CFI (cfiCond921) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond922 Using cfiCommon0
          CFI (cfiCond922) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond922) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_468
          CFI (cfiCond922) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond922) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond922) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond922) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond922) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond922) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond922) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond922) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond922) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond922) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond922) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond922) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond922) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond922) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond922) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond922) CFA_SP SP+-6
          CFI (cfiCond922) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond923 Using cfiCommon0
          CFI (cfiCond923) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond923) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_469
          CFI (cfiCond923) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond923) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond923) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond923) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond923) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond923) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond923) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond923) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond923) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond923) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond923) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond923) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond923) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond923) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond923) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond923) CFA_SP SP+-6
          CFI (cfiCond923) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond924 Using cfiCommon0
          CFI (cfiCond924) Function ZDMatchSendState
          CFI (cfiCond924) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_467
          CFI (cfiCond924) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond924) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond924) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond924) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond924) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond924) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond924) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond924) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond924) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond924) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond924) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond924) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond924) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond924) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond924) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond924) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond924) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond924) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond924) CFA_SP SP+-6
          CFI (cfiCond924) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond925 Using cfiCommon0
          CFI (cfiCond925) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond925) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_569
          CFI (cfiCond925) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond925) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond925) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond925) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond925) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond925) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond925) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond925) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond925) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond925) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond925) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond925) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond925) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond925) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond925) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond925) CFA_SP SP+-6
          CFI (cfiCond925) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond926 Using cfiCommon0
          CFI (cfiCond926) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond926) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_570
          CFI (cfiCond926) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond926) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond926) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond926) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond926) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond926) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond926) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond926) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond926) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond926) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond926) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond926) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond926) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond926) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond926) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond926) CFA_SP SP+-6
          CFI (cfiCond926) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond927 Using cfiCommon0
          CFI (cfiCond927) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond927) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_571
          CFI (cfiCond927) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond927) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond927) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond927) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond927) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond927) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond927) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond927) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond927) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond927) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond927) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond927) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond927) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond927) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond927) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond927) CFA_SP SP+-6
          CFI (cfiCond927) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond928 Using cfiCommon0
          CFI (cfiCond928) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond928) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_572
          CFI (cfiCond928) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond928) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond928) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond928) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond928) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond928) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond928) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond928) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond928) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond928) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond928) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond928) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond928) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond928) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond928) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond928) CFA_SP SP+-6
          CFI (cfiCond928) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond929 Using cfiCommon0
          CFI (cfiCond929) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond929) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_573
          CFI (cfiCond929) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond929) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond929) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond929) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond929) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond929) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond929) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond929) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond929) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond929) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond929) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond929) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond929) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond929) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond929) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond929) CFA_SP SP+-6
          CFI (cfiCond929) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond930 Using cfiCommon0
          CFI (cfiCond930) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond930) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_574
          CFI (cfiCond930) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond930) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond930) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond930) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond930) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond930) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond930) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond930) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond930) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond930) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond930) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond930) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond930) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond930) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond930) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond930) CFA_SP SP+-6
          CFI (cfiCond930) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond931 Using cfiCommon0
          CFI (cfiCond931) Function ZDO_RemoveMatchMemory
          CFI (cfiCond931) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_575
          CFI (cfiCond931) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond931) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond931) CFA_SP SP+-11
          CFI Block cfiCond932 Using cfiCommon0
          CFI (cfiCond932) Function ZDO_RemoveMatchMemory
          CFI (cfiCond932) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_576
          CFI (cfiCond932) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond932) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond932) CFA_SP SP+-11
          CFI Block cfiCond933 Using cfiCommon0
          CFI (cfiCond933) Function ZDO_RemoveMatchMemory
          CFI (cfiCond933) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_577
          CFI (cfiCond933) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond933) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond933) CFA_SP SP+-11
          CFI Block cfiCond934 Using cfiCommon0
          CFI (cfiCond934) Function ZDO_RemoveMatchMemory
          CFI (cfiCond934) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_578
          CFI (cfiCond934) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond934) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond934) CFA_SP SP+-11
          CFI Block cfiCond935 Using cfiCommon0
          CFI (cfiCond935) Function ZDO_RemoveMatchMemory
          CFI (cfiCond935) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_579
          CFI (cfiCond935) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond935) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond935) CFA_SP SP+-11
          CFI Block cfiCond936 Using cfiCommon0
          CFI (cfiCond936) Function ZDMatchSendState
          CFI (cfiCond936) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_580
          CFI (cfiCond936) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond936) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond936) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond936) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond936) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond936) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond936) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond936) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond936) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond936) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond936) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond936) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond936) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond936) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond936) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond936) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond936) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond936) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond936) CFA_SP SP+-6
          CFI (cfiCond936) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond937 Using cfiCommon0
          CFI (cfiCond937) Function ZDMatchSendState
          CFI (cfiCond937) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_581
          CFI (cfiCond937) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond937) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond937) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond937) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond937) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond937) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond937) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond937) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond937) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond937) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond937) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond937) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond937) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond937) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond937) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond937) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond937) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond937) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond937) CFA_SP SP+-7
          CFI (cfiCond937) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond938 Using cfiCommon0
          CFI (cfiCond938) Function ZDMatchSendState
          CFI (cfiCond938) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_582
          CFI (cfiCond938) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond938) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond938) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond938) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond938) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond938) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond938) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond938) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond938) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond938) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond938) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond938) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond938) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond938) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond938) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond938) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond938) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond938) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond938) CFA_SP SP+-6
          CFI (cfiCond938) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond939 Using cfiCommon0
          CFI (cfiCond939) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond939) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_564
          CFI (cfiCond939) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond939) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond939) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond939) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond939) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond939) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond939) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond939) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond939) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond939) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond939) CFA_SP SP+-6
          CFI (cfiCond939) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond940 Using cfiCommon0
          CFI (cfiCond940) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond940) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_565
          CFI (cfiCond940) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond940) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond940) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond940) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond940) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond940) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond940) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond940) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond940) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond940) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond940) CFA_SP SP+-6
          CFI (cfiCond940) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond941 Using cfiCommon0
          CFI (cfiCond941) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond941) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_566
          CFI (cfiCond941) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond941) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond941) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond941) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond941) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond941) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond941) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond941) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond941) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond941) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond941) CFA_SP SP+-6
          CFI (cfiCond941) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond942 Using cfiCommon0
          CFI (cfiCond942) Function ZDMatchSendState
          CFI (cfiCond942) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_567
          CFI (cfiCond942) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond942) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond942) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond942) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond942) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond942) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond942) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond942) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond942) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond942) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond942) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond942) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond942) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond942) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond942) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond942) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond942) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond942) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond942) CFA_SP SP+-6
          CFI (cfiCond942) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond943 Using cfiCommon0
          CFI (cfiCond943) Function ZDO_ParseAddrRsp
          CFI (cfiCond943) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_568
          CFI (cfiCond943) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond943) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond943) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond943) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond943) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond943) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond943) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond943) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond943) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond943) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond943) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond943) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond943) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond943) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond943) CFA_SP SP+-6
          CFI (cfiCond943) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond944 Using cfiCommon0
          CFI (cfiCond944) Function ZDMatchSendState
          CFI (cfiCond944) Conditional ??CrossCallReturnLabel_595, ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_134
          CFI (cfiCond944) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond944) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond944) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond944) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond944) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond944) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond944) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond944) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond944) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond944) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond944) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond944) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond944) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond944) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond944) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond944) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond944) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond944) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond944) CFA_SP SP+-6
          CFI (cfiCond944) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond945 Using cfiCommon0
          CFI (cfiCond945) Function ZDMatchSendState
          CFI (cfiCond945) Conditional ??CrossCallReturnLabel_595, ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_135
          CFI (cfiCond945) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond945) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond945) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond945) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond945) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond945) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond945) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond945) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond945) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond945) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond945) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond945) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond945) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond945) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond945) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond945) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond945) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond945) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond945) CFA_SP SP+-6
          CFI (cfiCond945) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond946 Using cfiCommon0
          CFI (cfiCond946) Function ZDMatchSendState
          CFI (cfiCond946) Conditional ??CrossCallReturnLabel_595, ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_129
          CFI (cfiCond946) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond946) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond946) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond946) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond946) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond946) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond946) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond946) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond946) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond946) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond946) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond946) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond946) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond946) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond946) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond946) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond946) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond946) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond946) CFA_SP SP+-6
          CFI (cfiCond946) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond947 Using cfiCommon0
          CFI (cfiCond947) Function ZDMatchSendState
          CFI (cfiCond947) Conditional ??CrossCallReturnLabel_595, ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_130
          CFI (cfiCond947) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond947) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond947) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond947) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond947) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond947) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond947) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond947) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond947) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond947) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond947) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond947) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond947) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond947) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond947) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond947) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond947) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond947) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond947) CFA_SP SP+-6
          CFI (cfiCond947) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond948 Using cfiCommon0
          CFI (cfiCond948) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond948) Conditional ??CrossCallReturnLabel_594, ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_99
          CFI (cfiCond948) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond948) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond948) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond948) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond948) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond948) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond948) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond948) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond948) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond948) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond948) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond948) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond948) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond948) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond948) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond948) CFA_SP SP+-6
          CFI (cfiCond948) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond949 Using cfiCommon0
          CFI (cfiCond949) Function ZDMatchSendState
          CFI (cfiCond949) Conditional ??CrossCallReturnLabel_594, ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_100
          CFI (cfiCond949) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond949) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond949) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond949) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond949) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond949) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond949) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond949) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond949) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond949) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond949) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond949) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond949) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond949) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond949) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond949) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond949) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond949) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond949) CFA_SP SP+-6
          CFI (cfiCond949) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond950 Using cfiCommon0
          CFI (cfiCond950) Function ZDMatchSendState
          CFI (cfiCond950) Conditional ??CrossCallReturnLabel_594, ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_101
          CFI (cfiCond950) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond950) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond950) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond950) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond950) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond950) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond950) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond950) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond950) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond950) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond950) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond950) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond950) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond950) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond950) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond950) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond950) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond950) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond950) CFA_SP SP+-6
          CFI (cfiCond950) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond951 Using cfiCommon0
          CFI (cfiCond951) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond951) Conditional ??CrossCallReturnLabel_594, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_90
          CFI (cfiCond951) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond951) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond951) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond951) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond951) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond951) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond951) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond951) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond951) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond951) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond951) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond951) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond951) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond951) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond951) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond951) CFA_SP SP+-6
          CFI (cfiCond951) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond952 Using cfiCommon0
          CFI (cfiCond952) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond952) Conditional ??CrossCallReturnLabel_594, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_91
          CFI (cfiCond952) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond952) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond952) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond952) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond952) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond952) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond952) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond952) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond952) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond952) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond952) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond952) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond952) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond952) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond952) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond952) CFA_SP SP+-6
          CFI (cfiCond952) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond953 Using cfiCommon0
          CFI (cfiCond953) Function ZDMatchSendState
          CFI (cfiCond953) Conditional ??CrossCallReturnLabel_594, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_92
          CFI (cfiCond953) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond953) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond953) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond953) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond953) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond953) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond953) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond953) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond953) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond953) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond953) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond953) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond953) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond953) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond953) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond953) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond953) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond953) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond953) CFA_SP SP+-6
          CFI (cfiCond953) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond954 Using cfiCommon0
          CFI (cfiCond954) Function ZDMatchSendState
          CFI (cfiCond954) Conditional ??CrossCallReturnLabel_593, ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_125
          CFI (cfiCond954) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond954) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond954) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond954) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond954) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond954) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond954) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond954) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond954) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond954) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond954) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond954) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond954) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond954) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond954) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond954) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond954) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond954) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond954) CFA_SP SP+-6
          CFI (cfiCond954) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond955 Using cfiCommon0
          CFI (cfiCond955) Function ZDMatchSendState
          CFI (cfiCond955) Conditional ??CrossCallReturnLabel_593, ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_126
          CFI (cfiCond955) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond955) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond955) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond955) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond955) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond955) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond955) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond955) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond955) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond955) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond955) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond955) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond955) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond955) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond955) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond955) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond955) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond955) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond955) CFA_SP SP+-6
          CFI (cfiCond955) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond956 Using cfiCommon0
          CFI (cfiCond956) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond956) Conditional ??CrossCallReturnLabel_593, ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_87
          CFI (cfiCond956) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond956) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond956) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond956) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond956) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond956) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond956) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond956) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond956) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond956) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond956) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond956) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond956) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond956) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond956) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond956) CFA_SP SP+-6
          CFI (cfiCond956) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond957 Using cfiCommon0
          CFI (cfiCond957) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond957) Conditional ??CrossCallReturnLabel_593, ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_88
          CFI (cfiCond957) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond957) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond957) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond957) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond957) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond957) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond957) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond957) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond957) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond957) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond957) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond957) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond957) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond957) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond957) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond957) CFA_SP SP+-6
          CFI (cfiCond957) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond958 Using cfiCommon0
          CFI (cfiCond958) Function ZDMatchSendState
          CFI (cfiCond958) Conditional ??CrossCallReturnLabel_593, ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_89
          CFI (cfiCond958) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond958) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond958) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond958) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond958) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond958) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond958) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond958) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond958) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond958) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond958) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond958) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond958) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond958) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond958) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond958) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond958) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond958) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond958) CFA_SP SP+-6
          CFI (cfiCond958) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker959 Using cfiCommon1
          CFI (cfiPicker959) NoFunction
          CFI (cfiPicker959) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        XCH     A,R0
        RET
          CFI EndBlock cfiCond906
          CFI EndBlock cfiCond907
          CFI EndBlock cfiCond908
          CFI EndBlock cfiCond909
          CFI EndBlock cfiCond910
          CFI EndBlock cfiCond911
          CFI EndBlock cfiCond912
          CFI EndBlock cfiCond913
          CFI EndBlock cfiCond914
          CFI EndBlock cfiCond915
          CFI EndBlock cfiCond916
          CFI EndBlock cfiCond917
          CFI EndBlock cfiCond918
          CFI EndBlock cfiCond919
          CFI EndBlock cfiCond920
          CFI EndBlock cfiCond921
          CFI EndBlock cfiCond922
          CFI EndBlock cfiCond923
          CFI EndBlock cfiCond924
          CFI EndBlock cfiCond925
          CFI EndBlock cfiCond926
          CFI EndBlock cfiCond927
          CFI EndBlock cfiCond928
          CFI EndBlock cfiCond929
          CFI EndBlock cfiCond930
          CFI EndBlock cfiCond931
          CFI EndBlock cfiCond932
          CFI EndBlock cfiCond933
          CFI EndBlock cfiCond934
          CFI EndBlock cfiCond935
          CFI EndBlock cfiCond936
          CFI EndBlock cfiCond937
          CFI EndBlock cfiCond938
          CFI EndBlock cfiCond939
          CFI EndBlock cfiCond940
          CFI EndBlock cfiCond941
          CFI EndBlock cfiCond942
          CFI EndBlock cfiCond943
          CFI EndBlock cfiCond944
          CFI EndBlock cfiCond945
          CFI EndBlock cfiCond946
          CFI EndBlock cfiCond947
          CFI EndBlock cfiCond948
          CFI EndBlock cfiCond949
          CFI EndBlock cfiCond950
          CFI EndBlock cfiCond951
          CFI EndBlock cfiCond952
          CFI EndBlock cfiCond953
          CFI EndBlock cfiCond954
          CFI EndBlock cfiCond955
          CFI EndBlock cfiCond956
          CFI EndBlock cfiCond957
          CFI EndBlock cfiCond958
          CFI EndBlock cfiPicker959

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine82:
          CFI Block cfiCond960 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_134
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond961 Using cfiCommon0
          CFI (cfiCond961) Function ZDMatchSendState
          CFI (cfiCond961) Conditional ??CrossCallReturnLabel_135
          CFI (cfiCond961) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond961) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond961) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond961) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond961) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond961) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond961) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond961) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond961) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond961) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond961) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond961) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond961) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond961) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond961) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond961) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond961) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond961) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond961) CFA_SP SP+-2
          CFI (cfiCond961) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker962 Using cfiCommon1
          CFI (cfiPicker962) NoFunction
          CFI (cfiPicker962) Picker
        LCALL   ?Subroutine170 & 0xFFFF
??CrossCallReturnLabel_287:
        MOV     A,#0x1
        RET
          CFI EndBlock cfiCond960
          CFI EndBlock cfiCond961
          CFI EndBlock cfiPicker962

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine80:
          CFI Block cfiCond963 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_129
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond964 Using cfiCommon0
          CFI (cfiCond964) Function ZDMatchSendState
          CFI (cfiCond964) Conditional ??CrossCallReturnLabel_130
          CFI (cfiCond964) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond964) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond964) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond964) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond964) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond964) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond964) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond964) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond964) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond964) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond964) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond964) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond964) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond964) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond964) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond964) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond964) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond964) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond964) CFA_SP SP+-2
          CFI (cfiCond964) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker965 Using cfiCommon1
          CFI (cfiPicker965) NoFunction
          CFI (cfiPicker965) Picker
        MOV     DPTR,#matchED
        LCALL   ?Subroutine170 & 0xFFFF
??CrossCallReturnLabel_286:
        MOVX    A,@DPTR
        XRL     A,#0x1
        RET
          CFI EndBlock cfiCond963
          CFI EndBlock cfiCond964
          CFI EndBlock cfiPicker965

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine170:
          CFI Block cfiCond966 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_134
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond967 Using cfiCommon0
          CFI (cfiCond967) Function ZDMatchSendState
          CFI (cfiCond967) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_135
          CFI (cfiCond967) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond967) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond967) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond967) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond967) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond967) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond967) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond967) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond967) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond967) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond967) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond967) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond967) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond967) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond967) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond967) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond967) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond967) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond967) CFA_SP SP+-4
          CFI (cfiCond967) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond968 Using cfiCommon0
          CFI (cfiCond968) Function ZDMatchSendState
          CFI (cfiCond968) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_129
          CFI (cfiCond968) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond968) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond968) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond968) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond968) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond968) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond968) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond968) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond968) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond968) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond968) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond968) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond968) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond968) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond968) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond968) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond968) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond968) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond968) CFA_SP SP+-4
          CFI (cfiCond968) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond969 Using cfiCommon0
          CFI (cfiCond969) Function ZDMatchSendState
          CFI (cfiCond969) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_130
          CFI (cfiCond969) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond969) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond969) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond969) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond969) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond969) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond969) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond969) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond969) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond969) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond969) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond969) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond969) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond969) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond969) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond969) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond969) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond969) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond969) CFA_SP SP+-4
          CFI (cfiCond969) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker970 Using cfiCommon1
          CFI (cfiPicker970) NoFunction
          CFI (cfiPicker970) Picker
        LCALL   ?Subroutine200 & 0xFFFF
??CrossCallReturnLabel_595:
        LCALL   ?Subroutine205 & 0xFFFF
??CrossCallReturnLabel_327:
        RET
          CFI EndBlock cfiCond966
          CFI EndBlock cfiCond967
          CFI EndBlock cfiCond968
          CFI EndBlock cfiCond969
          CFI EndBlock cfiPicker970

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine205:
          CFI Block cfiCond971 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_326
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond972 Using cfiCommon0
          CFI (cfiCond972) Function ZDMatchSendState
          CFI (cfiCond972) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_134
          CFI (cfiCond972) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond972) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond972) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond972) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond972) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond972) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond972) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond972) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond972) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond972) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond972) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond972) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond972) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond972) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond972) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond972) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond972) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond972) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond972) CFA_SP SP+-6
          CFI (cfiCond972) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond973 Using cfiCommon0
          CFI (cfiCond973) Function ZDMatchSendState
          CFI (cfiCond973) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_135
          CFI (cfiCond973) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond973) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond973) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond973) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond973) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond973) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond973) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond973) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond973) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond973) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond973) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond973) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond973) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond973) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond973) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond973) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond973) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond973) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond973) CFA_SP SP+-6
          CFI (cfiCond973) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond974 Using cfiCommon0
          CFI (cfiCond974) Function ZDMatchSendState
          CFI (cfiCond974) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_129
          CFI (cfiCond974) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond974) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond974) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond974) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond974) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond974) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond974) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond974) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond974) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond974) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond974) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond974) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond974) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond974) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond974) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond974) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond974) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond974) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond974) CFA_SP SP+-6
          CFI (cfiCond974) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond975 Using cfiCommon0
          CFI (cfiCond975) Function ZDMatchSendState
          CFI (cfiCond975) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_130
          CFI (cfiCond975) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond975) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond975) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond975) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond975) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond975) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond975) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond975) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond975) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond975) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond975) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond975) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond975) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond975) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond975) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond975) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond975) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond975) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond975) CFA_SP SP+-6
          CFI (cfiCond975) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker976 Using cfiCommon1
          CFI (cfiPicker976) NoFunction
          CFI (cfiPicker976) Picker
        ADD     A,#0x2f
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond971
          CFI EndBlock cfiCond972
          CFI EndBlock cfiCond973
          CFI EndBlock cfiCond974
          CFI EndBlock cfiCond975
          CFI EndBlock cfiPicker976

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine79:
          CFI Block cfiCond977 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_127
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond978 Using cfiCommon0
          CFI (cfiCond978) Function ZDMatchSendState
          CFI (cfiCond978) Conditional ??CrossCallReturnLabel_128
          CFI (cfiCond978) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond978) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond978) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond978) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond978) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond978) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond978) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond978) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond978) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond978) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond978) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond978) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond978) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond978) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond978) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond978) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond978) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond978) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond978) CFA_SP SP+-2
          CFI (cfiCond978) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker979 Using cfiCommon1
          CFI (cfiPicker979) NoFunction
          CFI (cfiPicker979) Picker
        LCALL   ?Subroutine171 & 0xFFFF
??CrossCallReturnLabel_587:
        LCALL   ?Subroutine193 & 0xFFFF
??CrossCallReturnLabel_310:
        MOVX    A,@DPTR
        XRL     A,#0x2
        RET
          CFI EndBlock cfiCond977
          CFI EndBlock cfiCond978
          CFI EndBlock cfiPicker979

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine77:
          CFI Block cfiCond980 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_125
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond981 Using cfiCommon0
          CFI (cfiCond981) Function ZDMatchSendState
          CFI (cfiCond981) Conditional ??CrossCallReturnLabel_126
          CFI (cfiCond981) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond981) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond981) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond981) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond981) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond981) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond981) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond981) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond981) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond981) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond981) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond981) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond981) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond981) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond981) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond981) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond981) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond981) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond981) CFA_SP SP+-2
          CFI (cfiCond981) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker982 Using cfiCommon1
          CFI (cfiPicker982) NoFunction
          CFI (cfiPicker982) Picker
        LCALL   ?Subroutine167 & 0xFFFF
??CrossCallReturnLabel_283:
        MOV     DPTR,#matchED
        RET
          CFI EndBlock cfiCond980
          CFI EndBlock cfiCond981
          CFI EndBlock cfiPicker982

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine76:
          CFI Block cfiCond983 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_123
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond984 Using cfiCommon0
          CFI (cfiCond984) Function ZDMatchSendState
          CFI (cfiCond984) Conditional ??CrossCallReturnLabel_124
          CFI (cfiCond984) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond984) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond984) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond984) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond984) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond984) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond984) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond984) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond984) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond984) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond984) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond984) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond984) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond984) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond984) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond984) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond984) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond984) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond984) CFA_SP SP+-2
          CFI (cfiCond984) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker985 Using cfiCommon1
          CFI (cfiPicker985) NoFunction
          CFI (cfiPicker985) Picker
        MOV     DPTR,#matchED
        LCALL   ?Subroutine169 & 0xFFFF
??CrossCallReturnLabel_401:
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine199 & 0xFFFF
??CrossCallReturnLabel_457:
        MOV     A,#0x1
        RET
          CFI EndBlock cfiCond983
          CFI EndBlock cfiCond984
          CFI EndBlock cfiPicker985

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine64:
          CFI Block cfiCond986 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_99
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond987 Using cfiCommon0
          CFI (cfiCond987) Function ZDMatchSendState
          CFI (cfiCond987) Conditional ??CrossCallReturnLabel_100
          CFI (cfiCond987) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond987) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond987) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond987) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond987) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond987) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond987) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond987) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond987) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond987) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond987) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond987) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond987) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond987) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond987) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond987) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond987) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond987) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond987) CFA_SP SP+-2
          CFI (cfiCond987) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond988 Using cfiCommon0
          CFI (cfiCond988) Function ZDMatchSendState
          CFI (cfiCond988) Conditional ??CrossCallReturnLabel_101
          CFI (cfiCond988) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond988) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond988) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond988) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond988) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond988) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond988) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond988) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond988) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond988) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond988) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond988) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond988) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond988) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond988) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond988) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond988) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond988) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond988) CFA_SP SP+-2
          CFI (cfiCond988) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker989 Using cfiCommon1
          CFI (cfiPicker989) NoFunction
          CFI (cfiPicker989) Picker
        LCALL   ?Subroutine168 & 0xFFFF
??CrossCallReturnLabel_285:
        RET
          CFI EndBlock cfiCond986
          CFI EndBlock cfiCond987
          CFI EndBlock cfiCond988
          CFI EndBlock cfiPicker989

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine168:
          CFI Block cfiCond990 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_99
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond991 Using cfiCommon0
          CFI (cfiCond991) Function ZDMatchSendState
          CFI (cfiCond991) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_100
          CFI (cfiCond991) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond991) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond991) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond991) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond991) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond991) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond991) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond991) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond991) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond991) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond991) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond991) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond991) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond991) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond991) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond991) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond991) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond991) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond991) CFA_SP SP+-4
          CFI (cfiCond991) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond992 Using cfiCommon0
          CFI (cfiCond992) Function ZDMatchSendState
          CFI (cfiCond992) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_101
          CFI (cfiCond992) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond992) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond992) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond992) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond992) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond992) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond992) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond992) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond992) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond992) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond992) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond992) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond992) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond992) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond992) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond992) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond992) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond992) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond992) CFA_SP SP+-4
          CFI (cfiCond992) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond993 Using cfiCommon0
          CFI (cfiCond993) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond993) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_90
          CFI (cfiCond993) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond993) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond993) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond993) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond993) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond993) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond993) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond993) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond993) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond993) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond993) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond993) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond993) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond993) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond993) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond993) CFA_SP SP+-4
          CFI (cfiCond993) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond994 Using cfiCommon0
          CFI (cfiCond994) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond994) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_91
          CFI (cfiCond994) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond994) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond994) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond994) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond994) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond994) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond994) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond994) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond994) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond994) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond994) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond994) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond994) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond994) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond994) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond994) CFA_SP SP+-4
          CFI (cfiCond994) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond995 Using cfiCommon0
          CFI (cfiCond995) Function ZDMatchSendState
          CFI (cfiCond995) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_92
          CFI (cfiCond995) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond995) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond995) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond995) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond995) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond995) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond995) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond995) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond995) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond995) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond995) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond995) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond995) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond995) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond995) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond995) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond995) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond995) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond995) CFA_SP SP+-4
          CFI (cfiCond995) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker996 Using cfiCommon1
          CFI (cfiPicker996) NoFunction
          CFI (cfiPicker996) Picker
        LCALL   ?Subroutine200 & 0xFFFF
??CrossCallReturnLabel_594:
        ADD     A,#0x34
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond990
          CFI EndBlock cfiCond991
          CFI EndBlock cfiCond992
          CFI EndBlock cfiCond993
          CFI EndBlock cfiCond994
          CFI EndBlock cfiCond995
          CFI EndBlock cfiPicker996

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine61:
          CFI Block cfiCond997 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_95
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond998 Using cfiCommon0
          CFI (cfiCond998) Function ZDMatchSendState
          CFI (cfiCond998) Conditional ??CrossCallReturnLabel_96
          CFI (cfiCond998) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond998) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond998) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond998) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond998) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond998) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond998) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond998) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond998) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond998) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond998) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond998) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond998) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond998) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond998) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond998) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond998) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond998) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond998) CFA_SP SP+-2
          CFI (cfiCond998) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker999 Using cfiCommon1
          CFI (cfiPicker999) NoFunction
          CFI (cfiPicker999) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R2
        MOV     DPH,A
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     R1,A
        MOV     A,R0
        ADD     A,#-0x2
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#-0x1
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V8,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V9,A
        MOV     DPTR,#matchED
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond997
          CFI EndBlock cfiCond998
          CFI EndBlock cfiPicker999

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine59:
          CFI Block cfiCond1000 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_90
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1001 Using cfiCommon0
          CFI (cfiCond1001) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1001) Conditional ??CrossCallReturnLabel_91
          CFI (cfiCond1001) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1001) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1001) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1001) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1001) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1001) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1001) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1001) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1001) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1001) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1001) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1001) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1001) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1001) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1001) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1001) CFA_SP SP+-2
          CFI (cfiCond1001) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1002 Using cfiCommon0
          CFI (cfiCond1002) Function ZDMatchSendState
          CFI (cfiCond1002) Conditional ??CrossCallReturnLabel_92
          CFI (cfiCond1002) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1002) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1002) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1002) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1002) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1002) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1002) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1002) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1002) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1002) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1002) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1002) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1002) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1002) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1002) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1002) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1002) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1002) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1002) CFA_SP SP+-2
          CFI (cfiCond1002) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1003 Using cfiCommon1
          CFI (cfiPicker1003) NoFunction
          CFI (cfiPicker1003) Picker
        MOV     DPTR,#matchED
        LCALL   ?Subroutine168 & 0xFFFF
??CrossCallReturnLabel_284:
        ADD     A,0xE0 /* A   */
        RET
          CFI EndBlock cfiCond1000
          CFI EndBlock cfiCond1001
          CFI EndBlock cfiCond1002
          CFI EndBlock cfiPicker1003

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine58:
          CFI Block cfiCond1004 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_87
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1005 Using cfiCommon0
          CFI (cfiCond1005) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1005) Conditional ??CrossCallReturnLabel_88
          CFI (cfiCond1005) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1005) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1005) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1005) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1005) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1005) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1005) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1005) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1005) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1005) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1005) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1005) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1005) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1005) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1005) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1005) CFA_SP SP+-2
          CFI (cfiCond1005) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1006 Using cfiCommon0
          CFI (cfiCond1006) Function ZDMatchSendState
          CFI (cfiCond1006) Conditional ??CrossCallReturnLabel_89
          CFI (cfiCond1006) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1006) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1006) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1006) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1006) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1006) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1006) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1006) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1006) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1006) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1006) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1006) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1006) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1006) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1006) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1006) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1006) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1006) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1006) CFA_SP SP+-2
          CFI (cfiCond1006) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1007 Using cfiCommon1
          CFI (cfiPicker1007) NoFunction
          CFI (cfiPicker1007) Picker
        LCALL   ?Subroutine167 & 0xFFFF
??CrossCallReturnLabel_282:
        ADD     A,0xE0 /* A   */
        RET
          CFI EndBlock cfiCond1004
          CFI EndBlock cfiCond1005
          CFI EndBlock cfiCond1006
          CFI EndBlock cfiPicker1007

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine167:
          CFI Block cfiCond1008 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_125
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1009 Using cfiCommon0
          CFI (cfiCond1009) Function ZDMatchSendState
          CFI (cfiCond1009) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_126
          CFI (cfiCond1009) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1009) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1009) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1009) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1009) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1009) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1009) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1009) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1009) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1009) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1009) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1009) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1009) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1009) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1009) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1009) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1009) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1009) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1009) CFA_SP SP+-4
          CFI (cfiCond1009) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1010 Using cfiCommon0
          CFI (cfiCond1010) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1010) Conditional ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_87
          CFI (cfiCond1010) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1010) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1010) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1010) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1010) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1010) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1010) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1010) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1010) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1010) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1010) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1010) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1010) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1010) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1010) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1010) CFA_SP SP+-4
          CFI (cfiCond1010) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1011 Using cfiCommon0
          CFI (cfiCond1011) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1011) Conditional ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_88
          CFI (cfiCond1011) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1011) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1011) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1011) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1011) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1011) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1011) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1011) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1011) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1011) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1011) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1011) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1011) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1011) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1011) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1011) CFA_SP SP+-4
          CFI (cfiCond1011) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1012 Using cfiCommon0
          CFI (cfiCond1012) Function ZDMatchSendState
          CFI (cfiCond1012) Conditional ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_89
          CFI (cfiCond1012) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1012) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1012) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1012) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1012) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1012) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1012) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1012) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1012) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1012) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1012) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1012) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1012) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1012) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1012) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1012) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1012) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1012) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1012) CFA_SP SP+-4
          CFI (cfiCond1012) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1013 Using cfiCommon1
          CFI (cfiPicker1013) NoFunction
          CFI (cfiPicker1013) Picker
        MOV     DPTR,#matchED
        LCALL   ?Subroutine200 & 0xFFFF
??CrossCallReturnLabel_593:
        ADD     A,#0x31
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1008
          CFI EndBlock cfiCond1009
          CFI EndBlock cfiCond1010
          CFI EndBlock cfiCond1011
          CFI EndBlock cfiCond1012
          CFI EndBlock cfiPicker1013

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine38:
          CFI Block cfiCond1014 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_53
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1015 Using cfiCommon0
          CFI (cfiCond1015) Function ZDMatchSendState
          CFI (cfiCond1015) Conditional ??CrossCallReturnLabel_54
          CFI (cfiCond1015) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1015) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1015) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1015) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1015) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1015) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1015) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1015) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1015) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1015) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1015) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1015) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1015) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1015) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1015) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1015) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1015) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1015) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1015) CFA_SP SP+-2
          CFI (cfiCond1015) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1016 Using cfiCommon1
          CFI (cfiPicker1016) NoFunction
          CFI (cfiPicker1016) Picker
        LCALL   ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_478:
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        RET
          CFI EndBlock cfiCond1014
          CFI EndBlock cfiCond1015
          CFI EndBlock cfiPicker1016

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine15:
          CFI Block cfiCond1017 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_8
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1018 Using cfiCommon0
          CFI (cfiCond1018) Function ZDMatchSendState
          CFI (cfiCond1018) Conditional ??CrossCallReturnLabel_9
          CFI (cfiCond1018) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1018) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1018) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1018) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1018) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1018) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1018) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1018) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1018) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1018) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1018) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1018) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1018) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1018) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1018) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1018) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1018) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1018) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1018) CFA_SP SP+-2
          CFI (cfiCond1018) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1019 Using cfiCommon1
          CFI (cfiPicker1019) NoFunction
          CFI (cfiPicker1019) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ?Subroutine153 & 0xFFFF
??CrossCallReturnLabel_477:
        MOV     DPH,A
        MOV     DPL,R0
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0,A
        MOV     R0,#?V0
        RET
          CFI EndBlock cfiCond1017
          CFI EndBlock cfiCond1018
          CFI EndBlock cfiPicker1019
// 2556 
// 2557 /*********************************************************************
// 2558  * @fn      ZDO_EndDeviceBindMatchTimeoutCB()
// 2559  *
// 2560  * @brief   End device bind timeout.
// 2561  *
// 2562  * @param  none
// 2563  *
// 2564  * @return  none
// 2565  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2566 static void ZDO_EndDeviceBindMatchTimeoutCB( void )
ZDO_EndDeviceBindMatchTimeoutCB:
          CFI Block cfiBlock1020 Using cfiCommon0
          CFI Function ZDO_EndDeviceBindMatchTimeoutCB
        CODE
// 2567 {
        FUNCALL ZDO_EndDeviceBindMatchTimeoutCB, ZDMatchSendState
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2568   ZDMatchSendState( ZDMATCH_REASON_TIMEOUT, ZDP_TIMEOUT, 0 );
        ; Setup parameters for call to function ZDMatchSendState
        MOV     R3,#0x0
        MOV     R2,#-0x7b
        MOV     R1,#0x1
        LCALL   `??ZDMatchSendState::?relay`; Banked call to: ZDMatchSendState
// 2569 }
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock1020
// 2570 #endif // ZG_BUILD_COORDINATOR_TYPE
// 2571 
// 2572 /*********************************************************************
// 2573  * ZDO MESSAGE PARSING API FUNCTIONS
// 2574  */
// 2575 
// 2576 /*********************************************************************
// 2577  * @fn          ZDO_ParseEndDeviceBindReq
// 2578  *
// 2579  * @brief       This function parses the End_Device_Bind_req message.
// 2580  *
// 2581  *     NOTE:  The clusters lists in bindReq are allocated in this
// 2582  *            function and must be freed by that calling function.
// 2583  *
// 2584  * @param       inMsg  - incoming message (request)
// 2585  * @param       bindReq - pointer to place to parse message to
// 2586  *
// 2587  * @return      none
// 2588  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2589 void ZDO_ParseEndDeviceBindReq( zdoIncomingMsg_t *inMsg, ZDEndDeviceBind_t *bindReq )
ZDO_ParseEndDeviceBindReq:
          CFI Block cfiBlock1021 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
        CODE
// 2590 {
        FUNCALL ZDO_ParseEndDeviceBindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
// 2591   uint8 *msg;
// 2592 
// 2593   // Parse the message
// 2594   bindReq->TransSeq = inMsg->TransSeq;
        MOV     A,R2
        LCALL   ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_218:
        ADDC    A,R3
        MOV     DPH,A
        LCALL   ?Subroutine178 & 0xFFFF
??CrossCallReturnLabel_292:
        LCALL   ?Subroutine39 & 0xFFFF
// 2595   bindReq->srcAddr = inMsg->srcAddr.addr.shortAddr;
??CrossCallReturnLabel_55:
        LCALL   ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_163:
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine220_0 & 0xFFFF
// 2596   bindReq->SecurityUse = inMsg->SecurityUse;
??CrossCallReturnLabel_378:
        MOV     A,R2
        LCALL   ??Subroutine254_0 & 0xFFFF
??CrossCallReturnLabel_597:
        ADDC    A,R3
        MOV     DPH,A
        LCALL   ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_170:
        MOVX    @DPTR,A
// 2597   msg = inMsg->asdu;
        LCALL   ?Subroutine95 & 0xFFFF
// 2598 
// 2599   bindReq->localCoordinator = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_562:
        MOV     DPL,?V0
        MOV     DPH,A
        LCALL   ??Subroutine262_0 & 0xFFFF
??CrossCallReturnLabel_638:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine221_0 & 0xFFFF
// 2600   msg += 2;
??CrossCallReturnLabel_364:
        MOV     A,?V0
        ADD     A,#0x2
        MOV     ?V0,A
        JNC     ??ZDO_ParseEndDeviceBindReq_0
        INC     ?V1
// 2601 
// 2602   osal_cpyExtAddr( bindReq->ieeeAddr, msg );
??ZDO_ParseEndDeviceBindReq_0:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,A
        MOV     R5,?V1
        MOV     A,R6
        ADD     A,#0x6
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2603   msg += Z_EXTADDR_LEN;
// 2604 
// 2605   bindReq->endpoint = *msg++;
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine136 & 0xFFFF
??CrossCallReturnLabel_223:
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,?V0
        ADD     A,#0x9
        MOV     ?V0,A
        JNC     ??ZDO_ParseEndDeviceBindReq_1
        INC     ?V1
// 2606   bindReq->profileID = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseEndDeviceBindReq_1:
        MOV     DPL,A
        MOV     DPH,?V1
        LCALL   ??Subroutine262_0 & 0xFFFF
??CrossCallReturnLabel_639:
        MOV     R0,A
        MOV     A,R6
        ADD     A,#0xf
        LCALL   ?Subroutine53 & 0xFFFF
// 2607   msg += 2;
// 2608 
// 2609   bindReq->inClusters = NULL;
??CrossCallReturnLabel_379:
        LCALL   ?Subroutine18 & 0xFFFF
// 2610   bindReq->outClusters = NULL;
// 2611 
// 2612   if ((bindReq->numInClusters = *msg++) &&
// 2613       (bindReq->inClusters = (uint16*)osal_mem_alloc( (bindReq->numInClusters * sizeof( uint16 )))))
??CrossCallReturnLabel_17:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,R6
        ADD     A,#0x11
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,R2
        MOVX    @DPTR,A
        MOV     A,?V0
        ADD     A,#0x3
        MOV     ?V0,A
        JNC     ??ZDO_ParseEndDeviceBindReq_2
        INC     ?V1
??ZDO_ParseEndDeviceBindReq_2:
        MOV     A,R2
        JZ      ??ZDO_ParseEndDeviceBindReq_3
        LCALL   ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_674:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     R0,?V2
        MOV     R1,?V3
        LCALL   ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_521:
        JZ      ??ZDO_ParseEndDeviceBindReq_3
// 2614   {
// 2615     msg = ZDO_ConvertOTAClusters( bindReq->numInClusters, msg, bindReq->inClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     A,R6
        ADD     A,#0x12
        LCALL   ?Subroutine100 & 0xFFFF
// 2616   }
??CrossCallReturnLabel_156:
        ADD     A,#0x11
        LCALL   ??Subroutine249_0 & 0xFFFF
??CrossCallReturnLabel_547:
        MOV     R1,A
        LCALL   `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        MOV     ?V0,R2
        MOV     ?V1,R3
        SJMP    ??ZDO_ParseEndDeviceBindReq_4
// 2617   else
// 2618   {
// 2619     bindReq->numInClusters = 0;
??ZDO_ParseEndDeviceBindReq_3:
        MOV     A,R6
        ADD     A,#0x11
        LCALL   ??Subroutine248_0 & 0xFFFF
// 2620   }
??CrossCallReturnLabel_537:
        MOVX    @DPTR,A
// 2621 
// 2622   if ((bindReq->numOutClusters = *msg++) &&
// 2623       (bindReq->outClusters = (uint16*)osal_mem_alloc((bindReq->numOutClusters * sizeof(uint16)))))
??ZDO_ParseEndDeviceBindReq_4:
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    A,@DPTR
        MOV     R2,A
        LCALL   ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_530:
        MOV     A,R2
        LCALL   ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_86:
        MOV     ?V0,DPL
        MOV     ?V1,DPH
        JZ      ??ZDO_ParseEndDeviceBindReq_5
        MOV     A,R6
        ADD     A,#0x14
        LCALL   ??Subroutine249_0 & 0xFFFF
??CrossCallReturnLabel_548:
        LCALL   ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_675:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     R0,?V2
        MOV     R1,?V3
        MOV     A,R6
        ADD     A,#0x15
        LCALL   ??Subroutine244_0 & 0xFFFF
??CrossCallReturnLabel_520:
        JZ      ??ZDO_ParseEndDeviceBindReq_5
// 2624   {
// 2625     msg = ZDO_ConvertOTAClusters( bindReq->numOutClusters, msg, bindReq->outClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     A,R6
        ADD     A,#0x15
        LCALL   ?Subroutine100 & 0xFFFF
// 2626   }
??CrossCallReturnLabel_157:
        ADD     A,#0x14
        LCALL   ??Subroutine249_0 & 0xFFFF
??CrossCallReturnLabel_549:
        MOV     R1,A
        LCALL   `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        SJMP    ??ZDO_ParseEndDeviceBindReq_6
// 2627   else
// 2628   {
// 2629     bindReq->numOutClusters = 0;
??ZDO_ParseEndDeviceBindReq_5:
        LCALL   ?Subroutine131 & 0xFFFF
// 2630   }
??CrossCallReturnLabel_540:
        MOVX    @DPTR,A
// 2631 }
??ZDO_ParseEndDeviceBindReq_6:
        LJMP    ??Subroutine208_0 & 0xFFFF
          CFI EndBlock cfiBlock1021

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine139:
          CFI Block cfiCond1022 Using cfiCommon0
          CFI Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_529
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1023 Using cfiCommon0
          CFI (cfiCond1023) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1023) Conditional ??CrossCallReturnLabel_530
          CFI (cfiCond1023) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1023) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1023) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1023) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1023) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1023) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1023) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1023) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1023) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1023) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1023) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1023) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1023) CFA_SP SP+-2
          CFI (cfiCond1023) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1024 Using cfiCommon0
          CFI (cfiCond1024) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1024) Conditional ??CrossCallReturnLabel_531
          CFI (cfiCond1024) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1024) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1024) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1024) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1024) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1024) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1024) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1024) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1024) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1024) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1024) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1025 Using cfiCommon0
          CFI (cfiCond1025) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1025) Conditional ??CrossCallReturnLabel_532
          CFI (cfiCond1025) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1025) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1025) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1025) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1025) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1025) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1025) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1025) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1025) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1025) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1025) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1025) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1025) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1025) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1025) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1025) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1025) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1025) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1025) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1026 Using cfiCommon1
          CFI (cfiPicker1026) NoFunction
          CFI (cfiPicker1026) Picker
        MOV     A,R6
          CFI EndBlock cfiCond1022
          CFI EndBlock cfiCond1023
          CFI EndBlock cfiCond1024
          CFI EndBlock cfiCond1025
          CFI EndBlock cfiPicker1026
        REQUIRE ??Subroutine247_0
        ; // Fall through to label ??Subroutine247_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine247_0:
          CFI Block cfiCond1027 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_528
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1028 Using cfiCommon0
          CFI (cfiCond1028) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond1028) Conditional ??CrossCallReturnLabel_529
          CFI (cfiCond1028) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1028) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1028) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1028) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1028) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1028) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1028) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1028) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1028) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1028) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1028) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1028) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1028) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1028) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1028) CFA_SP SP+-2
          CFI (cfiCond1028) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1029 Using cfiCommon0
          CFI (cfiCond1029) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1029) Conditional ??CrossCallReturnLabel_530
          CFI (cfiCond1029) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1029) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1029) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1029) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1029) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1029) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1029) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1029) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1029) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1029) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1029) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1029) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1029) CFA_SP SP+-2
          CFI (cfiCond1029) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1030 Using cfiCommon0
          CFI (cfiCond1030) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1030) Conditional ??CrossCallReturnLabel_531
          CFI (cfiCond1030) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1030) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1030) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1030) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1030) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1030) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1030) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1030) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1030) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1030) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1030) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1031 Using cfiCommon0
          CFI (cfiCond1031) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1031) Conditional ??CrossCallReturnLabel_532
          CFI (cfiCond1031) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1031) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1031) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1031) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1031) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1031) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1031) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1031) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1031) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1031) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1031) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1031) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1031) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1031) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1031) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1031) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1031) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1031) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1031) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1032 Using cfiCommon1
          CFI (cfiPicker1032) NoFunction
          CFI (cfiPicker1032) Picker
        LCALL   ?Subroutine188 & 0xFFFF
??CrossCallReturnLabel_534:
        RET
          CFI EndBlock cfiCond1027
          CFI EndBlock cfiCond1028
          CFI EndBlock cfiCond1029
          CFI EndBlock cfiCond1030
          CFI EndBlock cfiCond1031
          CFI EndBlock cfiPicker1032

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine188:
          CFI Block cfiCond1033 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_533, ??CrossCallReturnLabel_206
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1034 Using cfiCommon0
          CFI (cfiCond1034) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1034) Conditional ??CrossCallReturnLabel_533, ??CrossCallReturnLabel_207
          CFI (cfiCond1034) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1034) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1034) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1034) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1034) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1034) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1034) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1034) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1034) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1034) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1034) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1034) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1034) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1034) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1034) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1034) CFA_SP SP+-4
          CFI (cfiCond1034) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1035 Using cfiCommon0
          CFI (cfiCond1035) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond1035) Conditional ??CrossCallReturnLabel_534, ??CrossCallReturnLabel_529
          CFI (cfiCond1035) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1035) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1035) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1035) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1035) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1035) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1035) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1035) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1035) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1035) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1035) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1035) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1035) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1035) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1035) CFA_SP SP+-4
          CFI (cfiCond1035) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1036 Using cfiCommon0
          CFI (cfiCond1036) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1036) Conditional ??CrossCallReturnLabel_534, ??CrossCallReturnLabel_530
          CFI (cfiCond1036) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1036) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1036) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1036) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1036) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1036) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1036) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1036) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1036) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1036) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1036) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1036) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1036) CFA_SP SP+-4
          CFI (cfiCond1036) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1037 Using cfiCommon0
          CFI (cfiCond1037) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1037) Conditional ??CrossCallReturnLabel_534, ??CrossCallReturnLabel_531
          CFI (cfiCond1037) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1037) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1037) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1037) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1037) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1037) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1037) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1037) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1037) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1037) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1037) CFA_SP SP+-5
          CFI (cfiCond1037) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1038 Using cfiCommon0
          CFI (cfiCond1038) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1038) Conditional ??CrossCallReturnLabel_534, ??CrossCallReturnLabel_532
          CFI (cfiCond1038) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1038) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1038) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1038) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1038) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1038) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1038) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1038) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1038) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1038) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1038) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1038) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1038) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1038) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1038) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1038) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1038) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1038) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1038) CFA_SP SP+-5
          CFI (cfiCond1038) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1039 Using cfiCommon0
          CFI (cfiCond1039) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1039) Conditional ??CrossCallReturnLabel_534, ??CrossCallReturnLabel_528
          CFI (cfiCond1039) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1039) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1039) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1039) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1039) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1039) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1039) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1039) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1039) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1039) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1039) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1039) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1039) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1039) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1039) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1039) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1039) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1039) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1039) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1039) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1039) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1039) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1039) CFA_SP SP+-4
          CFI (cfiCond1039) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker1040 Using cfiCommon1
          CFI (cfiPicker1040) NoFunction
          CFI (cfiPicker1040) Picker
        ADD     A,#0x14
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond1033
          CFI EndBlock cfiCond1034
          CFI EndBlock cfiCond1035
          CFI EndBlock cfiCond1036
          CFI EndBlock cfiCond1037
          CFI EndBlock cfiCond1038
          CFI EndBlock cfiCond1039
          CFI EndBlock cfiPicker1040

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine135:
          CFI Block cfiCond1041 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_215
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 64)
          CFI Block cfiCond1042 Using cfiCommon0
          CFI (cfiCond1042) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond1042) Conditional ??CrossCallReturnLabel_216
          CFI (cfiCond1042) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1042) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1042) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1042) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1042) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1042) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1042) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1042) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1042) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1042) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1042) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1042) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1042) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1042) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1042) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1042) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1042) CFA_SP SP+-2
          CFI (cfiCond1042) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1043 Using cfiCommon0
          CFI (cfiCond1043) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond1043) Conditional ??CrossCallReturnLabel_217
          CFI (cfiCond1043) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1043) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1043) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1043) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1043) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1043) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1043) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1043) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1043) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1043) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1043) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1043) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1043) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1043) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1043) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1043) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1043) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1043) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1043) CFA_SP SP+-2
          CFI (cfiCond1043) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1044 Using cfiCommon0
          CFI (cfiCond1044) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1044) Conditional ??CrossCallReturnLabel_218
          CFI (cfiCond1044) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1044) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1044) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1044) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1044) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1044) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1044) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1044) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1044) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1044) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1044) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1044) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1044) CFA_SP SP+-2
          CFI (cfiCond1044) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1045 Using cfiCommon0
          CFI (cfiCond1045) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1045) Conditional ??CrossCallReturnLabel_219
          CFI (cfiCond1045) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1045) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1045) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1045) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1045) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1045) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1045) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1045) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1045) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1045) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1045) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1045) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1045) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1046 Using cfiCommon0
          CFI (cfiCond1046) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1046) Conditional ??CrossCallReturnLabel_220
          CFI (cfiCond1046) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1046) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1046) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1046) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1046) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1046) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1046) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1046) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1046) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1046) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1046) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1046) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1046) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1046) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1046) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1046) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1046) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1047 Using cfiCommon1
          CFI (cfiPicker1047) NoFunction
          CFI (cfiPicker1047) Picker
        ADD     A,#0xf
        MOV     DPL,A
        CLR     A
        RET
          CFI EndBlock cfiCond1041
          CFI EndBlock cfiCond1042
          CFI EndBlock cfiCond1043
          CFI EndBlock cfiCond1044
          CFI EndBlock cfiCond1045
          CFI EndBlock cfiCond1046
          CFI EndBlock cfiPicker1047

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine131:
          CFI Block cfiCond1048 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_538
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1049 Using cfiCommon0
          CFI (cfiCond1049) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1049) Conditional ??CrossCallReturnLabel_539
          CFI (cfiCond1049) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1049) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1049) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1049) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1049) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1049) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1049) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1049) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1049) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1049) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1049) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1049) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1049) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1049) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1049) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1049) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1049) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1049) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1049) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1049) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1049) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1049) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1049) CFA_SP SP+-2
          CFI (cfiCond1049) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1050 Using cfiCommon0
          CFI (cfiCond1050) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1050) Conditional ??CrossCallReturnLabel_540
          CFI (cfiCond1050) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1050) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1050) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1050) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1050) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1050) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1050) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1050) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1050) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1050) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1050) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1050) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1050) CFA_SP SP+-2
          CFI (cfiCond1050) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1051 Using cfiCommon1
          CFI (cfiPicker1051) NoFunction
          CFI (cfiPicker1051) Picker
        MOV     A,R6
        ADD     A,#0x14
          CFI EndBlock cfiCond1048
          CFI EndBlock cfiCond1049
          CFI EndBlock cfiCond1050
          CFI EndBlock cfiPicker1051
        REQUIRE ??Subroutine248_0
        ; // Fall through to label ??Subroutine248_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine248_0:
          CFI Block cfiCond1052 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_535
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1053 Using cfiCommon0
          CFI (cfiCond1053) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1053) Conditional ??CrossCallReturnLabel_536
          CFI (cfiCond1053) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1053) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1053) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1053) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1053) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1053) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1053) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1053) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1053) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1053) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1053) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1053) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1053) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1053) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1053) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1053) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1053) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1053) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1053) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1053) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1053) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1053) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1053) CFA_SP SP+-2
          CFI (cfiCond1053) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1054 Using cfiCommon0
          CFI (cfiCond1054) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1054) Conditional ??CrossCallReturnLabel_537
          CFI (cfiCond1054) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1054) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1054) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1054) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1054) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1054) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1054) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1054) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1054) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1054) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1054) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1054) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1054) CFA_SP SP+-2
          CFI (cfiCond1054) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1055 Using cfiCommon0
          CFI (cfiCond1055) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1055) Conditional ??CrossCallReturnLabel_538
          CFI (cfiCond1055) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1055) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1055) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1055) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1055) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1055) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1055) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1055) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1055) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1055) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1055) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1055) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1055) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1055) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1055) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1055) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1055) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1055) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1055) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1055) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1055) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1055) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1055) CFA_SP SP+-2
          CFI (cfiCond1055) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1056 Using cfiCommon0
          CFI (cfiCond1056) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1056) Conditional ??CrossCallReturnLabel_539
          CFI (cfiCond1056) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1056) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1056) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1056) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1056) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1056) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1056) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1056) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1056) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1056) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1056) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1056) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1056) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1056) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1056) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1056) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1056) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1056) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1056) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1056) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1056) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1056) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1056) CFA_SP SP+-2
          CFI (cfiCond1056) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1057 Using cfiCommon0
          CFI (cfiCond1057) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1057) Conditional ??CrossCallReturnLabel_540
          CFI (cfiCond1057) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1057) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1057) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1057) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1057) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1057) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1057) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1057) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1057) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1057) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1057) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1057) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1057) CFA_SP SP+-2
          CFI (cfiCond1057) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1058 Using cfiCommon1
          CFI (cfiPicker1058) NoFunction
          CFI (cfiPicker1058) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        CLR     A
        RET
          CFI EndBlock cfiCond1052
          CFI EndBlock cfiCond1053
          CFI EndBlock cfiCond1054
          CFI EndBlock cfiCond1055
          CFI EndBlock cfiCond1056
          CFI EndBlock cfiCond1057
          CFI EndBlock cfiPicker1058

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine130:
          CFI Block cfiCond1059 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_552
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1060 Using cfiCommon0
          CFI (cfiCond1060) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond1060) Conditional ??CrossCallReturnLabel_553
          CFI (cfiCond1060) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1060) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1060) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1060) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1060) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1060) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1060) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1060) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1060) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1060) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1060) CFA_SP SP+-2
          CFI (cfiCond1060) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1061 Using cfiCommon0
          CFI (cfiCond1061) Function ZDO_ProcessUserDescReq
          CFI (cfiCond1061) Conditional ??CrossCallReturnLabel_554
          CFI (cfiCond1061) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1061) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1061) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1061) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1061) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1061) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1061) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1061) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1061) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1061) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1061) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1061) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1061) CFA_SP SP+-2
          CFI (cfiCond1061) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker1062 Using cfiCommon1
          CFI (cfiPicker1062) NoFunction
          CFI (cfiPicker1062) Picker
        MOV     A,R6
        ADD     A,#0xe
          CFI EndBlock cfiCond1059
          CFI EndBlock cfiCond1060
          CFI EndBlock cfiCond1061
          CFI EndBlock cfiPicker1062
        REQUIRE ??Subroutine249_0
        ; // Fall through to label ??Subroutine249_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine249_0:
          CFI Block cfiCond1063 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_541
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1064 Using cfiCommon0
          CFI (cfiCond1064) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1064) Conditional ??CrossCallReturnLabel_542
          CFI (cfiCond1064) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1064) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1064) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1064) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1064) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1064) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1064) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1064) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1064) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1064) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1064) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1064) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1064) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1064) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1064) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1064) CFA_SP SP+-2
          CFI (cfiCond1064) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1065 Using cfiCommon0
          CFI (cfiCond1065) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond1065) Conditional ??CrossCallReturnLabel_543
          CFI (cfiCond1065) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1065) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1065) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1065) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1065) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1065) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1065) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1065) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1065) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1065) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1065) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1065) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1065) CFA_SP SP+-2
          CFI (cfiCond1065) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1066 Using cfiCommon0
          CFI (cfiCond1066) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond1066) Conditional ??CrossCallReturnLabel_544
          CFI (cfiCond1066) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1066) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1066) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1066) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1066) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1066) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1066) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1066) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1066) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1066) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1066) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1066) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1066) CFA_SP SP+-2
          CFI (cfiCond1066) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1067 Using cfiCommon0
          CFI (cfiCond1067) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond1067) Conditional ??CrossCallReturnLabel_545
          CFI (cfiCond1067) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1067) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1067) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1067) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1067) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1067) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1067) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1067) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1067) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1067) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1067) CFA_SP SP+-2
          CFI (cfiCond1067) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1068 Using cfiCommon0
          CFI (cfiCond1068) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1068) Conditional ??CrossCallReturnLabel_546
          CFI (cfiCond1068) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1068) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1068) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1068) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1068) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1068) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1068) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1068) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1068) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1068) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1068) CFA_SP SP+-2
          CFI (cfiCond1068) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1069 Using cfiCommon0
          CFI (cfiCond1069) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1069) Conditional ??CrossCallReturnLabel_547
          CFI (cfiCond1069) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1069) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1069) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1069) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1069) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1069) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1069) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1069) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1069) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1069) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1069) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1069) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1069) CFA_SP SP+-2
          CFI (cfiCond1069) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1070 Using cfiCommon0
          CFI (cfiCond1070) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1070) Conditional ??CrossCallReturnLabel_548
          CFI (cfiCond1070) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1070) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1070) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1070) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1070) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1070) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1070) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1070) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1070) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1070) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1070) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1070) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1070) CFA_SP SP+-2
          CFI (cfiCond1070) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1071 Using cfiCommon0
          CFI (cfiCond1071) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1071) Conditional ??CrossCallReturnLabel_549
          CFI (cfiCond1071) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1071) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1071) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1071) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1071) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1071) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1071) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1071) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1071) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1071) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1071) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1071) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1071) CFA_SP SP+-2
          CFI (cfiCond1071) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1072 Using cfiCommon0
          CFI (cfiCond1072) Function ZDO_ParseAddrRsp
          CFI (cfiCond1072) Conditional ??CrossCallReturnLabel_550
          CFI (cfiCond1072) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1072) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1072) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1072) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1072) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1072) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1072) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1072) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1072) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1072) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1072) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1072) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1072) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1072) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1072) CFA_SP SP+-2
          CFI (cfiCond1072) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1073 Using cfiCommon0
          CFI (cfiCond1073) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1073) Conditional ??CrossCallReturnLabel_551
          CFI (cfiCond1073) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1073) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1073) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1073) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1073) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1073) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1073) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1073) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1073) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1073) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1073) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1073) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1073) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1073) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1073) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1073) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1073) CFA_SP SP+-2
          CFI (cfiCond1073) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1074 Using cfiCommon0
          CFI (cfiCond1074) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond1074) Conditional ??CrossCallReturnLabel_552
          CFI (cfiCond1074) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1074) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1074) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1074) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1074) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1074) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1074) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1074) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1074) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1074) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1074) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1074) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1074) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1074) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1074) CFA_SP SP+-2
          CFI (cfiCond1074) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1075 Using cfiCommon0
          CFI (cfiCond1075) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond1075) Conditional ??CrossCallReturnLabel_553
          CFI (cfiCond1075) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1075) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1075) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1075) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1075) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1075) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1075) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1075) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1075) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1075) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1075) CFA_SP SP+-2
          CFI (cfiCond1075) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1076 Using cfiCommon0
          CFI (cfiCond1076) Function ZDO_ProcessUserDescReq
          CFI (cfiCond1076) Conditional ??CrossCallReturnLabel_554
          CFI (cfiCond1076) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1076) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1076) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1076) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1076) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1076) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1076) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1076) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1076) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1076) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1076) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1076) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1076) CFA_SP SP+-2
          CFI (cfiCond1076) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker1077 Using cfiCommon1
          CFI (cfiPicker1077) NoFunction
          CFI (cfiPicker1077) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1063
          CFI EndBlock cfiCond1064
          CFI EndBlock cfiCond1065
          CFI EndBlock cfiCond1066
          CFI EndBlock cfiCond1067
          CFI EndBlock cfiCond1068
          CFI EndBlock cfiCond1069
          CFI EndBlock cfiCond1070
          CFI EndBlock cfiCond1071
          CFI EndBlock cfiCond1072
          CFI EndBlock cfiCond1073
          CFI EndBlock cfiCond1074
          CFI EndBlock cfiCond1075
          CFI EndBlock cfiCond1076
          CFI EndBlock cfiPicker1077

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine108:
          CFI Block cfiCond1078 Using cfiCommon0
          CFI Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_168
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1079 Using cfiCommon0
          CFI (cfiCond1079) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond1079) Conditional ??CrossCallReturnLabel_169
          CFI (cfiCond1079) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1079) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1079) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1079) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1079) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1079) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1079) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1079) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1079) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1079) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1079) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1079) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1079) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1079) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1079) CFA_SP SP+-2
          CFI (cfiCond1079) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1080 Using cfiCommon0
          CFI (cfiCond1080) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1080) Conditional ??CrossCallReturnLabel_170
          CFI (cfiCond1080) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1080) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1080) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1080) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1080) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1080) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1080) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1080) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1080) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1080) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1080) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1080) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1080) CFA_SP SP+-2
          CFI (cfiCond1080) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1081 Using cfiCommon1
          CFI (cfiPicker1081) NoFunction
          CFI (cfiPicker1081) Picker
        LCALL   ?Subroutine178 & 0xFFFF
??CrossCallReturnLabel_295:
        INC     DPTR
        RET
          CFI EndBlock cfiCond1078
          CFI EndBlock cfiCond1079
          CFI EndBlock cfiCond1080
          CFI EndBlock cfiPicker1081

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine104:
          CFI Block cfiCond1082 Using cfiCommon0
          CFI Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_162
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1083 Using cfiCommon0
          CFI (cfiCond1083) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1083) Conditional ??CrossCallReturnLabel_163
          CFI (cfiCond1083) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1083) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1083) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1083) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1083) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1083) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1083) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1083) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1083) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1083) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1083) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1083) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1083) CFA_SP SP+-2
          CFI (cfiCond1083) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1084 Using cfiCommon1
          CFI (cfiPicker1084) NoFunction
          CFI (cfiPicker1084) Picker
        LCALL   ?Subroutine177 & 0xFFFF
??CrossCallReturnLabel_291:
        RET
          CFI EndBlock cfiCond1082
          CFI EndBlock cfiCond1083
          CFI EndBlock cfiPicker1084

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine177:
          CFI Block cfiCond1085 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_20
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1086 Using cfiCommon0
          CFI (cfiCond1086) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1086) Conditional ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_21
          CFI (cfiCond1086) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1086) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1086) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1086) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1086) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1086) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1086) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1086) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1086) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1086) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1086) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1086) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1086) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1086) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1086) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1086) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1086) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1086) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1086) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1086) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1086) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1086) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1086) CFA_SP SP+-4
          CFI (cfiCond1086) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1087 Using cfiCommon0
          CFI (cfiCond1087) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond1087) Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_162
          CFI (cfiCond1087) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1087) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1087) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1087) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1087) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1087) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1087) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1087) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1087) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1087) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1087) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1087) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1087) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1087) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1087) CFA_SP SP+-4
          CFI (cfiCond1087) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1088 Using cfiCommon0
          CFI (cfiCond1088) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1088) Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_163
          CFI (cfiCond1088) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1088) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1088) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1088) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1088) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1088) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1088) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1088) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1088) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1088) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1088) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1088) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1088) CFA_SP SP+-4
          CFI (cfiCond1088) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1089 Using cfiCommon1
          CFI (cfiPicker1089) NoFunction
          CFI (cfiPicker1089) Picker
        LCALL   ?Subroutine199 & 0xFFFF
??CrossCallReturnLabel_459:
        MOV     DPL,R6
        MOV     DPH,R7
        RET
          CFI EndBlock cfiCond1085
          CFI EndBlock cfiCond1086
          CFI EndBlock cfiCond1087
          CFI EndBlock cfiCond1088
          CFI EndBlock cfiPicker1089

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine100:
          CFI Block cfiCond1090 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_156
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1091 Using cfiCommon0
          CFI (cfiCond1091) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1091) Conditional ??CrossCallReturnLabel_157
          CFI (cfiCond1091) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1091) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1091) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1091) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1091) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1091) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1091) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1091) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1091) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1091) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1091) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1091) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1091) CFA_SP SP+-2
          CFI (cfiCond1091) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1092 Using cfiCommon1
          CFI (cfiPicker1092) NoFunction
          CFI (cfiPicker1092) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        LCALL   ??Subroutine250_0 & 0xFFFF
??CrossCallReturnLabel_557:
        MOV     R5,A
        MOV     R2,?V0
        MOV     R3,?V1
        MOV     A,R6
        RET
          CFI EndBlock cfiCond1090
          CFI EndBlock cfiCond1091
          CFI EndBlock cfiPicker1092

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine179:
          CFI Block cfiCond1093 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_559
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1094 Using cfiCommon0
          CFI (cfiCond1094) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1094) Conditional ??CrossCallReturnLabel_560
          CFI (cfiCond1094) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1094) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1094) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1094) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1094) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1094) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1094) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1094) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1094) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1094) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1094) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1094) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1094) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1094) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1094) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1094) CFA_SP SP+-2
          CFI (cfiCond1094) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker1095 Using cfiCommon1
          CFI (cfiPicker1095) NoFunction
          CFI (cfiPicker1095) Picker
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
        MOV     DPTR,#matchED
          CFI EndBlock cfiCond1093
          CFI EndBlock cfiCond1094
          CFI EndBlock cfiPicker1095
        REQUIRE ??Subroutine250_0
        ; // Fall through to label ??Subroutine250_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine250_0:
          CFI Block cfiCond1096 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_555
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1097 Using cfiCommon0
          CFI (cfiCond1097) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1097) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_164
          CFI (cfiCond1097) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1097) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1097) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1097) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1097) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1097) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1097) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1097) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1097) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1097) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1097) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1097) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1097) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1097) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1097) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1097) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1097) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1097) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1097) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1097) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1097) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1097) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1097) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1097) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1097) CFA_SP SP+-4
          CFI (cfiCond1097) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1098 Using cfiCommon0
          CFI (cfiCond1098) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1098) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_165
          CFI (cfiCond1098) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1098) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1098) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1098) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1098) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1098) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1098) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1098) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1098) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1098) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1098) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1098) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1098) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1098) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1098) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1098) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1098) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1098) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1098) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1098) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1098) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1098) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1098) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1098) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1098) CFA_SP SP+-4
          CFI (cfiCond1098) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1099 Using cfiCommon0
          CFI (cfiCond1099) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1099) Conditional ??CrossCallReturnLabel_557, ??CrossCallReturnLabel_156
          CFI (cfiCond1099) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1099) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1099) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1099) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1099) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1099) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1099) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1099) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1099) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1099) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1099) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1099) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1099) CFA_SP SP+-4
          CFI (cfiCond1099) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1100 Using cfiCommon0
          CFI (cfiCond1100) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1100) Conditional ??CrossCallReturnLabel_557, ??CrossCallReturnLabel_157
          CFI (cfiCond1100) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1100) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1100) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1100) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1100) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1100) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1100) CFA_SP SP+-4
          CFI (cfiCond1100) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1101 Using cfiCommon0
          CFI (cfiCond1101) Function ZDO_ParseAddrRsp
          CFI (cfiCond1101) Conditional ??CrossCallReturnLabel_556
          CFI (cfiCond1101) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1101) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1101) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1101) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1101) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1101) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1101) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1101) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1101) CFA_SP SP+-2
          CFI (cfiCond1101) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1102 Using cfiCommon0
          CFI (cfiCond1102) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1102) Conditional ??CrossCallReturnLabel_559
          CFI (cfiCond1102) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1102) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1102) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1102) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1102) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1102) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1102) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1102) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1102) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1102) CFA_SP SP+-2
          CFI (cfiCond1102) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1103 Using cfiCommon0
          CFI (cfiCond1103) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1103) Conditional ??CrossCallReturnLabel_560
          CFI (cfiCond1103) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1103) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1103) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1103) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1103) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1103) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1103) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1103) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1103) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1103) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1103) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1103) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1103) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1103) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1103) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1103) CFA_SP SP+-2
          CFI (cfiCond1103) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker1104 Using cfiCommon1
          CFI (cfiPicker1104) NoFunction
          CFI (cfiPicker1104) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1096
          CFI EndBlock cfiCond1097
          CFI EndBlock cfiCond1098
          CFI EndBlock cfiCond1099
          CFI EndBlock cfiCond1100
          CFI EndBlock cfiCond1101
          CFI EndBlock cfiCond1102
          CFI EndBlock cfiCond1103
          CFI EndBlock cfiPicker1104

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine95:
          CFI Block cfiCond1105 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_562
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1106 Using cfiCommon0
          CFI (cfiCond1106) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1106) Conditional ??CrossCallReturnLabel_563
          CFI (cfiCond1106) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1106) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1106) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1106) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1106) CFA_SP SP+-2
          CFI (cfiCond1106) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1107 Using cfiCommon1
          CFI (cfiPicker1107) NoFunction
          CFI (cfiPicker1107) Picker
        LCALL   ?Subroutine185 & 0xFFFF
??CrossCallReturnLabel_303:
          CFI EndBlock cfiCond1105
          CFI EndBlock cfiCond1106
          CFI EndBlock cfiPicker1107
        REQUIRE ??Subroutine251_0
        ; // Fall through to label ??Subroutine251_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine251_0:
          CFI Block cfiCond1108 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_561
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1109 Using cfiCommon0
          CFI (cfiCond1109) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1109) Conditional ??CrossCallReturnLabel_562
          CFI (cfiCond1109) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1109) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1109) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1109) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1109) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1109) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1109) CFA_SP SP+-2
          CFI (cfiCond1109) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1110 Using cfiCommon0
          CFI (cfiCond1110) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1110) Conditional ??CrossCallReturnLabel_563
          CFI (cfiCond1110) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1110) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1110) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1110) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1110) CFA_SP SP+-2
          CFI (cfiCond1110) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1111 Using cfiCommon1
          CFI (cfiPicker1111) NoFunction
          CFI (cfiPicker1111) Picker
        MOVX    A,@DPTR
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V1,A
        RET
          CFI EndBlock cfiCond1108
          CFI EndBlock cfiCond1109
          CFI EndBlock cfiCond1110
          CFI EndBlock cfiPicker1111

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine18:
          CFI Block cfiCond1112 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_16
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1113 Using cfiCommon0
          CFI (cfiCond1113) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1113) Conditional ??CrossCallReturnLabel_17
          CFI (cfiCond1113) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1113) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1113) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1113) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1113) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1113) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1113) CFA_SP SP+-2
          CFI (cfiCond1113) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1114 Using cfiCommon1
          CFI (cfiPicker1114) NoFunction
          CFI (cfiPicker1114) Picker
        MOV     A,R6
        LCALL   ?Subroutine191 & 0xFFFF
??CrossCallReturnLabel_354:
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ?Subroutine158 & 0xFFFF
??CrossCallReturnLabel_268:
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond1112
          CFI EndBlock cfiCond1113
          CFI EndBlock cfiPicker1114

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine158:
          CFI Block cfiCond1115 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_6
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1116 Using cfiCommon0
          CFI (cfiCond1116) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1116) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_7
          CFI (cfiCond1116) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1116) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1116) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1116) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1116) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1116) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1116) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1116) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1116) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1116) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1116) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1116) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1116) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1116) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1116) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1116) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1116) CFA_SP SP+-4
          CFI (cfiCond1116) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1117 Using cfiCommon0
          CFI (cfiCond1117) Function ZDO_CopyMatchInfo
          CFI (cfiCond1117) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_16
          CFI (cfiCond1117) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1117) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1117) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1117) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1117) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1117) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1117) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1117) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1117) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1117) CFA_SP SP+-4
          CFI (cfiCond1117) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1118 Using cfiCommon0
          CFI (cfiCond1118) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1118) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_17
          CFI (cfiCond1118) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1118) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1118) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1118) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1118) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1118) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1118) CFA_SP SP+-4
          CFI (cfiCond1118) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1119 Using cfiCommon1
          CFI (cfiPicker1119) NoFunction
          CFI (cfiPicker1119) Picker
        MOVX    @DPTR,A
        MOV     A,R6
        LCALL   ?Subroutine202 & 0xFFFF
??CrossCallReturnLabel_323:
        RET
          CFI EndBlock cfiCond1115
          CFI EndBlock cfiCond1116
          CFI EndBlock cfiCond1117
          CFI EndBlock cfiCond1118
          CFI EndBlock cfiPicker1119

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine202:
          CFI Block cfiCond1120 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_233
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1121 Using cfiCommon0
          CFI (cfiCond1121) Function ZDO_CopyMatchInfo
          CFI (cfiCond1121) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_234
          CFI (cfiCond1121) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1121) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1121) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1121) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1121) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1121) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1121) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1121) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1121) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1121) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1121) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1121) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1121) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1121) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1121) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1121) CFA_SP SP+-4
          CFI (cfiCond1121) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1122 Using cfiCommon0
          CFI (cfiCond1122) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1122) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_6
          CFI (cfiCond1122) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1122) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1122) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1122) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1122) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1122) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1122) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1122) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1122) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1122) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1122) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1122) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1122) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1122) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1122) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1122) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1122) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1122) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1122) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1122) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1122) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1122) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1122) CFA_SP SP+-6
          CFI (cfiCond1122) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1123 Using cfiCommon0
          CFI (cfiCond1123) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1123) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_7
          CFI (cfiCond1123) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1123) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1123) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1123) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1123) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1123) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1123) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1123) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1123) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1123) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1123) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1123) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1123) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1123) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1123) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1123) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1123) CFA_SP SP+-6
          CFI (cfiCond1123) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1124 Using cfiCommon0
          CFI (cfiCond1124) Function ZDO_CopyMatchInfo
          CFI (cfiCond1124) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_16
          CFI (cfiCond1124) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1124) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1124) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1124) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1124) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1124) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1124) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1124) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1124) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1124) CFA_SP SP+-6
          CFI (cfiCond1124) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1125 Using cfiCommon0
          CFI (cfiCond1125) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1125) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_17
          CFI (cfiCond1125) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1125) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1125) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1125) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1125) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1125) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1125) CFA_SP SP+-6
          CFI (cfiCond1125) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1126 Using cfiCommon1
          CFI (cfiPicker1126) NoFunction
          CFI (cfiPicker1126) Picker
        ADD     A,#0x15
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond1120
          CFI EndBlock cfiCond1121
          CFI EndBlock cfiCond1122
          CFI EndBlock cfiCond1123
          CFI EndBlock cfiCond1124
          CFI EndBlock cfiCond1125
          CFI EndBlock cfiPicker1126
// 2632 
// 2633 /*********************************************************************
// 2634  * @fn          ZDO_ParseBindUnbindReq
// 2635  *
// 2636  * @brief       This function parses the Bind_req or Unbind_req message.
// 2637  *
// 2638  * @param       inMsg  - incoming message (request)
// 2639  * @param       pReq - place to put parsed information
// 2640  *
// 2641  * @return      none
// 2642  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2643 void ZDO_ParseBindUnbindReq( zdoIncomingMsg_t *inMsg, ZDO_BindUnbindReq_t *pReq )
ZDO_ParseBindUnbindReq:
          CFI Block cfiBlock1127 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
        CODE
// 2644 {
        FUNCALL ZDO_ParseBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
// 2645   uint8 *msg;
// 2646 
// 2647   msg = inMsg->asdu;
        LCALL   ?Subroutine95 & 0xFFFF
// 2648   osal_cpyExtAddr( pReq->srcAddress, msg );
??CrossCallReturnLabel_563:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V0
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2649   msg += Z_EXTADDR_LEN;
// 2650   pReq->srcEndpoint = *msg++;
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_136:
        MOV     A,?V0
        ADD     A,#0x9
        MOV     ?V0,A
        JNC     ??ZDO_ParseBindUnbindReq_0
        INC     ?V1
// 2651   pReq->clusterID = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseBindUnbindReq_0:
        MOV     DPL,A
        MOV     DPH,?V1
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_106:
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine41 & 0xFFFF
// 2652   msg += 2;
// 2653   pReq->dstAddress.addrMode = *msg++;
??CrossCallReturnLabel_61:
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_195:
        MOV     A,?V0
        ADD     A,#0x3
        MOV     ?V0,A
        JNC     ??ZDO_ParseBindUnbindReq_1
        INC     ?V1
// 2654   if ( pReq->dstAddress.addrMode == Addr64Bit )
??ZDO_ParseBindUnbindReq_1:
        MOV     A,#0x3
        XRL     A,R0
        JNZ     ??ZDO_ParseBindUnbindReq_2
// 2655   {
// 2656     osal_cpyExtAddr( pReq->dstAddress.addr.extAddr, msg );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V0
        MOV     R5,?V1
        LCALL   ?Subroutine144 & 0xFFFF
??CrossCallReturnLabel_231:
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2657     msg += Z_EXTADDR_LEN;
// 2658     pReq->dstEndpoint = *msg;
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine139 & 0xFFFF
// 2659   }
??CrossCallReturnLabel_531:
        POP     A
          CFI CFA_SP SP+0
        SJMP    ??ZDO_ParseBindUnbindReq_3
// 2660   else
// 2661   {
// 2662     // copy group address
// 2663     pReq->dstAddress.addr.shortAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseBindUnbindReq_2:
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ?Subroutine97 & 0xFFFF
// 2664   }
??CrossCallReturnLabel_152:
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
??ZDO_ParseBindUnbindReq_3:
        MOVX    @DPTR,A
// 2665 }
        LJMP    ??Subroutine210_0 & 0xFFFF
          CFI EndBlock cfiBlock1127

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine144:
          CFI Block cfiCond1128 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_229
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1129 Using cfiCommon0
          CFI (cfiCond1129) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond1129) Conditional ??CrossCallReturnLabel_230
          CFI (cfiCond1129) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1129) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1129) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1129) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1129) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1129) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1129) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1129) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1129) CFA_SP SP+-2
          CFI (cfiCond1129) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1130 Using cfiCommon0
          CFI (cfiCond1130) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1130) Conditional ??CrossCallReturnLabel_231
          CFI (cfiCond1130) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1130) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1130) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1130) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1130) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1130) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1130) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1130) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1130) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1130) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1130) CFA_SP SP+-2
          CFI (cfiCond1130) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1131 Using cfiCommon0
          CFI (cfiCond1131) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1131) Conditional ??CrossCallReturnLabel_232
          CFI (cfiCond1131) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1131) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1131) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1131) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1131) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1131) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1131) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1131) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1131) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1131) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1131) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1131) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1131) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1131) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1131) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1131) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1131) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1131) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1131) CFA_SP SP+-2
          CFI (cfiCond1131) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1132 Using cfiCommon1
          CFI (cfiPicker1132) NoFunction
          CFI (cfiPicker1132) Picker
        MOV     A,R6
        ADD     A,#0xb
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        RET
          CFI EndBlock cfiCond1128
          CFI EndBlock cfiCond1129
          CFI EndBlock cfiCond1130
          CFI EndBlock cfiCond1131
          CFI EndBlock cfiPicker1132

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine41:
          CFI Block cfiCond1133 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_60
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1134 Using cfiCommon0
          CFI (cfiCond1134) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1134) Conditional ??CrossCallReturnLabel_61
          CFI (cfiCond1134) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1134) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1134) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1134) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1134) CFA_SP SP+-2
          CFI (cfiCond1134) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1135 Using cfiCommon1
          CFI (cfiPicker1135) NoFunction
          CFI (cfiPicker1135) Picker
        LCALL   ?Subroutine162 & 0xFFFF
??CrossCallReturnLabel_274:
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1133
          CFI EndBlock cfiCond1134
          CFI EndBlock cfiPicker1135
// 2666 
// 2667 /*********************************************************************
// 2668  * @fn      ZDO_ParseAddrRsp
// 2669  *
// 2670  * @brief   Turns the inMsg (incoming message) into the out parsed
// 2671  *          structure.
// 2672  *
// 2673  * @param   inMsg - incoming message
// 2674  *
// 2675  * @return  pointer to parsed structures.  This structure was
// 2676  *          allocated using osal_mem_alloc, so it must be freed
// 2677  *          by the calling function [osal_mem_free()].
// 2678  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2679 ZDO_NwkIEEEAddrResp_t *ZDO_ParseAddrRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseAddrRsp:
          CFI Block cfiBlock1136 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
        CODE
// 2680 {
        FUNCALL ZDO_ParseAddrRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseAddrRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 2681   ZDO_NwkIEEEAddrResp_t *rsp;
// 2682   uint8 *msg;
// 2683   byte cnt = 0;
        MOV     ?V2,#0x0
// 2684 
// 2685   // Calculate the number of items in the list
// 2686   if ( inMsg->asduLen > (1 + Z_EXTADDR_LEN + 2) )
        MOV     A,R6
        ADD     A,#0x10
        LCALL   ??Subroutine249_0 & 0xFFFF
??CrossCallReturnLabel_550:
        CLR     C
        SUBB    A,#0xc
        JC      ??ZDO_ParseAddrRsp_0
// 2687   {
// 2688     cnt = inMsg->asdu[1 + Z_EXTADDR_LEN + 2];
        LCALL   ?Subroutine123 & 0xFFFF
// 2689   }
??CrossCallReturnLabel_199:
        MOV     DPH,A
        LCALL   ??Subroutine252_0 & 0xFFFF
??CrossCallReturnLabel_568:
        ADD     A,#0xb
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_246:
        MOV     ?V2,A
// 2690   else
// 2691   {
// 2692     cnt = 0;
// 2693   }
// 2694 
// 2695   // Make buffer
// 2696   rsp = (ZDO_NwkIEEEAddrResp_t *)osal_mem_alloc( sizeof(ZDO_NwkIEEEAddrResp_t) + (cnt * sizeof ( uint16 )) );
??ZDO_ParseAddrRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R0,?V2
        LCALL   ??Subroutine206_0 & 0xFFFF
??CrossCallReturnLabel_329:
        MOV     A,R0
        ADD     A,#0xd
        MOV     R2,A
        CLR     A
        ADDC    A,R1
        MOV     R3,A
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V0,R2
        MOV     ?V1,R3
// 2697 
// 2698   if ( rsp )
        MOV     A,R2
        ORL     A,?V1
        JNZ     $+5
        LJMP    ??ZDO_ParseAddrRsp_1 & 0xFFFF
// 2699   {
// 2700     msg = inMsg->asdu;
        LCALL   ?Subroutine123 & 0xFFFF
??CrossCallReturnLabel_200:
        LCALL   ??Subroutine263_0 & 0xFFFF
// 2701 
// 2702     rsp->status = *msg++;
??CrossCallReturnLabel_657:
        MOV     R0,A
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine45 & 0xFFFF
// 2703     if ( rsp->status == ZDO_SUCCESS )
??CrossCallReturnLabel_69:
        JNZ     ??ZDO_ParseAddrRsp_1
// 2704     {
// 2705       osal_cpyExtAddr( rsp->extAddr, msg );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,R2
        ADD     A,#0x3
        MOV     R2,A
        CLR     A
        ADDC    A,?V1
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2706       msg += Z_EXTADDR_LEN;
        MOV     A,R6
        ADD     A,#0x8
        MOV     R6,A
        JNC     ??ZDO_ParseAddrRsp_2
        INC     R7
// 2707       rsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseAddrRsp_2:
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_640:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        LCALL   ??Subroutine221_0 & 0xFFFF
// 2708 
// 2709       msg += 2;
// 2710       rsp->numAssocDevs = 0;
??CrossCallReturnLabel_365:
        LCALL   ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_631:
        CLR     A
        MOVX    @DPTR,A
// 2711 
// 2712       // StartIndex field is only present if NumAssocDev field is non-zero.
// 2713       if ( cnt > 0 )
        MOV     A,?V2
        JZ      ??ZDO_ParseAddrRsp_1
// 2714       {
// 2715         uint16 *pList = &(rsp->devList[0]);
        MOV     A,?V0
        ADD     A,#0xd
        MOV     R0,A
        CLR     A
        ADDC    A,?V1
        MOV     R1,A
// 2716         byte n = cnt;
// 2717 
// 2718         rsp->numAssocDevs = *msg++;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_632:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
// 2719         rsp->startIndex = *msg++;
??CrossCallReturnLabel_22:
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_225:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x4
        MOV     R6,A
        JNC     ??ZDO_ParseAddrRsp_3
        INC     R7
??ZDO_ParseAddrRsp_3:
        MOV     ?V3,?V2
// 2720 
// 2721         while ( n != 0 )
// 2722         {
// 2723           *pList++ = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseAddrRsp_4:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine250_0 & 0xFFFF
??CrossCallReturnLabel_556:
        MOV     R3,A
        MOV     A,R4
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine211_0 & 0xFFFF
??CrossCallReturnLabel_332:
        MOV     A,R0
        ADD     A,#0x2
        MOV     R0,A
        JNC     ??ZDO_ParseAddrRsp_5
        INC     R1
// 2724           msg += sizeof( uint16 );
??ZDO_ParseAddrRsp_5:
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        JNC     ??ZDO_ParseAddrRsp_6
        INC     R7
// 2725           n--;
// 2726         }
??ZDO_ParseAddrRsp_6:
        DEC     ?V3
        MOV     A,?V3
        JNZ     ??ZDO_ParseAddrRsp_4
// 2727       }
// 2728     }
// 2729   }
// 2730 
// 2731   return ( rsp );
??ZDO_ParseAddrRsp_1:
        MOV     R2,?V0
        MOV     R3,?V1
        SJMP    ??Subroutine253_0
// 2732 }
          CFI EndBlock cfiBlock1136

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine140:
          CFI Block cfiCond1137 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_224
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1138 Using cfiCommon0
          CFI (cfiCond1138) Function ZDO_ParseAddrRsp
          CFI (cfiCond1138) Conditional ??CrossCallReturnLabel_225
          CFI (cfiCond1138) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1138) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1138) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1138) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1138) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1138) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1138) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1138) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1138) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1139 Using cfiCommon0
          CFI (cfiCond1139) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1139) Conditional ??CrossCallReturnLabel_226
          CFI (cfiCond1139) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1139) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1139) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1139) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1139) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1139) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1139) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1139) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1139) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1139) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1139) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1140 Using cfiCommon1
          CFI (cfiPicker1140) NoFunction
          CFI (cfiPicker1140) Picker
        MOV     A,?V0
        ADD     A,#0xc
        MOV     DPL,A
        CLR     A
        ADDC    A,?V1
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond1137
          CFI EndBlock cfiCond1138
          CFI EndBlock cfiCond1139
          CFI EndBlock cfiPicker1140

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine92:
          CFI Block cfiCond1141 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_569
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1142 Using cfiCommon0
          CFI (cfiCond1142) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1142) Conditional ??CrossCallReturnLabel_570
          CFI (cfiCond1142) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1142) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1142) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1142) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1142) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1142) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1142) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1142) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1142) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1142) CFA_SP SP+-2
          CFI (cfiCond1142) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1143 Using cfiCommon0
          CFI (cfiCond1143) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1143) Conditional ??CrossCallReturnLabel_571
          CFI (cfiCond1143) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1143) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1143) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1143) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1143) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1143) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1143) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1143) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1143) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1143) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1143) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1143) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1143) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1143) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1143) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1143) CFA_SP SP+-2
          CFI (cfiCond1143) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1144 Using cfiCommon0
          CFI (cfiCond1144) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1144) Conditional ??CrossCallReturnLabel_572
          CFI (cfiCond1144) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1144) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1144) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1144) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1144) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1144) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1144) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1144) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1144) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1144) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1144) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1144) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1144) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1144) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1144) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1144) CFA_SP SP+-2
          CFI (cfiCond1144) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1145 Using cfiCommon0
          CFI (cfiCond1145) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1145) Conditional ??CrossCallReturnLabel_573
          CFI (cfiCond1145) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1145) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1145) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1145) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1145) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1145) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1145) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1145) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1145) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1145) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1145) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1145) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1145) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1145) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1145) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1145) CFA_SP SP+-2
          CFI (cfiCond1145) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1146 Using cfiCommon0
          CFI (cfiCond1146) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1146) Conditional ??CrossCallReturnLabel_574
          CFI (cfiCond1146) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1146) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1146) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1146) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1146) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1146) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1146) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1146) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1146) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1146) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1146) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1146) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1146) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1146) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1146) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1146) CFA_SP SP+-2
          CFI (cfiCond1146) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1147 Using cfiCommon0
          CFI (cfiCond1147) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1147) Conditional ??CrossCallReturnLabel_575
          CFI (cfiCond1147) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1147) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1147) CFA_SP SP+-7
          CFI Block cfiCond1148 Using cfiCommon0
          CFI (cfiCond1148) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1148) Conditional ??CrossCallReturnLabel_576
          CFI (cfiCond1148) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1148) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1148) CFA_SP SP+-7
          CFI Block cfiCond1149 Using cfiCommon0
          CFI (cfiCond1149) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1149) Conditional ??CrossCallReturnLabel_577
          CFI (cfiCond1149) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1149) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1149) CFA_SP SP+-7
          CFI Block cfiCond1150 Using cfiCommon0
          CFI (cfiCond1150) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1150) Conditional ??CrossCallReturnLabel_578
          CFI (cfiCond1150) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1150) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1150) CFA_SP SP+-7
          CFI Block cfiCond1151 Using cfiCommon0
          CFI (cfiCond1151) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1151) Conditional ??CrossCallReturnLabel_579
          CFI (cfiCond1151) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1151) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1151) CFA_SP SP+-7
          CFI Block cfiCond1152 Using cfiCommon0
          CFI (cfiCond1152) Function ZDMatchSendState
          CFI (cfiCond1152) Conditional ??CrossCallReturnLabel_580
          CFI (cfiCond1152) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1152) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1152) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1152) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1152) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1152) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1152) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1152) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1152) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1152) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1152) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1152) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1152) CFA_SP SP+-2
          CFI (cfiCond1152) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1153 Using cfiCommon0
          CFI (cfiCond1153) Function ZDMatchSendState
          CFI (cfiCond1153) Conditional ??CrossCallReturnLabel_581
          CFI (cfiCond1153) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1153) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1153) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1153) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1153) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1153) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1153) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1153) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1153) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1153) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1153) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1153) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1153) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1154 Using cfiCommon0
          CFI (cfiCond1154) Function ZDMatchSendState
          CFI (cfiCond1154) Conditional ??CrossCallReturnLabel_582
          CFI (cfiCond1154) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1154) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1154) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1154) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1154) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1154) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1154) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1154) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1154) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1154) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1154) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1154) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1154) CFA_SP SP+-2
          CFI (cfiCond1154) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1155 Using cfiCommon1
          CFI (cfiPicker1155) NoFunction
          CFI (cfiPicker1155) Picker
        MOV     DPTR,#matchED
          CFI EndBlock cfiCond1141
          CFI EndBlock cfiCond1142
          CFI EndBlock cfiCond1143
          CFI EndBlock cfiCond1144
          CFI EndBlock cfiCond1145
          CFI EndBlock cfiCond1146
          CFI EndBlock cfiCond1147
          CFI EndBlock cfiCond1148
          CFI EndBlock cfiCond1149
          CFI EndBlock cfiCond1150
          CFI EndBlock cfiCond1151
          CFI EndBlock cfiCond1152
          CFI EndBlock cfiCond1153
          CFI EndBlock cfiCond1154
          CFI EndBlock cfiPicker1155
        REQUIRE ??Subroutine252_0
        ; // Fall through to label ??Subroutine252_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine252_0:
          CFI Block cfiCond1156 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_564
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1157 Using cfiCommon0
          CFI (cfiCond1157) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1157) Conditional ??CrossCallReturnLabel_565
          CFI (cfiCond1157) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1157) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1157) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1157) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1157) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1157) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1157) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1157) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1157) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1157) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1157) CFA_SP SP+-2
          CFI (cfiCond1157) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1158 Using cfiCommon0
          CFI (cfiCond1158) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1158) Conditional ??CrossCallReturnLabel_566
          CFI (cfiCond1158) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1158) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1158) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1158) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1158) CFA_SP SP+-2
          CFI (cfiCond1158) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1159 Using cfiCommon0
          CFI (cfiCond1159) Function ZDMatchSendState
          CFI (cfiCond1159) Conditional ??CrossCallReturnLabel_567
          CFI (cfiCond1159) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1159) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1159) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1159) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1159) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1159) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1159) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1159) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1159) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1159) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1159) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1159) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1159) CFA_SP SP+-2
          CFI (cfiCond1159) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1160 Using cfiCommon0
          CFI (cfiCond1160) Function ZDO_ParseAddrRsp
          CFI (cfiCond1160) Conditional ??CrossCallReturnLabel_568
          CFI (cfiCond1160) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1160) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1160) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1160) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1160) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1160) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1160) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1160) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1160) CFA_SP SP+-2
          CFI (cfiCond1160) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1161 Using cfiCommon0
          CFI (cfiCond1161) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1161) Conditional ??CrossCallReturnLabel_569
          CFI (cfiCond1161) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1161) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1161) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1161) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1161) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1161) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1161) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1161) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1161) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1161) CFA_SP SP+-2
          CFI (cfiCond1161) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1162 Using cfiCommon0
          CFI (cfiCond1162) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1162) Conditional ??CrossCallReturnLabel_570
          CFI (cfiCond1162) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1162) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1162) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1162) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1162) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1162) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1162) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1162) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1162) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1162) CFA_SP SP+-2
          CFI (cfiCond1162) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1163 Using cfiCommon0
          CFI (cfiCond1163) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1163) Conditional ??CrossCallReturnLabel_571
          CFI (cfiCond1163) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1163) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1163) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1163) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1163) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1163) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1163) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1163) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1163) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1163) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1163) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1163) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1163) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1163) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1163) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1163) CFA_SP SP+-2
          CFI (cfiCond1163) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1164 Using cfiCommon0
          CFI (cfiCond1164) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1164) Conditional ??CrossCallReturnLabel_572
          CFI (cfiCond1164) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1164) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1164) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1164) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1164) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1164) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1164) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1164) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1164) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1164) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1164) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1164) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1164) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1164) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1164) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1164) CFA_SP SP+-2
          CFI (cfiCond1164) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1165 Using cfiCommon0
          CFI (cfiCond1165) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1165) Conditional ??CrossCallReturnLabel_573
          CFI (cfiCond1165) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1165) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1165) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1165) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1165) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1165) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1165) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1165) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1165) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1165) CFA_SP SP+-2
          CFI (cfiCond1165) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1166 Using cfiCommon0
          CFI (cfiCond1166) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1166) Conditional ??CrossCallReturnLabel_574
          CFI (cfiCond1166) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1166) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1166) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1166) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1166) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1166) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1166) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1166) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1166) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1166) CFA_SP SP+-2
          CFI (cfiCond1166) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1167 Using cfiCommon0
          CFI (cfiCond1167) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1167) Conditional ??CrossCallReturnLabel_575
          CFI (cfiCond1167) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1167) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1167) CFA_SP SP+-7
          CFI Block cfiCond1168 Using cfiCommon0
          CFI (cfiCond1168) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1168) Conditional ??CrossCallReturnLabel_576
          CFI (cfiCond1168) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1168) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1168) CFA_SP SP+-7
          CFI Block cfiCond1169 Using cfiCommon0
          CFI (cfiCond1169) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1169) Conditional ??CrossCallReturnLabel_577
          CFI (cfiCond1169) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1169) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1169) CFA_SP SP+-7
          CFI Block cfiCond1170 Using cfiCommon0
          CFI (cfiCond1170) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1170) Conditional ??CrossCallReturnLabel_578
          CFI (cfiCond1170) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1170) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1170) CFA_SP SP+-7
          CFI Block cfiCond1171 Using cfiCommon0
          CFI (cfiCond1171) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1171) Conditional ??CrossCallReturnLabel_579
          CFI (cfiCond1171) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1171) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1171) CFA_SP SP+-7
          CFI Block cfiCond1172 Using cfiCommon0
          CFI (cfiCond1172) Function ZDMatchSendState
          CFI (cfiCond1172) Conditional ??CrossCallReturnLabel_580
          CFI (cfiCond1172) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1172) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1172) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1172) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1172) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1172) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1172) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1172) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1172) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1172) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1172) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1172) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1172) CFA_SP SP+-2
          CFI (cfiCond1172) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1173 Using cfiCommon0
          CFI (cfiCond1173) Function ZDMatchSendState
          CFI (cfiCond1173) Conditional ??CrossCallReturnLabel_581
          CFI (cfiCond1173) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1173) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1173) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1173) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1173) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1173) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1173) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1173) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1173) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1173) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1173) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1173) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1173) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1174 Using cfiCommon0
          CFI (cfiCond1174) Function ZDMatchSendState
          CFI (cfiCond1174) Conditional ??CrossCallReturnLabel_582
          CFI (cfiCond1174) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1174) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1174) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1174) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1174) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1174) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1174) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1174) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1174) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1174) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1174) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1174) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1174) CFA_SP SP+-2
          CFI (cfiCond1174) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1175 Using cfiCommon1
          CFI (cfiPicker1175) NoFunction
          CFI (cfiPicker1175) Picker
        LCALL   ??Subroutine246_0 & 0xFFFF
??CrossCallReturnLabel_592:
        RET
          CFI EndBlock cfiCond1156
          CFI EndBlock cfiCond1157
          CFI EndBlock cfiCond1158
          CFI EndBlock cfiCond1159
          CFI EndBlock cfiCond1160
          CFI EndBlock cfiCond1161
          CFI EndBlock cfiCond1162
          CFI EndBlock cfiCond1163
          CFI EndBlock cfiCond1164
          CFI EndBlock cfiCond1165
          CFI EndBlock cfiCond1166
          CFI EndBlock cfiCond1167
          CFI EndBlock cfiCond1168
          CFI EndBlock cfiCond1169
          CFI EndBlock cfiCond1170
          CFI EndBlock cfiCond1171
          CFI EndBlock cfiCond1172
          CFI EndBlock cfiCond1173
          CFI EndBlock cfiCond1174
          CFI EndBlock cfiPicker1175

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine5:
          CFI Block cfiBlock1176 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock1176
        REQUIRE ??Subroutine253_0
        ; // Fall through to label ??Subroutine253_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine253_0:
          CFI Block cfiBlock1177 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x6
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock1177
// 2733 
// 2734 /*********************************************************************
// 2735  * @fn          ZDO_ParseNodeDescRsp
// 2736  *
// 2737  * @brief       This function parses the Node_Desc_rsp message.
// 2738  *
// 2739  * @param       inMsg - incoming message
// 2740  * @param       pNDRsp - place to parse the message into
// 2741  *
// 2742  * @return      none
// 2743  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2744 void ZDO_ParseNodeDescRsp( zdoIncomingMsg_t *inMsg, ZDO_NodeDescRsp_t *pNDRsp )
ZDO_ParseNodeDescRsp:
          CFI Block cfiBlock1178 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
        CODE
// 2745 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
// 2746   uint8 *msg;
// 2747 
// 2748   msg = inMsg->asdu;
        LCALL   ?Subroutine11 & 0xFFFF
// 2749 
// 2750   pNDRsp->status = *msg++;
// 2751   pNDRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
// 2752 
// 2753   if ( pNDRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_0:
        JZ      $+5
        LJMP    ??ZDO_ParseNodeDescRsp_0 & 0xFFFF
// 2754   {
// 2755     msg += 2;
// 2756     pNDRsp->nodeDesc.LogicalType = *msg & 0x07;
        MOV     A,R0
        LCALL   ??Subroutine255_0 & 0xFFFF
??CrossCallReturnLabel_606:
        ADDC    A,R1
        MOV     R3,A
        MOV     A,R4
        ADD     A,#0x3
        MOV     R6,A
        CLR     A
        ADDC    A,R5
        MOV     R7,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ANL     A,#0x7
        MOV     ?V0,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        ANL     A,#0xf8
        ORL     A,?V0
        LCALL   ?Subroutine49 & 0xFFFF
// 2757 
// 2758     pNDRsp->nodeDesc.ComplexDescAvail = ( *msg & 0x08 ) >> 3;
??CrossCallReturnLabel_76:
        MOV     C,0xE0 /* A   */.3
        CLR     A
        RLC     A
        MOV     ?V0,A
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.3
        MOV     DPH,R7
        MOV     DPL,R6
        MOVX    A,@DPTR
        MOV     0xE0 /* A   */.3,C
        LCALL   ?Subroutine49 & 0xFFFF
// 2759     pNDRsp->nodeDesc.UserDescAvail = ( *msg & 0x10 ) >> 4;
??CrossCallReturnLabel_77:
        MOV     C,0xE0 /* A   */.4
        CLR     A
        RLC     A
        MOV     ?V1,A
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.4
        MOV     DPH,R7
        MOV     DPL,R6
        MOVX    A,@DPTR
        MOV     0xE0 /* A   */.4,C
        MOVX    @DPTR,A
// 2760 
// 2761     msg++;  // Reserved bits.
// 2762     pNDRsp->nodeDesc.FrequencyBand = (*msg >> 3) & 0x1f;
        MOV     A,R0
        ADD     A,#0x3
        INC     R2
        CLR     A
        ADDC    A,R1
        MOV     R3,A
        MOV     A,R4
        ADD     A,#0x4
        INC     R6
        CLR     A
        ADDC    A,R5
        MOV     R7,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ANL     A,#0xf8
        MOV     ?V2,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        ANL     A,#0x7
        ORL     A,?V2
        MOV     ?V2,A
        LCALL   ?Subroutine49 & 0xFFFF
// 2763     pNDRsp->nodeDesc.APSFlags = *msg++ & 0x07;
??CrossCallReturnLabel_78:
        ANL     A,#0x7
        MOV     R2,A
        MOV     A,#-0x8
        ANL     A,?V2
        ORL     A,R2
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine42 & 0xFFFF
// 2764     pNDRsp->nodeDesc.CapabilityFlags = *msg++;
??CrossCallReturnLabel_62:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine43 & 0xFFFF
// 2765     pNDRsp->nodeDesc.ManufacturerCode[0] = *msg++;
??CrossCallReturnLabel_65:
        INC     DPTR
        LCALL   ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_679:
        LCALL   ?Subroutine36 & 0xFFFF
// 2766     pNDRsp->nodeDesc.ManufacturerCode[1] = *msg++;
??CrossCallReturnLabel_49:
        LCALL   ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_173:
        LCALL   ?Subroutine36 & 0xFFFF
// 2767     pNDRsp->nodeDesc.MaxBufferSize = *msg++;
??CrossCallReturnLabel_50:
        LCALL   ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_680:
        LCALL   ?Subroutine31 & 0xFFFF
// 2768     pNDRsp->nodeDesc.MaxInTransferSize[0] = *msg++;
??CrossCallReturnLabel_39:
        LCALL   ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_174:
        LCALL   ?Subroutine31 & 0xFFFF
// 2769     pNDRsp->nodeDesc.MaxInTransferSize[1] = *msg++;
??CrossCallReturnLabel_40:
        INC     DPTR
        LCALL   ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_175:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R0
        ADD     A,#0xa
        MOV     R0,A
        JNC     ??ZDO_ParseNodeDescRsp_1
        INC     R1
// 2770     pNDRsp->nodeDesc.ServerMask = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseNodeDescRsp_1:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine256_0 & 0xFFFF
??CrossCallReturnLabel_611:
        MOV     R3,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R4
        ADD     A,#0xb
        MOV     DPL,A
        CLR     A
        ADDC    A,R5
        MOV     DPH,A
        LCALL   ?Subroutine51 & 0xFFFF
// 2771     msg += 2;
// 2772     pNDRsp->nodeDesc.MaxOutTransferSize[0] = *msg++;
??CrossCallReturnLabel_337:
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R4
        ADD     A,#0xd
        MOV     DPL,A
        CLR     A
        ADDC    A,R5
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine43 & 0xFFFF
// 2773     pNDRsp->nodeDesc.MaxOutTransferSize[1] = *msg++;
// 2774     pNDRsp->nodeDesc.DescriptorCapability = *msg;
// 2775   }
??CrossCallReturnLabel_66:
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R4
        LCALL   ??Subroutine254_0 & 0xFFFF
??CrossCallReturnLabel_598:
        ADDC    A,R5
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_63:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R4
        LCALL   ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_219:
        ADDC    A,R5
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2776 }
??ZDO_ParseNodeDescRsp_0:
        LJMP    ??Subroutine208_0 & 0xFFFF
          CFI EndBlock cfiBlock1178

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine180:
          CFI Block cfiCond1179 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_601, ??CrossCallReturnLabel_102
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1180 Using cfiCommon0
          CFI (cfiCond1180) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond1180) Conditional ??CrossCallReturnLabel_601, ??CrossCallReturnLabel_103
          CFI (cfiCond1180) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1180) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1180) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1180) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1180) CFA_SP SP+-4
          CFI (cfiCond1180) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1181 Using cfiCommon0
          CFI (cfiCond1181) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond1181) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_221
          CFI (cfiCond1181) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1181) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1181) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1181) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1181) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1181) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1181) CFA_SP SP+-4
          CFI (cfiCond1181) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1182 Using cfiCommon0
          CFI (cfiCond1182) Function ZDO_ProcessUserDescSet
          CFI (cfiCond1182) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_222
          CFI (cfiCond1182) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1182) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1182) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1182) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1182) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1182) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1182) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1182) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1182) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1182) CFA_SP SP+-4
          CFI (cfiCond1182) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1183 Using cfiCommon0
          CFI (cfiCond1183) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1183) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_223
          CFI (cfiCond1183) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1183) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1183) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1183) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1183) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1183) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1183) CFA_SP SP+-5
          CFI (cfiCond1183) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1184 Using cfiCommon1
          CFI (cfiPicker1184) NoFunction
          CFI (cfiPicker1184) Picker
        MOV     A,R6
          CFI EndBlock cfiCond1179
          CFI EndBlock cfiCond1180
          CFI EndBlock cfiCond1181
          CFI EndBlock cfiCond1182
          CFI EndBlock cfiCond1183
          CFI EndBlock cfiPicker1184
        REQUIRE ??Subroutine254_0
        ; // Fall through to label ??Subroutine254_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine254_0:
          CFI Block cfiCond1185 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_599, ??CrossCallReturnLabel_348
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1186 Using cfiCommon0
          CFI (cfiCond1186) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1186) Conditional ??CrossCallReturnLabel_599, ??CrossCallReturnLabel_349
          CFI (cfiCond1186) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1186) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1186) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1186) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1186) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1186) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1186) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1186) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1186) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1186) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1186) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1186) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1186) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1186) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1186) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1186) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1186) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1186) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1186) CFA_SP SP+-4
          CFI (cfiCond1186) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1187 Using cfiCommon0
          CFI (cfiCond1187) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1187) Conditional ??CrossCallReturnLabel_599, ??CrossCallReturnLabel_350
          CFI (cfiCond1187) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1187) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1187) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1187) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1187) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1187) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1187) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1187) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1187) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1187) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1187) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1187) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1187) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1187) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1187) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1187) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1187) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1187) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1187) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1187) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1187) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1187) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1187) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1187) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1187) CFA_SP SP+-4
          CFI (cfiCond1187) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1188 Using cfiCommon0
          CFI (cfiCond1188) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1188) Conditional ??CrossCallReturnLabel_600, ??CrossCallReturnLabel_210
          CFI (cfiCond1188) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1188) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1188) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1188) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1188) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1188) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1188) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1188) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1188) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1188) CFA_SP SP+-4
          CFI (cfiCond1188) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1189 Using cfiCommon0
          CFI (cfiCond1189) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1189) Conditional ??CrossCallReturnLabel_600, ??CrossCallReturnLabel_211
          CFI (cfiCond1189) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1189) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1189) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1189) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1189) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1189) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1189) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1189) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1189) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1189) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1189) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1189) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1189) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1189) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1189) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1189) CFA_SP SP+-4
          CFI (cfiCond1189) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1190 Using cfiCommon0
          CFI (cfiCond1190) Function ZDMatchSendState
          CFI (cfiCond1190) Conditional ??CrossCallReturnLabel_600, ??CrossCallReturnLabel_212
          CFI (cfiCond1190) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1190) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1190) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1190) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1190) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1190) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1190) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1190) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1190) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1190) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1190) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1190) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1190) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1190) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1190) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1190) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1190) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1190) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1190) CFA_SP SP+-4
          CFI (cfiCond1190) CFA_XSP16 add(XSP16, 45)
          CFI Block cfiCond1191 Using cfiCommon0
          CFI (cfiCond1191) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1191) Conditional ??CrossCallReturnLabel_597
          CFI (cfiCond1191) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1191) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1191) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1191) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1191) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1191) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1191) CFA_SP SP+-2
          CFI (cfiCond1191) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1192 Using cfiCommon0
          CFI (cfiCond1192) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1192) Conditional ??CrossCallReturnLabel_598
          CFI (cfiCond1192) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1192) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1192) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1192) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1192) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1192) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1192) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1193 Using cfiCommon0
          CFI (cfiCond1193) Function ZDO_ProcessNodeDescReq
          CFI (cfiCond1193) Conditional ??CrossCallReturnLabel_601, ??CrossCallReturnLabel_102
          CFI (cfiCond1193) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1193) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1193) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1193) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1193) CFA_SP SP+-4
          CFI (cfiCond1193) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1194 Using cfiCommon0
          CFI (cfiCond1194) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond1194) Conditional ??CrossCallReturnLabel_601, ??CrossCallReturnLabel_103
          CFI (cfiCond1194) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1194) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1194) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1194) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1194) CFA_SP SP+-4
          CFI (cfiCond1194) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1195 Using cfiCommon0
          CFI (cfiCond1195) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond1195) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_221
          CFI (cfiCond1195) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1195) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1195) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1195) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1195) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1195) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1195) CFA_SP SP+-4
          CFI (cfiCond1195) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1196 Using cfiCommon0
          CFI (cfiCond1196) Function ZDO_ProcessUserDescSet
          CFI (cfiCond1196) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_222
          CFI (cfiCond1196) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1196) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1196) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1196) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1196) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1196) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1196) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1196) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1196) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1196) CFA_SP SP+-4
          CFI (cfiCond1196) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1197 Using cfiCommon0
          CFI (cfiCond1197) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1197) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_223
          CFI (cfiCond1197) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1197) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1197) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1197) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1197) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1197) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1197) CFA_SP SP+-5
          CFI (cfiCond1197) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1198 Using cfiCommon1
          CFI (cfiPicker1198) NoFunction
          CFI (cfiPicker1198) Picker
        ADD     A,#0xe
        MOV     DPL,A
        CLR     A
        RET
          CFI EndBlock cfiCond1185
          CFI EndBlock cfiCond1186
          CFI EndBlock cfiCond1187
          CFI EndBlock cfiCond1188
          CFI EndBlock cfiCond1189
          CFI EndBlock cfiCond1190
          CFI EndBlock cfiCond1191
          CFI EndBlock cfiCond1192
          CFI EndBlock cfiCond1193
          CFI EndBlock cfiCond1194
          CFI EndBlock cfiCond1195
          CFI EndBlock cfiCond1196
          CFI EndBlock cfiCond1197
          CFI EndBlock cfiPicker1198

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine137:
          CFI Block cfiCond1199 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_607
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1200 Using cfiCommon0
          CFI (cfiCond1200) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1200) Conditional ??CrossCallReturnLabel_608
          CFI (cfiCond1200) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1200) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1200) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1200) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1200) CFA_SP SP+-2
          CFI (cfiCond1200) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1201 Using cfiCommon1
          CFI (cfiPicker1201) NoFunction
          CFI (cfiPicker1201) Picker
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,?V0
          CFI EndBlock cfiCond1199
          CFI EndBlock cfiCond1200
          CFI EndBlock cfiPicker1201
        REQUIRE ??Subroutine255_0
        ; // Fall through to label ??Subroutine255_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine255_0:
          CFI Block cfiCond1202 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_603
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 64)
          CFI Block cfiCond1203 Using cfiCommon0
          CFI (cfiCond1203) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond1203) Conditional ??CrossCallReturnLabel_604
          CFI (cfiCond1203) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1203) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1203) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1203) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1203) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1203) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1203) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1203) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1203) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1203) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1203) CFA_SP SP+-2
          CFI (cfiCond1203) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1204 Using cfiCommon0
          CFI (cfiCond1204) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond1204) Conditional ??CrossCallReturnLabel_605
          CFI (cfiCond1204) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1204) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1204) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1204) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1204) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1204) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1204) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1204) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1204) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1204) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1204) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1204) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1204) CFA_SP SP+-2
          CFI (cfiCond1204) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1205 Using cfiCommon0
          CFI (cfiCond1205) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1205) Conditional ??CrossCallReturnLabel_606
          CFI (cfiCond1205) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1205) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1205) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1205) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1205) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1205) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1205) CFA_SP SP+-2
          CFI (cfiCond1205) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1206 Using cfiCommon0
          CFI (cfiCond1206) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1206) Conditional ??CrossCallReturnLabel_607
          CFI (cfiCond1206) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1206) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1206) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1206) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1206) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1206) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1206) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1206) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1206) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1206) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1206) CFA_SP SP+-2
          CFI (cfiCond1206) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1207 Using cfiCommon0
          CFI (cfiCond1207) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1207) Conditional ??CrossCallReturnLabel_608
          CFI (cfiCond1207) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1207) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1207) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1207) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1207) CFA_SP SP+-2
          CFI (cfiCond1207) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1208 Using cfiCommon1
          CFI (cfiPicker1208) NoFunction
          CFI (cfiPicker1208) Picker
        ADD     A,#0x2
        MOV     R2,A
        CLR     A
        RET
          CFI EndBlock cfiCond1202
          CFI EndBlock cfiCond1203
          CFI EndBlock cfiCond1204
          CFI EndBlock cfiCond1205
          CFI EndBlock cfiCond1206
          CFI EndBlock cfiCond1207
          CFI EndBlock cfiPicker1208

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine110:
          CFI Block cfiCond1209 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_173
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1210 Using cfiCommon0
          CFI (cfiCond1210) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1210) Conditional ??CrossCallReturnLabel_174
          CFI (cfiCond1210) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1210) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1210) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1210) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1210) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1210) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1210) CFA_SP SP+-2
          CFI (cfiCond1210) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1211 Using cfiCommon0
          CFI (cfiCond1211) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1211) Conditional ??CrossCallReturnLabel_175
          CFI (cfiCond1211) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1211) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1211) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1211) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1211) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1211) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1211) CFA_SP SP+-2
          CFI (cfiCond1211) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1212 Using cfiCommon1
          CFI (cfiPicker1212) NoFunction
          CFI (cfiPicker1212) Picker
        MOVX    A,@DPTR
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        RET
          CFI EndBlock cfiCond1209
          CFI EndBlock cfiCond1210
          CFI EndBlock cfiCond1211
          CFI EndBlock cfiPicker1212

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine49:
          CFI Block cfiCond1213 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_76
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1214 Using cfiCommon0
          CFI (cfiCond1214) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1214) Conditional ??CrossCallReturnLabel_77
          CFI (cfiCond1214) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1214) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1214) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1214) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1214) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1214) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1214) CFA_SP SP+-2
          CFI (cfiCond1214) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1215 Using cfiCommon0
          CFI (cfiCond1215) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1215) Conditional ??CrossCallReturnLabel_78
          CFI (cfiCond1215) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1215) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1215) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1215) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1215) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1215) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1215) CFA_SP SP+-2
          CFI (cfiCond1215) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1216 Using cfiCommon1
          CFI (cfiPicker1216) NoFunction
          CFI (cfiPicker1216) Picker
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1213
          CFI EndBlock cfiCond1214
          CFI EndBlock cfiCond1215
          CFI EndBlock cfiPicker1216

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine43:
          CFI Block cfiCond1217 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_64
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1218 Using cfiCommon0
          CFI (cfiCond1218) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1218) Conditional ??CrossCallReturnLabel_65
          CFI (cfiCond1218) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1218) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1218) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1218) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1218) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1218) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1218) CFA_SP SP+-2
          CFI (cfiCond1218) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1219 Using cfiCommon0
          CFI (cfiCond1219) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1219) Conditional ??CrossCallReturnLabel_66
          CFI (cfiCond1219) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1219) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1219) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1219) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1219) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1219) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1219) CFA_SP SP+-2
          CFI (cfiCond1219) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1220 Using cfiCommon1
          CFI (cfiPicker1220) NoFunction
          CFI (cfiPicker1220) Picker
        LCALL   ?Subroutine163 & 0xFFFF
??CrossCallReturnLabel_276:
        RET
          CFI EndBlock cfiCond1217
          CFI EndBlock cfiCond1218
          CFI EndBlock cfiCond1219
          CFI EndBlock cfiPicker1220

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine163:
          CFI Block cfiCond1221 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_64
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1222 Using cfiCommon0
          CFI (cfiCond1222) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1222) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_65
          CFI (cfiCond1222) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1222) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1222) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1222) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1222) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1222) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1222) CFA_SP SP+-4
          CFI (cfiCond1222) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1223 Using cfiCommon0
          CFI (cfiCond1223) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1223) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_66
          CFI (cfiCond1223) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1223) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1223) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1223) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1223) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1223) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1223) CFA_SP SP+-4
          CFI (cfiCond1223) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1224 Using cfiCommon0
          CFI (cfiCond1224) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1224) Conditional ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_62
          CFI (cfiCond1224) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1224) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1224) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1224) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1224) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1224) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1224) CFA_SP SP+-4
          CFI (cfiCond1224) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1225 Using cfiCommon0
          CFI (cfiCond1225) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1225) Conditional ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_63
          CFI (cfiCond1225) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1225) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1225) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1225) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1225) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1225) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1225) CFA_SP SP+-4
          CFI (cfiCond1225) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1226 Using cfiCommon1
          CFI (cfiPicker1226) NoFunction
          CFI (cfiPicker1226) Picker
        LCALL   ?Subroutine196 & 0xFFFF
??CrossCallReturnLabel_315:
        RET
          CFI EndBlock cfiCond1221
          CFI EndBlock cfiCond1222
          CFI EndBlock cfiCond1223
          CFI EndBlock cfiCond1224
          CFI EndBlock cfiCond1225
          CFI EndBlock cfiPicker1226

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine196:
          CFI Block cfiCond1227 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_315, ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_64
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1228 Using cfiCommon0
          CFI (cfiCond1228) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1228) Conditional ??CrossCallReturnLabel_315, ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_65
          CFI (cfiCond1228) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1228) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1228) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1228) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1228) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1228) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1228) CFA_SP SP+-6
          CFI (cfiCond1228) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1229 Using cfiCommon0
          CFI (cfiCond1229) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1229) Conditional ??CrossCallReturnLabel_315, ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_66
          CFI (cfiCond1229) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1229) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1229) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1229) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1229) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1229) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1229) CFA_SP SP+-6
          CFI (cfiCond1229) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1230 Using cfiCommon0
          CFI (cfiCond1230) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1230) Conditional ??CrossCallReturnLabel_315, ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_62
          CFI (cfiCond1230) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1230) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1230) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1230) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1230) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1230) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1230) CFA_SP SP+-6
          CFI (cfiCond1230) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1231 Using cfiCommon0
          CFI (cfiCond1231) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1231) Conditional ??CrossCallReturnLabel_315, ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_63
          CFI (cfiCond1231) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1231) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1231) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1231) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1231) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1231) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1231) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1231) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1231) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1231) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1231) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1231) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1231) CFA_SP SP+-6
          CFI (cfiCond1231) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1232 Using cfiCommon0
          CFI (cfiCond1232) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1232) Conditional ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_49
          CFI (cfiCond1232) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1232) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1232) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1232) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1232) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1232) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1232) CFA_SP SP+-6
          CFI (cfiCond1232) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1233 Using cfiCommon0
          CFI (cfiCond1233) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1233) Conditional ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_50
          CFI (cfiCond1233) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1233) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1233) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1233) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1233) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1233) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1233) CFA_SP SP+-6
          CFI (cfiCond1233) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1234 Using cfiCommon0
          CFI (cfiCond1234) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1234) Conditional ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_39
          CFI (cfiCond1234) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1234) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1234) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1234) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1234) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1234) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1234) CFA_SP SP+-6
          CFI (cfiCond1234) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1235 Using cfiCommon0
          CFI (cfiCond1235) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1235) Conditional ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_40
          CFI (cfiCond1235) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1235) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1235) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1235) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1235) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1235) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1235) CFA_SP SP+-6
          CFI (cfiCond1235) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1236 Using cfiCommon1
          CFI (cfiPicker1236) NoFunction
          CFI (cfiPicker1236) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1227
          CFI EndBlock cfiCond1228
          CFI EndBlock cfiCond1229
          CFI EndBlock cfiCond1230
          CFI EndBlock cfiCond1231
          CFI EndBlock cfiCond1232
          CFI EndBlock cfiCond1233
          CFI EndBlock cfiCond1234
          CFI EndBlock cfiCond1235
          CFI EndBlock cfiPicker1236

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine42:
          CFI Block cfiCond1237 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_62
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1238 Using cfiCommon0
          CFI (cfiCond1238) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1238) Conditional ??CrossCallReturnLabel_63
          CFI (cfiCond1238) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1238) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1238) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1238) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1238) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1238) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1238) CFA_SP SP+-2
          CFI (cfiCond1238) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1239 Using cfiCommon1
          CFI (cfiPicker1239) NoFunction
          CFI (cfiPicker1239) Picker
        LCALL   ?Subroutine163 & 0xFFFF
??CrossCallReturnLabel_277:
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1237
          CFI EndBlock cfiCond1238
          CFI EndBlock cfiPicker1239

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine36:
          CFI Block cfiCond1240 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_49
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1241 Using cfiCommon0
          CFI (cfiCond1241) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1241) Conditional ??CrossCallReturnLabel_50
          CFI (cfiCond1241) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1241) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1241) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1241) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1241) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1241) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1241) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1241) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1241) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1241) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1241) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1241) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1241) CFA_SP SP+-2
          CFI (cfiCond1241) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1242 Using cfiCommon1
          CFI (cfiPicker1242) NoFunction
          CFI (cfiPicker1242) Picker
        LCALL   ?Subroutine156 & 0xFFFF
??CrossCallReturnLabel_263:
        RET
          CFI EndBlock cfiCond1240
          CFI EndBlock cfiCond1241
          CFI EndBlock cfiPicker1242

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine156:
          CFI Block cfiCond1243 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_49
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1244 Using cfiCommon0
          CFI (cfiCond1244) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1244) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_50
          CFI (cfiCond1244) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1244) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1244) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1244) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1244) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1244) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1244) CFA_SP SP+-4
          CFI (cfiCond1244) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1245 Using cfiCommon0
          CFI (cfiCond1245) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1245) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_39
          CFI (cfiCond1245) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1245) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1245) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1245) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1245) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1245) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1245) CFA_SP SP+-4
          CFI (cfiCond1245) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1246 Using cfiCommon0
          CFI (cfiCond1246) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1246) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_40
          CFI (cfiCond1246) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1246) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1246) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1246) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1246) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1246) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1246) CFA_SP SP+-4
          CFI (cfiCond1246) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1247 Using cfiCommon1
          CFI (cfiPicker1247) NoFunction
          CFI (cfiPicker1247) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine196 & 0xFFFF
??CrossCallReturnLabel_316:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1243
          CFI EndBlock cfiCond1244
          CFI EndBlock cfiCond1245
          CFI EndBlock cfiCond1246
          CFI EndBlock cfiPicker1247

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine31:
          CFI Block cfiCond1248 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_39
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1249 Using cfiCommon0
          CFI (cfiCond1249) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1249) Conditional ??CrossCallReturnLabel_40
          CFI (cfiCond1249) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1249) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1249) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1249) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1249) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1249) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1249) CFA_SP SP+-2
          CFI (cfiCond1249) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1250 Using cfiCommon1
          CFI (cfiPicker1250) NoFunction
          CFI (cfiPicker1250) Picker
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine156 & 0xFFFF
??CrossCallReturnLabel_264:
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1248
          CFI EndBlock cfiCond1249
          CFI EndBlock cfiPicker1250
// 2777 
// 2778 /*********************************************************************
// 2779  * @fn          ZDO_ParsePowerDescRsp
// 2780  *
// 2781  * @brief       This function parses the Power_Desc_rsp message.
// 2782  *
// 2783  * @param       inMsg  - incoming message
// 2784  * @param       pNPRsp - place to parse the message into
// 2785  *
// 2786  * @return      none
// 2787  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2788 void ZDO_ParsePowerDescRsp( zdoIncomingMsg_t *inMsg, ZDO_PowerRsp_t *pNPRsp )
ZDO_ParsePowerDescRsp:
          CFI Block cfiBlock1251 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
        CODE
// 2789 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
// 2790   uint8 *msg;
// 2791 
// 2792   msg = inMsg->asdu;
        LCALL   ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_189:
        LCALL   ?Subroutine101 & 0xFFFF
// 2793   pNPRsp->status = *msg++;
??CrossCallReturnLabel_158:
        LCALL   ??Subroutine267_0 & 0xFFFF
??CrossCallReturnLabel_676:
        LCALL   ?Subroutine160 & 0xFFFF
??CrossCallReturnLabel_273:
        MOV     R2,DPL
        MOV     R3,DPH
// 2794   pNPRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
        LCALL   ??Subroutine256_0 & 0xFFFF
??CrossCallReturnLabel_612:
        MOV     R1,A
        MOV     A,R6
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        LCALL   ??Subroutine221_0 & 0xFFFF
// 2795 
// 2796   if ( pNPRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_366:
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        JZ      $+5
        LJMP    ??ZDO_ParsePowerDescRsp_0 & 0xFFFF
// 2797   {
// 2798     msg += 2;
// 2799     pNPRsp->pwrDesc.AvailablePowerSources = *msg >> 4;
        MOV     A,R2
        ADD     A,#0x2
        MOV     R0,A
        CLR     A
        ADDC    A,R3
        MOV     R1,A
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
        MOV     A,R4
        ADD     A,#0x3
        CLR     A
        ADDC    A,R5
        INC     R4
        INC     R4
        INC     R4
        MOV     R5,A
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        ANL     A,#0xf
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V3,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf
        MOV     ?V0,A
        MOV     ?V1,#0x0
        MOV     A,#0x4
        MOV     R0,#?V0
        LCALL   ?S_SHL
        MOV     A,?V2
        ORL     A,?V0
        MOV     R1,?V3
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine32 & 0xFFFF
// 2800     pNPRsp->pwrDesc.PowerMode = *msg++ & 0x0F;
??CrossCallReturnLabel_41:
        MOV     A,?V0
        ORL     A,R0
        MOV     ?V0,A
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine221_0 & 0xFFFF
// 2801     pNPRsp->pwrDesc.CurrentPowerSourceLevel = *msg >> 4;
??CrossCallReturnLabel_367:
        MOV     A,R2
        ADD     A,#0x3
        CLR     A
        ADDC    A,R3
        INC     R6
        MOV     R7,A
        MOV     A,?V0
        MOV     ?V2,A
        MOV     A,R1
        ANL     A,#0xf
        MOV     ?V3,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf
        MOV     ?V0,A
        MOV     A,#0xc
        MOV     R0,#?V0
        LCALL   ?S_SHL
        MOV     A,?V3
        ORL     A,?V1
        MOV     R1,A
        MOV     DPL,R4
        MOV     DPH,R5
        MOV     A,?V2
        LCALL   ?Subroutine32 & 0xFFFF
// 2802     pNPRsp->pwrDesc.CurrentPowerSource = *msg++ & 0x0F;
// 2803   }
??CrossCallReturnLabel_42:
        MOV     A,R2
        ADD     A,#0x4
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0xf0
        MOVX    @DPTR,A
        MOV     A,R0
        MOV     R1,A
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        MOVX    A,@DPTR
        ORL     A,R1
        MOVX    @DPTR,A
// 2804 }
??ZDO_ParsePowerDescRsp_0:
        LJMP    ??Subroutine208_0 & 0xFFFF
          CFI EndBlock cfiBlock1251

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine113:
          CFI Block cfiCond1252 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
          CFI Conditional ??CrossCallReturnLabel_613
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1253 Using cfiCommon0
          CFI (cfiCond1253) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond1253) Conditional ??CrossCallReturnLabel_614
          CFI (cfiCond1253) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1253) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1253) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1253) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1253) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1253) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1253) CFA_SP SP+-2
          CFI (cfiCond1253) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1254 Using cfiCommon1
          CFI (cfiPicker1254) NoFunction
          CFI (cfiPicker1254) Picker
        MOV     DPH,A
          CFI EndBlock cfiCond1252
          CFI EndBlock cfiCond1253
          CFI EndBlock cfiPicker1254
        REQUIRE ??Subroutine256_0
        ; // Fall through to label ??Subroutine256_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine256_0:
          CFI Block cfiCond1255 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_609
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1256 Using cfiCommon0
          CFI (cfiCond1256) Function ZDO_ConvertOTAClusters
          CFI (cfiCond1256) Conditional ??CrossCallReturnLabel_610
          CFI (cfiCond1256) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1256) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1256) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1256) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1256) CFA_SP SP+-2
          CFI (cfiCond1256) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1257 Using cfiCommon0
          CFI (cfiCond1257) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1257) Conditional ??CrossCallReturnLabel_611
          CFI (cfiCond1257) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1257) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1257) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1257) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1257) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1257) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1257) CFA_SP SP+-2
          CFI (cfiCond1257) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1258 Using cfiCommon0
          CFI (cfiCond1258) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1258) Conditional ??CrossCallReturnLabel_612
          CFI (cfiCond1258) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1258) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1258) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1258) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1258) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1258) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1258) CFA_SP SP+-2
          CFI (cfiCond1258) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1259 Using cfiCommon0
          CFI (cfiCond1259) Function ZDO_AnyClusterMatches
          CFI (cfiCond1259) Conditional ??CrossCallReturnLabel_613
          CFI (cfiCond1259) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1259) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1259) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1259) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1259) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1259) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1259) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1259) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1259) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1259) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1259) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1259) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1259) CFA_SP SP+-2
          CFI (cfiCond1259) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1260 Using cfiCommon0
          CFI (cfiCond1260) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond1260) Conditional ??CrossCallReturnLabel_614
          CFI (cfiCond1260) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1260) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1260) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1260) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1260) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1260) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1260) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1260) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1260) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1260) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1260) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1260) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1260) CFA_SP SP+-2
          CFI (cfiCond1260) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1261 Using cfiCommon1
          CFI (cfiPicker1261) NoFunction
          CFI (cfiPicker1261) Picker
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1255
          CFI EndBlock cfiCond1256
          CFI EndBlock cfiCond1257
          CFI EndBlock cfiCond1258
          CFI EndBlock cfiCond1259
          CFI EndBlock cfiCond1260
          CFI EndBlock cfiPicker1261

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine101:
          CFI Block cfiCond1262 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_159
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1263 Using cfiCommon0
          CFI (cfiCond1263) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1263) Conditional ??CrossCallReturnLabel_158
          CFI (cfiCond1263) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1263) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1263) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1263) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1263) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1263) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1263) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1263) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1263) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1263) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1263) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1263) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1263) CFA_SP SP+-2
          CFI (cfiCond1263) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1264 Using cfiCommon1
          CFI (cfiPicker1264) NoFunction
          CFI (cfiPicker1264) Picker
        LCALL   ??Subroutine242_0 & 0xFFFF
??CrossCallReturnLabel_512:
        ; Setup parameters for call to function NLME_DirectJoinRequest
        MOV     DPL,R2
        MOV     DPH,R3
        RET
          CFI EndBlock cfiCond1262
          CFI EndBlock cfiCond1263
          CFI EndBlock cfiPicker1264

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine32:
          CFI Block cfiCond1265 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_41
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1266 Using cfiCommon0
          CFI (cfiCond1266) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1266) Conditional ??CrossCallReturnLabel_42
          CFI (cfiCond1266) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1266) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1266) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1266) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1266) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1266) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1266) CFA_SP SP+-2
          CFI (cfiCond1266) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1267 Using cfiCommon1
          CFI (cfiPicker1267) NoFunction
          CFI (cfiPicker1267) Picker
        LCALL   ??Subroutine222_0 & 0xFFFF
??CrossCallReturnLabel_522:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        ANL     A,#0xf
        MOV     R0,A
        RET
          CFI EndBlock cfiCond1265
          CFI EndBlock cfiCond1266
          CFI EndBlock cfiPicker1267
// 2805 
// 2806 /*********************************************************************
// 2807  * @fn          ZDO_ParseSimpleDescRsp
// 2808  *
// 2809  * @brief       This function parse the Simple_Desc_rsp message.
// 2810  *
// 2811  *   NOTE: The pAppInClusterList and pAppOutClusterList fields
// 2812  *         in the SimpleDescriptionFormat_t structure are allocated
// 2813  *         and the calling function needs to free [osal_msg_free()]
// 2814  *         these buffers.
// 2815  *
// 2816  * @param       inMsg  - incoming message
// 2817  * @param       pSimpleDescRsp - place to parse the message into
// 2818  *
// 2819  * @return      none
// 2820  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2821 void ZDO_ParseSimpleDescRsp( zdoIncomingMsg_t *inMsg, ZDO_SimpleDescRsp_t *pSimpleDescRsp )
ZDO_ParseSimpleDescRsp:
          CFI Block cfiBlock1268 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescRsp
        CODE
// 2822 {
        FUNCALL ZDO_ParseSimpleDescRsp, ZDO_ParseSimpleDescBuf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 2823   uint8 *msg;
// 2824 
// 2825   msg = inMsg->asdu;
        LCALL   ?Subroutine11 & 0xFFFF
// 2826   pSimpleDescRsp->status = *msg++;
// 2827   pSimpleDescRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
// 2828   msg += sizeof ( uint16 );
// 2829   msg++; // Skip past the length field.
// 2830 
// 2831   if ( pSimpleDescRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_1:
        JNZ     ??ZDO_ParseSimpleDescRsp_0
// 2832   {
// 2833     ZDO_ParseSimpleDescBuf( msg, &(pSimpleDescRsp->simpleDesc) );
        ; Setup parameters for call to function ZDO_ParseSimpleDescBuf
        MOV     A,R4
        ADD     A,#0x3
        MOV     R4,A
        JNC     ??ZDO_ParseSimpleDescRsp_1
        INC     R5
??ZDO_ParseSimpleDescRsp_1:
        MOV     A,R0
        ADD     A,#0x3
        MOV     R2,A
        CLR     A
        ADDC    A,R1
        MOV     R3,A
        LCALL   `??ZDO_ParseSimpleDescBuf::?relay`; Banked call to: ZDO_ParseSimpleDescBuf
// 2834   }
// 2835 }
??ZDO_ParseSimpleDescRsp_0:
        LJMP    ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock1268

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine11:
          CFI Block cfiCond1269 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1270 Using cfiCommon0
          CFI (cfiCond1270) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1270) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond1270) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1270) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1270) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1270) CFA_SP SP+-2
          CFI (cfiCond1270) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker1271 Using cfiCommon1
          CFI (cfiPicker1271) NoFunction
          CFI (cfiPicker1271) Picker
        LCALL   ?Subroutine186 & 0xFFFF
??CrossCallReturnLabel_305:
        LCALL   ?Subroutine174 & 0xFFFF
??CrossCallReturnLabel_411:
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    @DPTR,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R6
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1269
          CFI EndBlock cfiCond1270
          CFI EndBlock cfiPicker1271
// 2836 
// 2837 /*********************************************************************
// 2838  * @fn          ZDO_ParseEPListRsp
// 2839  *
// 2840  * @brief       This parse the Active_EP_rsp or Match_Desc_rsp message.
// 2841  *
// 2842  * @param       inMsg  - incoming message
// 2843  *
// 2844  * @return      none
// 2845  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2846 ZDO_ActiveEndpointRsp_t *ZDO_ParseEPListRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseEPListRsp:
          CFI Block cfiBlock1272 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
        CODE
// 2847 {
        FUNCALL ZDO_ParseEPListRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEPListRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
// 2848   ZDO_ActiveEndpointRsp_t *pRsp;
// 2849   uint8 *msg;
// 2850   uint8 Status;
// 2851   uint8 cnt;
// 2852 
// 2853   msg = inMsg->asdu;
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_186:
        MOVX    A,@DPTR
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
// 2854   Status = *msg++;
        MOV     DPL,?V0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V3,A
        INC     DPTR
        MOV     ?V0,DPL
        MOV     ?V1,DPH
// 2855   cnt = msg[2];
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V2,A
// 2856 
// 2857   pRsp = (ZDO_ActiveEndpointRsp_t *)osal_mem_alloc( sizeof(  ZDO_ActiveEndpointRsp_t ) + cnt );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ??Subroutine264_0 & 0xFFFF
??CrossCallReturnLabel_658:
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     R6,?V4
        MOV     R7,?V5
// 2858   if ( pRsp )
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_ParseEPListRsp_0
// 2859   {
// 2860     pRsp->status = Status;
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,?V3
        MOVX    @DPTR,A
// 2861     pRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    A,@DPTR
        MOV     R2,A
        LCALL   ?Subroutine24 & 0xFFFF
// 2862     msg += sizeof( uint16 );
// 2863     pRsp->cnt = cnt;
// 2864     msg++; // pass cnt
// 2865     osal_memcpy( pRsp->epList, msg, cnt );
??CrossCallReturnLabel_25:
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V4,R1
        MOV     ?V5,R2
        MOV     ?V6,R0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 18)
        LCALL   ?Subroutine194 & 0xFFFF
// 2866   }
??CrossCallReturnLabel_662:
        ADDC    A,R7
        MOV     R3,A
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
// 2867 
// 2868   return ( pRsp );
??ZDO_ParseEPListRsp_0:
        LJMP    ?Subroutine6 & 0xFFFF
// 2869 }
          CFI EndBlock cfiBlock1272
// 2870 
// 2871 /*********************************************************************
// 2872  * @fn          ZDO_ParseServerDiscRsp
// 2873  *
// 2874  * @brief       Parse the Server_Discovery_rsp message.
// 2875  *
// 2876  * @param       inMsg - incoming message.
// 2877  * @param       pRsp - place to put the parsed information.
// 2878  *
// 2879  * @return      none
// 2880  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2881 void ZDO_ParseServerDiscRsp( zdoIncomingMsg_t *inMsg, ZDO_ServerDiscRsp_t *pRsp )
ZDO_ParseServerDiscRsp:
          CFI Block cfiBlock1273 Using cfiCommon0
          CFI Function ZDO_ParseServerDiscRsp
        CODE
// 2882 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 2883   pRsp->status = inMsg->asdu[0];
        MOV     A,R2
        ADD     A,#0x13
        MOV     R0,A
        CLR     A
        ADDC    A,R3
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine257_0 & 0xFFFF
??CrossCallReturnLabel_647:
        MOV     DPH,A
        MOV     DPL,R2
        LCALL   ??Subroutine267_0 & 0xFFFF
??CrossCallReturnLabel_677:
        LCALL   ?Subroutine40 & 0xFFFF
// 2884   pRsp->serverMask = BUILD_UINT16( inMsg->asdu[1], inMsg->asdu[2] );
??CrossCallReturnLabel_59:
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        LCALL   ??Subroutine268_0 & 0xFFFF
??CrossCallReturnLabel_681:
        LCALL   ??Subroutine221_0 & 0xFFFF
// 2885 }
??CrossCallReturnLabel_368:
        LJMP    ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock1273

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine201:
          CFI Block cfiCond1274 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_649
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1275 Using cfiCommon0
          CFI (cfiCond1275) Function ZDMatchSendState
          CFI (cfiCond1275) Conditional ??CrossCallReturnLabel_650
          CFI (cfiCond1275) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1275) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1275) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1275) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1275) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1275) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1275) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1275) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1275) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1275) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1275) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1275) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1275) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1275) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1275) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1275) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1275) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1275) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1275) CFA_SP SP+-2
          CFI (cfiCond1275) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1276 Using cfiCommon1
          CFI (cfiPicker1276) NoFunction
          CFI (cfiPicker1276) Picker
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     DPTR,#matchED
          CFI EndBlock cfiCond1274
          CFI EndBlock cfiCond1275
          CFI EndBlock cfiPicker1276
        REQUIRE ??Subroutine257_0
        ; // Fall through to label ??Subroutine257_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine257_0:
          CFI Block cfiCond1277 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_648, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_93
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1278 Using cfiCommon0
          CFI (cfiCond1278) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond1278) Conditional ??CrossCallReturnLabel_648, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_94
          CFI (cfiCond1278) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1278) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1278) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1278) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1278) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1278) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1278) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1278) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1278) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1278) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1278) CFA_SP SP+-6
          CFI (cfiCond1278) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1279 Using cfiCommon0
          CFI (cfiCond1279) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond1279) Conditional ??CrossCallReturnLabel_648, ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_110
          CFI (cfiCond1279) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1279) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1279) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1279) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1279) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1279) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1279) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1279) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1279) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1279) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1279) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1279) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1279) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1279) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1279) CFA_SP SP+-6
          CFI (cfiCond1279) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1280 Using cfiCommon0
          CFI (cfiCond1280) Function ZDO_ProcessUserDescReq
          CFI (cfiCond1280) Conditional ??CrossCallReturnLabel_648, ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_111
          CFI (cfiCond1280) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1280) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1280) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1280) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1280) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1280) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1280) CFA_SP SP+-6
          CFI (cfiCond1280) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1281 Using cfiCommon0
          CFI (cfiCond1281) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1281) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_118
          CFI (cfiCond1281) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1281) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1281) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1281) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1281) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1281) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1281) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1281) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1281) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1281) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1281) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1281) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1281) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1281) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1281) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1281) CFA_SP SP+-6
          CFI (cfiCond1281) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1282 Using cfiCommon0
          CFI (cfiCond1282) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1282) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_119
          CFI (cfiCond1282) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1282) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1282) CFA_SP SP+-11
          CFI Block cfiCond1283 Using cfiCommon0
          CFI (cfiCond1283) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1283) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_116
          CFI (cfiCond1283) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1283) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1283) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1283) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1283) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1283) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1283) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1283) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1283) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1283) CFA_SP SP+-6
          CFI (cfiCond1283) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1284 Using cfiCommon0
          CFI (cfiCond1284) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1284) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_117
          CFI (cfiCond1284) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1284) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1284) CFA_SP SP+-11
          CFI Block cfiCond1285 Using cfiCommon0
          CFI (cfiCond1285) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1285) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_114
          CFI (cfiCond1285) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1285) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1285) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1285) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1285) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1285) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1285) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1285) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1285) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1285) CFA_SP SP+-6
          CFI (cfiCond1285) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1286 Using cfiCommon0
          CFI (cfiCond1286) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1286) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_115
          CFI (cfiCond1286) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1286) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1286) CFA_SP SP+-11
          CFI Block cfiCond1287 Using cfiCommon0
          CFI (cfiCond1287) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1287) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_112
          CFI (cfiCond1287) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1287) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1287) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1287) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1287) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1287) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1287) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1287) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1287) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1287) CFA_SP SP+-6
          CFI (cfiCond1287) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1288 Using cfiCommon0
          CFI (cfiCond1288) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1288) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_113
          CFI (cfiCond1288) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1288) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1288) CFA_SP SP+-11
          CFI Block cfiCond1289 Using cfiCommon0
          CFI (cfiCond1289) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond1289) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_159
          CFI (cfiCond1289) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1289) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1289) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1289) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1289) CFA_SP SP+-6
          CFI (cfiCond1289) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1290 Using cfiCommon0
          CFI (cfiCond1290) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1290) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_158
          CFI (cfiCond1290) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1290) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1290) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1290) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1290) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1290) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1290) CFA_SP SP+-6
          CFI (cfiCond1290) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1291 Using cfiCommon0
          CFI (cfiCond1291) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1291) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_104
          CFI (cfiCond1291) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1291) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1291) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1291) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1291) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1291) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1291) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1291) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1291) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1291) CFA_SP SP+-6
          CFI (cfiCond1291) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1292 Using cfiCommon0
          CFI (cfiCond1292) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1292) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_105
          CFI (cfiCond1292) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1292) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1292) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1292) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1292) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1292) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1292) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1292) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1292) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1292) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1292) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1292) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1292) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1292) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1292) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1292) CFA_SP SP+-6
          CFI (cfiCond1292) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1293 Using cfiCommon0
          CFI (cfiCond1293) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1293) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_507
          CFI (cfiCond1293) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1293) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1293) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1293) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1293) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1293) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1293) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1293) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1293) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1293) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1293) CFA_SP SP+-6
          CFI (cfiCond1293) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1294 Using cfiCommon0
          CFI (cfiCond1294) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1294) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_508
          CFI (cfiCond1294) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1294) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1294) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1294) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1294) CFA_SP SP+-6
          CFI (cfiCond1294) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1295 Using cfiCommon0
          CFI (cfiCond1295) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1295) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_509
          CFI (cfiCond1295) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1295) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1295) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1295) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1295) CFA_SP SP+-6
          CFI (cfiCond1295) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1296 Using cfiCommon0
          CFI (cfiCond1296) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond1296) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_503
          CFI (cfiCond1296) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1296) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1296) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1296) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1296) CFA_SP SP+-6
          CFI (cfiCond1296) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1297 Using cfiCommon0
          CFI (cfiCond1297) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond1297) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_504
          CFI (cfiCond1297) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1297) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1297) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1297) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1297) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1297) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1297) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1297) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1297) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1297) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1297) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1297) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1297) CFA_SP SP+-6
          CFI (cfiCond1297) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1298 Using cfiCommon0
          CFI (cfiCond1298) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1298) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_505
          CFI (cfiCond1298) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1298) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1298) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1298) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1298) CFA_SP SP+-6
          CFI (cfiCond1298) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1299 Using cfiCommon0
          CFI (cfiCond1299) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1299) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_506
          CFI (cfiCond1299) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1299) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1299) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1299) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1299) CFA_SP SP+-6
          CFI (cfiCond1299) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1300 Using cfiCommon0
          CFI (cfiCond1300) Function ZDO_StartDevice
          CFI (cfiCond1300) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_479
          CFI (cfiCond1300) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1300) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1300) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1300) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1300) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1300) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1300) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1300) CFA_SP SP+-6
          CFI (cfiCond1300) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond1301 Using cfiCommon0
          CFI (cfiCond1301) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1301) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_480
          CFI (cfiCond1301) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1301) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1301) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1301) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1301) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1301) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1301) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1301) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1301) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1301) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1301) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1301) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1301) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1301) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1301) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1301) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1301) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1301) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1301) CFA_SP SP+-6
          CFI (cfiCond1301) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond1302 Using cfiCommon0
          CFI (cfiCond1302) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1302) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_481
          CFI (cfiCond1302) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1302) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1302) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1302) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1302) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1302) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1302) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1302) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1302) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1302) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1302) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1302) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1302) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1302) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1302) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1302) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1302) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1302) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1302) CFA_SP SP+-6
          CFI (cfiCond1302) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond1303 Using cfiCommon0
          CFI (cfiCond1303) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1303) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_482
          CFI (cfiCond1303) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1303) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1303) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1303) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1303) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1303) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1303) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1303) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1303) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1303) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1303) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1303) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1303) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1303) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1303) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1303) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1303) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1303) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1303) CFA_SP SP+-6
          CFI (cfiCond1303) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1304 Using cfiCommon0
          CFI (cfiCond1304) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1304) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_483
          CFI (cfiCond1304) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1304) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1304) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1304) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1304) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1304) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1304) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1304) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1304) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1304) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1304) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1304) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1304) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1304) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1304) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1304) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1304) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1304) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1304) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1304) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1304) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1304) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1304) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1304) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1304) CFA_SP SP+-6
          CFI (cfiCond1304) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1305 Using cfiCommon0
          CFI (cfiCond1305) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1305) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_484
          CFI (cfiCond1305) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1305) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1305) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1305) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1305) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1305) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1305) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1305) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1305) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1305) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1305) CFA_SP SP+-6
          CFI (cfiCond1305) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1306 Using cfiCommon0
          CFI (cfiCond1306) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1306) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_485
          CFI (cfiCond1306) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1306) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1306) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1306) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1306) CFA_SP SP+-6
          CFI (cfiCond1306) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1307 Using cfiCommon0
          CFI (cfiCond1307) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1307) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_486
          CFI (cfiCond1307) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1307) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1307) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1307) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1307) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1307) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1307) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1307) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1307) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1307) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1307) CFA_SP SP+-6
          CFI (cfiCond1307) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1308 Using cfiCommon0
          CFI (cfiCond1308) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1308) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_487
          CFI (cfiCond1308) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1308) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1308) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1308) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1308) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1308) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1308) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1308) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1308) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1308) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1308) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1308) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1308) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1308) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1308) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1308) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1308) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1308) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1308) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1308) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1308) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1308) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1308) CFA_SP SP+-6
          CFI (cfiCond1308) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1309 Using cfiCommon0
          CFI (cfiCond1309) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond1309) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_488
          CFI (cfiCond1309) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1309) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1309) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1309) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1309) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1309) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1309) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1309) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1309) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1309) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1309) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1309) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1309) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1309) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1309) CFA_SP SP+-6
          CFI (cfiCond1309) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1310 Using cfiCommon0
          CFI (cfiCond1310) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond1310) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_489
          CFI (cfiCond1310) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1310) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1310) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1310) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1310) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1310) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1310) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1310) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1310) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1310) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1310) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1310) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1310) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1310) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1310) CFA_SP SP+-6
          CFI (cfiCond1310) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1311 Using cfiCommon0
          CFI (cfiCond1311) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1311) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_490
          CFI (cfiCond1311) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1311) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1311) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1311) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1311) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1311) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1311) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1311) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1311) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1311) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1311) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1311) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1311) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1311) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1311) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1311) CFA_SP SP+-6
          CFI (cfiCond1311) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1312 Using cfiCommon0
          CFI (cfiCond1312) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1312) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_491
          CFI (cfiCond1312) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1312) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1312) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1312) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1312) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1312) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1312) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1312) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1312) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1312) CFA_SP SP+-6
          CFI (cfiCond1312) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1313 Using cfiCommon0
          CFI (cfiCond1313) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1313) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_492
          CFI (cfiCond1313) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1313) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1313) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1313) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1313) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1313) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1313) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1313) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1313) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1313) CFA_SP SP+-6
          CFI (cfiCond1313) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond1314 Using cfiCommon0
          CFI (cfiCond1314) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1314) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_493
          CFI (cfiCond1314) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1314) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1314) CFA_SP SP+-11
          CFI Block cfiCond1315 Using cfiCommon0
          CFI (cfiCond1315) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1315) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_494
          CFI (cfiCond1315) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1315) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1315) CFA_SP SP+-11
          CFI Block cfiCond1316 Using cfiCommon0
          CFI (cfiCond1316) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1316) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_495
          CFI (cfiCond1316) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1316) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1316) CFA_SP SP+-11
          CFI Block cfiCond1317 Using cfiCommon0
          CFI (cfiCond1317) Function ZDO_CopyMatchInfo
          CFI (cfiCond1317) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_496
          CFI (cfiCond1317) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1317) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1317) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1317) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1317) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1317) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1317) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1317) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1317) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1317) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1317) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1317) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1317) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1317) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1317) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1317) CFA_SP SP+-6
          CFI (cfiCond1317) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1318 Using cfiCommon0
          CFI (cfiCond1318) Function ZDO_CopyMatchInfo
          CFI (cfiCond1318) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_497
          CFI (cfiCond1318) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1318) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1318) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1318) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1318) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1318) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1318) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1318) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1318) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1318) CFA_SP SP+-6
          CFI (cfiCond1318) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1319 Using cfiCommon0
          CFI (cfiCond1319) Function ZDO_CopyMatchInfo
          CFI (cfiCond1319) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_498
          CFI (cfiCond1319) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1319) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1319) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1319) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1319) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1319) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1319) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1319) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1319) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1319) CFA_SP SP+-6
          CFI (cfiCond1319) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1320 Using cfiCommon0
          CFI (cfiCond1320) Function ZDO_CopyMatchInfo
          CFI (cfiCond1320) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_499
          CFI (cfiCond1320) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1320) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1320) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1320) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1320) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1320) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1320) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1320) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1320) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1320) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1320) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1320) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1320) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1320) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1320) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1320) CFA_SP SP+-6
          CFI (cfiCond1320) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1321 Using cfiCommon0
          CFI (cfiCond1321) Function ZDMatchSendState
          CFI (cfiCond1321) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_500
          CFI (cfiCond1321) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1321) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1321) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1321) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1321) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1321) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1321) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1321) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1321) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1321) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1321) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1321) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1321) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1321) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1321) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1321) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1321) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1321) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1321) CFA_SP SP+-6
          CFI (cfiCond1321) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1322 Using cfiCommon0
          CFI (cfiCond1322) Function ZDMatchSendState
          CFI (cfiCond1322) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_501
          CFI (cfiCond1322) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1322) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1322) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1322) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1322) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1322) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1322) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1322) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1322) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1322) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1322) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1322) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1322) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1322) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1322) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1322) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1322) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1322) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1322) CFA_SP SP+-6
          CFI (cfiCond1322) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1323 Using cfiCommon0
          CFI (cfiCond1323) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1323) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_502
          CFI (cfiCond1323) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1323) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1323) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1323) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1323) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1323) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1323) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1323) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1323) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1323) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1323) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1323) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1323) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1323) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1323) CFA_SP SP+-6
          CFI (cfiCond1323) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1324 Using cfiCommon0
          CFI (cfiCond1324) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1324) Conditional ??CrossCallReturnLabel_647
          CFI (cfiCond1324) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1324) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1324) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1324) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1324) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1324) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1324) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1324) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1324) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1324) CFA_SP SP+-2
          CFI (cfiCond1324) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1325 Using cfiCommon0
          CFI (cfiCond1325) Function ZDO_ParseAddrRsp
          CFI (cfiCond1325) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_646, ??CrossCallReturnLabel_640
          CFI (cfiCond1325) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1325) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1325) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1325) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1325) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1325) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1325) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1325) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1325) CFA_SP SP+-6
          CFI (cfiCond1325) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1326 Using cfiCommon0
          CFI (cfiCond1326) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1326) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_646, ??CrossCallReturnLabel_641
          CFI (cfiCond1326) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1326) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1326) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1326) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1326) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1326) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1326) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1326) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1326) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1326) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1326) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1326) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1326) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1326) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1326) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1326) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1326) CFA_SP SP+-6
          CFI (cfiCond1326) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1327 Using cfiCommon0
          CFI (cfiCond1327) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1327) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_646, ??CrossCallReturnLabel_642
          CFI (cfiCond1327) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1327) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1327) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1327) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1327) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1327) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1327) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1327) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1327) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1327) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1327) CFA_SP SP+-6
          CFI (cfiCond1327) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1328 Using cfiCommon0
          CFI (cfiCond1328) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1328) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_646, ??CrossCallReturnLabel_638
          CFI (cfiCond1328) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1328) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1328) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1328) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1328) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1328) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1328) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1328) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1328) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1328) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1328) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1328) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1328) CFA_SP SP+-6
          CFI (cfiCond1328) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1329 Using cfiCommon0
          CFI (cfiCond1329) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1329) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_646, ??CrossCallReturnLabel_639
          CFI (cfiCond1329) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1329) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1329) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1329) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1329) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1329) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1329) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1329) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1329) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1329) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1329) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1329) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1329) CFA_SP SP+-6
          CFI (cfiCond1329) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1330 Using cfiCommon0
          CFI (cfiCond1330) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1330) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_645, ??CrossCallReturnLabel_152
          CFI (cfiCond1330) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1330) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1330) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1330) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1330) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1330) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1330) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1330) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1330) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1330) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1330) CFA_SP SP+-6
          CFI (cfiCond1330) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1331 Using cfiCommon0
          CFI (cfiCond1331) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1331) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_645, ??CrossCallReturnLabel_153
          CFI (cfiCond1331) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1331) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1331) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1331) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1331) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1331) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1331) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1331) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1331) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1331) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1331) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1331) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1331) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1331) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1331) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1331) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1331) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1331) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1331) CFA_SP SP+-6
          CFI (cfiCond1331) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1332 Using cfiCommon0
          CFI (cfiCond1332) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1332) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_643, ??CrossCallReturnLabel_106
          CFI (cfiCond1332) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1332) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1332) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1332) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1332) CFA_SP SP+-6
          CFI (cfiCond1332) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1333 Using cfiCommon0
          CFI (cfiCond1333) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1333) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_643, ??CrossCallReturnLabel_107
          CFI (cfiCond1333) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1333) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1333) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1333) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1333) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1333) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1333) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1333) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1333) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1333) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1333) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1333) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1333) CFA_SP SP+-6
          CFI (cfiCond1333) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1334 Using cfiCommon0
          CFI (cfiCond1334) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1334) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_644, ??CrossCallReturnLabel_108
          CFI (cfiCond1334) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1334) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1334) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1334) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1334) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1334) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1334) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1334) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1334) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1334) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1334) CFA_SP SP+-6
          CFI (cfiCond1334) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1335 Using cfiCommon0
          CFI (cfiCond1335) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1335) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_644, ??CrossCallReturnLabel_109
          CFI (cfiCond1335) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1335) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1335) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1335) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1335) CFA_SP SP+-6
          CFI (cfiCond1335) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1336 Using cfiCommon0
          CFI (cfiCond1336) Function ZDMatchSendState
          CFI (cfiCond1336) Conditional ??CrossCallReturnLabel_649
          CFI (cfiCond1336) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1336) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1336) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1336) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1336) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1336) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1336) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1336) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1336) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1336) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1336) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1336) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1336) CFA_SP SP+-2
          CFI (cfiCond1336) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1337 Using cfiCommon0
          CFI (cfiCond1337) Function ZDMatchSendState
          CFI (cfiCond1337) Conditional ??CrossCallReturnLabel_650
          CFI (cfiCond1337) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1337) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1337) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1337) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1337) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1337) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1337) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1337) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1337) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1337) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1337) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1337) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1337) CFA_SP SP+-2
          CFI (cfiCond1337) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1338 Using cfiCommon1
          CFI (cfiPicker1338) NoFunction
          CFI (cfiPicker1338) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1277
          CFI EndBlock cfiCond1278
          CFI EndBlock cfiCond1279
          CFI EndBlock cfiCond1280
          CFI EndBlock cfiCond1281
          CFI EndBlock cfiCond1282
          CFI EndBlock cfiCond1283
          CFI EndBlock cfiCond1284
          CFI EndBlock cfiCond1285
          CFI EndBlock cfiCond1286
          CFI EndBlock cfiCond1287
          CFI EndBlock cfiCond1288
          CFI EndBlock cfiCond1289
          CFI EndBlock cfiCond1290
          CFI EndBlock cfiCond1291
          CFI EndBlock cfiCond1292
          CFI EndBlock cfiCond1293
          CFI EndBlock cfiCond1294
          CFI EndBlock cfiCond1295
          CFI EndBlock cfiCond1296
          CFI EndBlock cfiCond1297
          CFI EndBlock cfiCond1298
          CFI EndBlock cfiCond1299
          CFI EndBlock cfiCond1300
          CFI EndBlock cfiCond1301
          CFI EndBlock cfiCond1302
          CFI EndBlock cfiCond1303
          CFI EndBlock cfiCond1304
          CFI EndBlock cfiCond1305
          CFI EndBlock cfiCond1306
          CFI EndBlock cfiCond1307
          CFI EndBlock cfiCond1308
          CFI EndBlock cfiCond1309
          CFI EndBlock cfiCond1310
          CFI EndBlock cfiCond1311
          CFI EndBlock cfiCond1312
          CFI EndBlock cfiCond1313
          CFI EndBlock cfiCond1314
          CFI EndBlock cfiCond1315
          CFI EndBlock cfiCond1316
          CFI EndBlock cfiCond1317
          CFI EndBlock cfiCond1318
          CFI EndBlock cfiCond1319
          CFI EndBlock cfiCond1320
          CFI EndBlock cfiCond1321
          CFI EndBlock cfiCond1322
          CFI EndBlock cfiCond1323
          CFI EndBlock cfiCond1324
          CFI EndBlock cfiCond1325
          CFI EndBlock cfiCond1326
          CFI EndBlock cfiCond1327
          CFI EndBlock cfiCond1328
          CFI EndBlock cfiCond1329
          CFI EndBlock cfiCond1330
          CFI EndBlock cfiCond1331
          CFI EndBlock cfiCond1332
          CFI EndBlock cfiCond1333
          CFI EndBlock cfiCond1334
          CFI EndBlock cfiCond1335
          CFI EndBlock cfiCond1336
          CFI EndBlock cfiCond1337
          CFI EndBlock cfiPicker1338

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine40:
          CFI Block cfiCond1339 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_58
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1340 Using cfiCommon0
          CFI (cfiCond1340) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1340) Conditional ??CrossCallReturnLabel_59
          CFI (cfiCond1340) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1340) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1340) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1340) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1340) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1340) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1340) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1340) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1340) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1340) CFA_SP SP+-2
          CFI (cfiCond1340) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker1341 Using cfiCommon1
          CFI (cfiPicker1341) NoFunction
          CFI (cfiPicker1341) Picker
        LCALL   ?Subroutine195 & 0xFFFF
??CrossCallReturnLabel_313:
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI EndBlock cfiCond1339
          CFI EndBlock cfiCond1340
          CFI EndBlock cfiPicker1341

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine195:
          CFI Block cfiCond1342 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_43
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1343 Using cfiCommon0
          CFI (cfiCond1343) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1343) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_44
          CFI (cfiCond1343) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1343) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1343) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1343) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1343) CFA_SP SP+-6
          CFI (cfiCond1343) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1344 Using cfiCommon0
          CFI (cfiCond1344) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1344) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_18
          CFI (cfiCond1344) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1344) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1344) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1344) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1344) CFA_SP SP+-6
          CFI (cfiCond1344) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1345 Using cfiCommon0
          CFI (cfiCond1345) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1345) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_19
          CFI (cfiCond1345) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1345) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1345) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1345) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1345) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1345) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1345) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1345) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1345) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1345) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1345) CFA_SP SP+-6
          CFI (cfiCond1345) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1346 Using cfiCommon0
          CFI (cfiCond1346) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1346) Conditional ??CrossCallReturnLabel_313, ??CrossCallReturnLabel_58
          CFI (cfiCond1346) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1346) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1346) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1346) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1346) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1346) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1346) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1346) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1346) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1346) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1346) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1346) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1346) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1346) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1346) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1346) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1346) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1346) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1346) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1346) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1346) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1346) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1346) CFA_SP SP+-4
          CFI (cfiCond1346) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1347 Using cfiCommon0
          CFI (cfiCond1347) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1347) Conditional ??CrossCallReturnLabel_313, ??CrossCallReturnLabel_59
          CFI (cfiCond1347) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1347) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1347) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1347) CFA_SP SP+-4
          CFI (cfiCond1347) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1348 Using cfiCommon0
          CFI (cfiCond1348) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1348) Conditional ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_79
          CFI (cfiCond1348) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1348) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1348) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1348) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1348) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1348) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1348) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1348) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1348) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1348) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1348) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1348) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1348) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1348) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1348) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1348) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1348) CFA_SP SP+-4
          CFI (cfiCond1348) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1349 Using cfiCommon0
          CFI (cfiCond1349) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1349) Conditional ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_80
          CFI (cfiCond1349) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1349) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1349) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1349) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1349) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1349) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1349) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1349) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1349) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1349) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1349) CFA_SP SP+-4
          CFI (cfiCond1349) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1350 Using cfiCommon1
          CFI (cfiPicker1350) NoFunction
          CFI (cfiPicker1350) Picker
        MOVX    @DPTR,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1342
          CFI EndBlock cfiCond1343
          CFI EndBlock cfiCond1344
          CFI EndBlock cfiCond1345
          CFI EndBlock cfiCond1346
          CFI EndBlock cfiCond1347
          CFI EndBlock cfiCond1348
          CFI EndBlock cfiCond1349
          CFI EndBlock cfiPicker1350
// 2886 
// 2887 /*********************************************************************
// 2888  * @fn          ZDO_ParseMgmtLqiRsp
// 2889  *
// 2890  * @brief       This function parses the incoming Management
// 2891  *              LQI response
// 2892  *
// 2893  * @param       inMsg - incoming message
// 2894  *
// 2895  * @return      a pointer to parsed response structure (NULL if not allocated).
// 2896  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 2897  *          by the calling function [osal_mem_free()].
// 2898  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2899 ZDO_MgmtLqiRsp_t *ZDO_ParseMgmtLqiRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtLqiRsp:
          CFI Block cfiBlock1351 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
        CODE
// 2900 {
        FUNCALL ZDO_ParseMgmtLqiRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 2901   ZDO_MgmtLqiRsp_t *pRsp;
// 2902   uint8 status;
// 2903   uint8 startIndex = 0;
        MOV     ?V5,#0x0
// 2904   uint8 neighborLqiCount = 0;
        MOV     ?V4,#0x0
// 2905   uint8 neighborLqiEntries = 0;
        MOV     ?V6,#0x0
// 2906   uint8 *msg;
// 2907 
// 2908   msg = inMsg->asdu;
        LCALL   ?Subroutine57 & 0xFFFF
// 2909 
// 2910   status = *msg++;
??CrossCallReturnLabel_653:
        MOV     ?V7,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 2911   if ( status == ZSuccess )
        JNZ     ??ZDO_ParseMgmtLqiRsp_0
// 2912   {
// 2913     neighborLqiEntries = *msg++;
        MOVX    A,@DPTR
        MOV     ?V6,A
// 2914     startIndex = *msg++;
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V5,A
// 2915     neighborLqiCount = *msg++;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V4,A
        MOV     A,R6
        ADD     A,#0x3
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtLqiRsp_0
        INC     R7
// 2916   }
// 2917 
// 2918   // Allocate a buffer big enough to handle the list.
// 2919   pRsp = (ZDO_MgmtLqiRsp_t *)osal_mem_alloc(
// 2920             sizeof( ZDO_MgmtLqiRsp_t ) + (neighborLqiCount * sizeof( ZDP_MgmtLqiItem_t )) );
??ZDO_ParseMgmtLqiRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V4
        MOV     B,#0x1a
        LCALL   ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_253:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V2,R2
        MOV     ?V3,R3
// 2921   if ( pRsp )
        MOV     A,R2
        ORL     A,?V3
        JNZ     $+5
        LJMP    ??ZDO_ParseMgmtLqiRsp_1 & 0xFFFF
// 2922   {
// 2923     uint8 x;
// 2924     ZDP_MgmtLqiItem_t *pList = pRsp->list;
        LCALL   ?Subroutine152 & 0xFFFF
// 2925     pRsp->status = status;
??CrossCallReturnLabel_256:
        LCALL   ?Subroutine12 & 0xFFFF
// 2926     pRsp->neighborLqiEntries = neighborLqiEntries;
// 2927     pRsp->startIndex = startIndex;
// 2928     pRsp->neighborLqiCount = neighborLqiCount;
// 2929 
// 2930     for ( x = 0; x < neighborLqiCount; x++ )
??CrossCallReturnLabel_2:
        LJMP    ??ZDO_ParseMgmtLqiRsp_2 & 0xFFFF
// 2931     {
// 2932       uint8 tmp;
// 2933 
// 2934       pList->panID = 0; // This isn't in the record, why is it in the structure?
??ZDO_ParseMgmtLqiRsp_3:
        MOV     DPL,?V0
        MOV     DPH,?V1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 2935       osal_cpyExtAddr(pList->extPanID, msg);   //Copy extended PAN ID
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        LCALL   ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_607:
        ADDC    A,?V1
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2936       msg += Z_EXTADDR_LEN;
        MOV     A,R6
        ADD     A,#0x8
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtLqiRsp_4
        INC     R7
// 2937 
// 2938       osal_cpyExtAddr(pList->extAddr, msg);   //Copy extended address
??ZDO_ParseMgmtLqiRsp_4:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,?V0
        LCALL   ??Subroutine258_0 & 0xFFFF
??CrossCallReturnLabel_616:
        ADDC    A,?V1
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2939       msg += Z_EXTADDR_LEN;
        MOV     A,R6
        ADD     A,#0x8
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtLqiRsp_5
        INC     R7
// 2940 
// 2941       pList->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtLqiRsp_5:
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_641:
        MOV     R0,A
        MOV     A,?V0
        ADD     A,#0x12
        LCALL   ??Subroutine259_0 & 0xFFFF
??CrossCallReturnLabel_623:
        MOV     A,R0
        LCALL   ?Subroutine34 & 0xFFFF
// 2942       msg += 2;
// 2943 
// 2944       tmp = *msg++;
??CrossCallReturnLabel_45:
        MOV     R0,A
// 2945       pList->devType = tmp & 0x03;
        MOV     A,#0x3
        ANL     A,R0
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine142 & 0xFFFF
??CrossCallReturnLabel_228:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2946       pList->rxOnIdle = (tmp >> 2) & 0x03;
        MOV     A,R0
        RRC     A
        RRC     A
        ANL     A,#0x3f
        ANL     A,#0x3
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0x15
        LCALL   ??Subroutine259_0 & 0xFFFF
??CrossCallReturnLabel_624:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2947       pList->relation = (tmp >> 4) & 0x07;
        MOV     A,R0
        SWAP    A
        ANL     A,#0xf
        ANL     A,#0x7
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0x16
        LCALL   ??Subroutine259_0 & 0xFFFF
??CrossCallReturnLabel_625:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
// 2948 
// 2949       pList->permit = (*msg++) & 0x03;
??CrossCallReturnLabel_23:
        ANL     A,#0x3
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0x17
        LCALL   ??Subroutine259_0 & 0xFFFF
??CrossCallReturnLabel_626:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine164 & 0xFFFF
// 2950 
// 2951       pList->depth = *msg++;
??CrossCallReturnLabel_278:
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0x18
        LCALL   ??Subroutine259_0 & 0xFFFF
??CrossCallReturnLabel_627:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine37 & 0xFFFF
// 2952 
// 2953       pList->lqi = *msg++;
??CrossCallReturnLabel_52:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0x19
        LCALL   ??Subroutine259_0 & 0xFFFF
??CrossCallReturnLabel_628:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x6
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtLqiRsp_6
        INC     R7
// 2954       pList++;
??ZDO_ParseMgmtLqiRsp_6:
        MOV     A,?V0
        ADD     A,#0x1a
        MOV     ?V0,A
        JNC     ??ZDO_ParseMgmtLqiRsp_7
        INC     ?V1
// 2955     }
??ZDO_ParseMgmtLqiRsp_7:
        INC     ?V5
??ZDO_ParseMgmtLqiRsp_2:
        MOV     A,?V5
        CLR     C
        SUBB    A,?V4
        JNC     $+5
        LJMP    ??ZDO_ParseMgmtLqiRsp_3 & 0xFFFF
// 2956   }
// 2957 
// 2958   return ( pRsp );
??ZDO_ParseMgmtLqiRsp_1:
        LJMP    ?Subroutine3 & 0xFFFF
// 2959 }
          CFI EndBlock cfiBlock1351

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine187:
          CFI Block cfiCond1352 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_618
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1353 Using cfiCommon0
          CFI (cfiCond1353) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1353) Conditional ??CrossCallReturnLabel_619
          CFI (cfiCond1353) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1353) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1353) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1353) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1353) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1353) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1353) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1353) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1353) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1353) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1353) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1353) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1353) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1353) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1353) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1353) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1353) CFA_SP SP+-2
          CFI (cfiCond1353) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker1354 Using cfiCommon1
          CFI (cfiPicker1354) NoFunction
          CFI (cfiPicker1354) Picker
        MOV     A,R2
          CFI EndBlock cfiCond1352
          CFI EndBlock cfiCond1353
          CFI EndBlock cfiPicker1354
        REQUIRE ??Subroutine258_0
        ; // Fall through to label ??Subroutine258_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine258_0:
          CFI Block cfiCond1355 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_615
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1356 Using cfiCommon0
          CFI (cfiCond1356) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1356) Conditional ??CrossCallReturnLabel_620, ??CrossCallReturnLabel_357
          CFI (cfiCond1356) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1356) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1356) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1356) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1356) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1356) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1356) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1356) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1356) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1356) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1356) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1356) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1356) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1356) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1356) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1356) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1356) CFA_SP SP+-4
          CFI (cfiCond1356) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1357 Using cfiCommon0
          CFI (cfiCond1357) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1357) Conditional ??CrossCallReturnLabel_620, ??CrossCallReturnLabel_358
          CFI (cfiCond1357) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1357) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1357) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1357) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1357) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1357) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1357) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1357) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1357) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1357) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1357) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1357) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1357) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1357) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1357) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1357) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1357) CFA_SP SP+-4
          CFI (cfiCond1357) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1358 Using cfiCommon0
          CFI (cfiCond1358) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1358) Conditional ??CrossCallReturnLabel_620, ??CrossCallReturnLabel_356
          CFI (cfiCond1358) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1358) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1358) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1358) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1358) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1358) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1358) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1358) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1358) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1358) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1358) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1358) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1358) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1358) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1358) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1358) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1358) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1358) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1358) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1358) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1358) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1358) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1358) CFA_SP SP+-4
          CFI (cfiCond1358) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1359 Using cfiCommon0
          CFI (cfiCond1359) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1359) Conditional ??CrossCallReturnLabel_616
          CFI (cfiCond1359) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1359) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1359) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1359) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1359) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1359) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1359) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1359) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1359) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1359) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1359) CFA_SP SP+-2
          CFI (cfiCond1359) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1360 Using cfiCommon0
          CFI (cfiCond1360) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1360) Conditional ??CrossCallReturnLabel_617
          CFI (cfiCond1360) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1360) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1360) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1360) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1360) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1360) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1360) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1360) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1360) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1360) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1360) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1360) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1360) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1360) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1360) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1360) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1360) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1360) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1360) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1360) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1360) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1360) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1360) CFA_SP SP+-2
          CFI (cfiCond1360) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1361 Using cfiCommon0
          CFI (cfiCond1361) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1361) Conditional ??CrossCallReturnLabel_618
          CFI (cfiCond1361) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1361) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1361) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1361) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1361) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1361) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1361) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1361) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1361) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1361) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1361) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1361) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1361) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1361) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1361) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1361) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1361) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1361) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1361) CFA_SP SP+-2
          CFI (cfiCond1361) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1362 Using cfiCommon0
          CFI (cfiCond1362) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1362) Conditional ??CrossCallReturnLabel_619
          CFI (cfiCond1362) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1362) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1362) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1362) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1362) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1362) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1362) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1362) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1362) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1362) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1362) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1362) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1362) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1362) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1362) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1362) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1362) CFA_SP SP+-2
          CFI (cfiCond1362) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker1363 Using cfiCommon1
          CFI (cfiPicker1363) NoFunction
          CFI (cfiPicker1363) Picker
        ADD     A,#0xa
        MOV     R2,A
        CLR     A
        RET
          CFI EndBlock cfiCond1355
          CFI EndBlock cfiCond1356
          CFI EndBlock cfiCond1357
          CFI EndBlock cfiCond1358
          CFI EndBlock cfiCond1359
          CFI EndBlock cfiCond1360
          CFI EndBlock cfiCond1361
          CFI EndBlock cfiCond1362
          CFI EndBlock cfiPicker1363

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine143:
          CFI Block cfiCond1364 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_631
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1365 Using cfiCommon0
          CFI (cfiCond1365) Function ZDO_ParseAddrRsp
          CFI (cfiCond1365) Conditional ??CrossCallReturnLabel_632
          CFI (cfiCond1365) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1365) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1365) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1365) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1365) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1365) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1365) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1365) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1365) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1366 Using cfiCommon0
          CFI (cfiCond1366) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1366) Conditional ??CrossCallReturnLabel_633
          CFI (cfiCond1366) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1366) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1366) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1366) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1366) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1366) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1366) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1366) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1366) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1366) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1366) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1366) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1366) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1366) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1366) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1366) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1366) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1367 Using cfiCommon1
          CFI (cfiPicker1367) NoFunction
          CFI (cfiPicker1367) Picker
        MOV     A,?V0
        ADD     A,#0xb
          CFI EndBlock cfiCond1364
          CFI EndBlock cfiCond1365
          CFI EndBlock cfiCond1366
          CFI EndBlock cfiPicker1367
        REQUIRE ??Subroutine259_0
        ; // Fall through to label ??Subroutine259_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine259_0:
          CFI Block cfiCond1368 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_622
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1369 Using cfiCommon0
          CFI (cfiCond1369) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1369) Conditional ??CrossCallReturnLabel_623
          CFI (cfiCond1369) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1369) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1369) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1369) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1369) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1369) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1369) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1369) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1369) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1369) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1369) CFA_SP SP+-2
          CFI (cfiCond1369) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1370 Using cfiCommon0
          CFI (cfiCond1370) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1370) Conditional ??CrossCallReturnLabel_624
          CFI (cfiCond1370) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1370) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1370) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1370) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1370) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1370) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1370) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1370) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1370) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1370) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1370) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1370) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1370) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1370) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1370) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1370) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1370) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1371 Using cfiCommon0
          CFI (cfiCond1371) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1371) Conditional ??CrossCallReturnLabel_625
          CFI (cfiCond1371) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1371) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1371) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1371) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1371) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1371) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1371) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1371) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1371) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1371) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1371) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1372 Using cfiCommon0
          CFI (cfiCond1372) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1372) Conditional ??CrossCallReturnLabel_626
          CFI (cfiCond1372) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1372) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1372) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1372) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1372) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1372) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1372) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1372) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1372) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1372) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1372) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1373 Using cfiCommon0
          CFI (cfiCond1373) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1373) Conditional ??CrossCallReturnLabel_627
          CFI (cfiCond1373) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1373) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1373) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1373) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1373) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1373) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1373) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1373) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1373) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1373) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1373) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1373) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1373) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1373) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1373) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1373) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1373) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1374 Using cfiCommon0
          CFI (cfiCond1374) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1374) Conditional ??CrossCallReturnLabel_628
          CFI (cfiCond1374) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1374) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1374) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1374) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1374) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1374) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1374) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1374) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1374) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1374) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1374) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1374) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1374) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1374) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1374) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1374) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1374) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1375 Using cfiCommon0
          CFI (cfiCond1375) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1375) Conditional ??CrossCallReturnLabel_629
          CFI (cfiCond1375) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1375) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1375) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1375) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1375) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1375) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1375) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1375) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1375) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1375) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1375) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1376 Using cfiCommon0
          CFI (cfiCond1376) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1376) Conditional ??CrossCallReturnLabel_630
          CFI (cfiCond1376) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1376) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1376) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1376) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1376) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1376) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1376) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1376) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1376) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1376) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1376) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1376) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1376) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1376) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1376) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1376) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1376) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1377 Using cfiCommon0
          CFI (cfiCond1377) Function ZDO_ParseAddrRsp
          CFI (cfiCond1377) Conditional ??CrossCallReturnLabel_631
          CFI (cfiCond1377) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1377) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1377) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1377) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1377) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1377) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1377) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1377) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1377) CFA_SP SP+-2
          CFI (cfiCond1377) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1378 Using cfiCommon0
          CFI (cfiCond1378) Function ZDO_ParseAddrRsp
          CFI (cfiCond1378) Conditional ??CrossCallReturnLabel_632
          CFI (cfiCond1378) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1378) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1378) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1378) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1378) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1378) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1378) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1378) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1378) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1378) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1378) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1378) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1378) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1378) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1378) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1379 Using cfiCommon0
          CFI (cfiCond1379) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1379) Conditional ??CrossCallReturnLabel_633
          CFI (cfiCond1379) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1379) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1379) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1379) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1379) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1379) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1379) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1379) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1379) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1379) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1379) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1380 Using cfiCommon1
          CFI (cfiPicker1380) NoFunction
          CFI (cfiPicker1380) Picker
        MOV     DPL,A
        CLR     A
          CFI EndBlock cfiCond1368
          CFI EndBlock cfiCond1369
          CFI EndBlock cfiCond1370
          CFI EndBlock cfiCond1371
          CFI EndBlock cfiCond1372
          CFI EndBlock cfiCond1373
          CFI EndBlock cfiCond1374
          CFI EndBlock cfiCond1375
          CFI EndBlock cfiCond1376
          CFI EndBlock cfiCond1377
          CFI EndBlock cfiCond1378
          CFI EndBlock cfiCond1379
          CFI EndBlock cfiPicker1380
        REQUIRE ??Subroutine260_0
        ; // Fall through to label ??Subroutine260_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine260_0:
          CFI Block cfiCond1381 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_621
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1382 Using cfiCommon0
          CFI (cfiCond1382) Function ZDO_CopyMatchInfo
          CFI (cfiCond1382) Conditional ??CrossCallReturnLabel_622
          CFI (cfiCond1382) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1382) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1382) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1382) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1382) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1382) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1382) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1382) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1382) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1382) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1382) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1382) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1382) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1382) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1382) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1382) CFA_SP SP+-2
          CFI (cfiCond1382) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1383 Using cfiCommon0
          CFI (cfiCond1383) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1383) Conditional ??CrossCallReturnLabel_623
          CFI (cfiCond1383) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1383) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1383) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1383) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1383) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1383) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1383) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1383) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1383) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1383) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1383) CFA_SP SP+-2
          CFI (cfiCond1383) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1384 Using cfiCommon0
          CFI (cfiCond1384) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1384) Conditional ??CrossCallReturnLabel_624
          CFI (cfiCond1384) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1384) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1384) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1384) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1384) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1384) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1384) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1384) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1384) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1384) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1384) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1385 Using cfiCommon0
          CFI (cfiCond1385) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1385) Conditional ??CrossCallReturnLabel_625
          CFI (cfiCond1385) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1385) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1385) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1385) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1385) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1385) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1385) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1385) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1385) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1385) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1385) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1386 Using cfiCommon0
          CFI (cfiCond1386) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1386) Conditional ??CrossCallReturnLabel_626
          CFI (cfiCond1386) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1386) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1386) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1386) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1386) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1386) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1386) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1386) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1386) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1386) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1386) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1387 Using cfiCommon0
          CFI (cfiCond1387) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1387) Conditional ??CrossCallReturnLabel_627
          CFI (cfiCond1387) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1387) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1387) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1387) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1387) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1387) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1387) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1387) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1387) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1387) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1387) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1387) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1387) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1387) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1387) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1387) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1387) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1388 Using cfiCommon0
          CFI (cfiCond1388) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1388) Conditional ??CrossCallReturnLabel_628
          CFI (cfiCond1388) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1388) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1388) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1388) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1388) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1388) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1388) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1388) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1388) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1388) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1388) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1388) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1388) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1388) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1388) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1388) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1388) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1389 Using cfiCommon0
          CFI (cfiCond1389) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1389) Conditional ??CrossCallReturnLabel_629
          CFI (cfiCond1389) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1389) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1389) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1389) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1389) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1389) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1389) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1389) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1389) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1389) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1389) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1389) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1389) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1389) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1389) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1389) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1389) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1390 Using cfiCommon0
          CFI (cfiCond1390) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1390) Conditional ??CrossCallReturnLabel_630
          CFI (cfiCond1390) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1390) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1390) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1390) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1390) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1390) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1390) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1390) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1390) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1390) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1390) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1390) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1390) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1390) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1390) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1390) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1390) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1391 Using cfiCommon0
          CFI (cfiCond1391) Function ZDO_ParseAddrRsp
          CFI (cfiCond1391) Conditional ??CrossCallReturnLabel_631
          CFI (cfiCond1391) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1391) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1391) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1391) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1391) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1391) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1391) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1391) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1391) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1391) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1391) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1391) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1391) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1391) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1391) CFA_SP SP+-2
          CFI (cfiCond1391) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1392 Using cfiCommon0
          CFI (cfiCond1392) Function ZDO_ParseAddrRsp
          CFI (cfiCond1392) Conditional ??CrossCallReturnLabel_632
          CFI (cfiCond1392) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1392) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1392) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1392) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1392) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1392) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1392) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1392) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1392) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1392) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1392) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1392) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1392) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1392) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1392) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1393 Using cfiCommon0
          CFI (cfiCond1393) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1393) Conditional ??CrossCallReturnLabel_633
          CFI (cfiCond1393) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1393) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1393) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1393) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1393) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1393) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1393) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1393) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1393) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1393) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1393) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1393) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1393) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1393) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1393) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1393) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1393) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1394 Using cfiCommon1
          CFI (cfiPicker1394) NoFunction
          CFI (cfiPicker1394) Picker
        ADDC    A,?V1
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond1381
          CFI EndBlock cfiCond1382
          CFI EndBlock cfiCond1383
          CFI EndBlock cfiCond1384
          CFI EndBlock cfiCond1385
          CFI EndBlock cfiCond1386
          CFI EndBlock cfiCond1387
          CFI EndBlock cfiCond1388
          CFI EndBlock cfiCond1389
          CFI EndBlock cfiCond1390
          CFI EndBlock cfiCond1391
          CFI EndBlock cfiCond1392
          CFI EndBlock cfiCond1393
          CFI EndBlock cfiPicker1394

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine142:
          CFI Block cfiCond1395 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_227
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1396 Using cfiCommon0
          CFI (cfiCond1396) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1396) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond1396) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1396) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1396) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1396) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1396) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1396) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1396) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1396) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1396) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1396) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1396) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1396) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1396) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1396) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1396) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1396) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1396) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1397 Using cfiCommon1
          CFI (cfiPicker1397) NoFunction
          CFI (cfiPicker1397) Picker
        MOV     A,?V0
        LCALL   ??Subroutine261_0 & 0xFFFF
??CrossCallReturnLabel_635:
        ADDC    A,?V1
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond1395
          CFI EndBlock cfiCond1396
          CFI EndBlock cfiPicker1397

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine189:
          CFI Block cfiCond1398 Using cfiCommon0
          CFI Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_636
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1399 Using cfiCommon0
          CFI (cfiCond1399) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond1399) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_428
          CFI (cfiCond1399) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1399) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1399) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1399) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1399) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1399) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1399) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1399) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1399) CFA_SP SP+-4
          CFI (cfiCond1399) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1400 Using cfiCommon0
          CFI (cfiCond1400) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond1400) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_429
          CFI (cfiCond1400) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1400) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1400) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1400) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1400) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1400) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1400) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1400) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1400) CFA_SP SP+-4
          CFI (cfiCond1400) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker1401 Using cfiCommon1
          CFI (cfiPicker1401) NoFunction
          CFI (cfiPicker1401) Picker
        MOV     A,R0
          CFI EndBlock cfiCond1398
          CFI EndBlock cfiCond1399
          CFI EndBlock cfiCond1400
          CFI EndBlock cfiPicker1401
        REQUIRE ??Subroutine261_0
        ; // Fall through to label ??Subroutine261_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine261_0:
          CFI Block cfiCond1402 Using cfiCommon0
          CFI Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_634
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1403 Using cfiCommon0
          CFI (cfiCond1403) Function ZDO_CopyMatchInfo
          CFI (cfiCond1403) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_227
          CFI (cfiCond1403) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1403) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1403) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1403) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1403) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1403) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1403) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1403) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1403) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1403) CFA_SP SP+-4
          CFI (cfiCond1403) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1404 Using cfiCommon0
          CFI (cfiCond1404) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1404) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_228
          CFI (cfiCond1404) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1404) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1404) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1404) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1404) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1404) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1404) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1404) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1404) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1404) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1404) CFA_SP SP+-5
          CFI (cfiCond1404) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1405 Using cfiCommon0
          CFI (cfiCond1405) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond1405) Conditional ??CrossCallReturnLabel_636
          CFI (cfiCond1405) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1405) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1405) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1405) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1405) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1405) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1405) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1405) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1405) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1405) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1405) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1405) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1405) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1405) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1405) CFA_SP SP+-2
          CFI (cfiCond1405) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1406 Using cfiCommon0
          CFI (cfiCond1406) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond1406) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_428
          CFI (cfiCond1406) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1406) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1406) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1406) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1406) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1406) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1406) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1406) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1406) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1406) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1406) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1406) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1406) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1406) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1406) CFA_SP SP+-4
          CFI (cfiCond1406) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1407 Using cfiCommon0
          CFI (cfiCond1407) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond1407) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_429
          CFI (cfiCond1407) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1407) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1407) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1407) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1407) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1407) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1407) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1407) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1407) CFA_SP SP+-4
          CFI (cfiCond1407) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker1408 Using cfiCommon1
          CFI (cfiPicker1408) NoFunction
          CFI (cfiPicker1408) Picker
        ADD     A,#0x14
        MOV     DPL,A
        CLR     A
        RET
          CFI EndBlock cfiCond1402
          CFI EndBlock cfiCond1403
          CFI EndBlock cfiCond1404
          CFI EndBlock cfiCond1405
          CFI EndBlock cfiCond1406
          CFI EndBlock cfiCond1407
          CFI EndBlock cfiPicker1408

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine98:
          CFI Block cfiCond1409 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_640
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1410 Using cfiCommon0
          CFI (cfiCond1410) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1410) Conditional ??CrossCallReturnLabel_641
          CFI (cfiCond1410) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1410) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1410) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1410) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1410) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1410) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1410) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1410) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1410) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1410) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1410) CFA_SP SP+-2
          CFI (cfiCond1410) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1411 Using cfiCommon0
          CFI (cfiCond1411) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1411) Conditional ??CrossCallReturnLabel_642
          CFI (cfiCond1411) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1411) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1411) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1411) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1411) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1411) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1411) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1411) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1411) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1411) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1411) CFA_SP SP+-2
          CFI (cfiCond1411) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1412 Using cfiCommon1
          CFI (cfiPicker1412) NoFunction
          CFI (cfiPicker1412) Picker
        MOV     DPL,R6
        MOV     DPH,R7
          CFI EndBlock cfiCond1409
          CFI EndBlock cfiCond1410
          CFI EndBlock cfiCond1411
          CFI EndBlock cfiPicker1412
        REQUIRE ??Subroutine262_0
        ; // Fall through to label ??Subroutine262_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine262_0:
          CFI Block cfiCond1413 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_638
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1414 Using cfiCommon0
          CFI (cfiCond1414) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1414) Conditional ??CrossCallReturnLabel_639
          CFI (cfiCond1414) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1414) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1414) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1414) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1414) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1414) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1414) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1414) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1414) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1414) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1414) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1414) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1414) CFA_SP SP+-2
          CFI (cfiCond1414) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1415 Using cfiCommon0
          CFI (cfiCond1415) Function ZDO_ParseAddrRsp
          CFI (cfiCond1415) Conditional ??CrossCallReturnLabel_640
          CFI (cfiCond1415) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1415) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1415) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1415) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1415) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1415) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1415) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1415) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1415) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1415) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1415) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1415) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1415) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1415) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1415) CFA_SP SP+-2
          CFI (cfiCond1415) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1416 Using cfiCommon0
          CFI (cfiCond1416) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1416) Conditional ??CrossCallReturnLabel_641
          CFI (cfiCond1416) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1416) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1416) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1416) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1416) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1416) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1416) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1416) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1416) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1416) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1416) CFA_SP SP+-2
          CFI (cfiCond1416) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1417 Using cfiCommon0
          CFI (cfiCond1417) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1417) Conditional ??CrossCallReturnLabel_642
          CFI (cfiCond1417) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1417) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1417) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1417) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1417) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1417) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1417) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1417) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1417) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1417) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1417) CFA_SP SP+-2
          CFI (cfiCond1417) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1418 Using cfiCommon1
          CFI (cfiPicker1418) NoFunction
          CFI (cfiPicker1418) Picker
        LCALL   ?Subroutine172 & 0xFFFF
??CrossCallReturnLabel_646:
        RET
          CFI EndBlock cfiCond1413
          CFI EndBlock cfiCond1414
          CFI EndBlock cfiCond1415
          CFI EndBlock cfiCond1416
          CFI EndBlock cfiCond1417
          CFI EndBlock cfiPicker1418

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine172:
          CFI Block cfiCond1419 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_646, ??CrossCallReturnLabel_640
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1420 Using cfiCommon0
          CFI (cfiCond1420) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1420) Conditional ??CrossCallReturnLabel_646, ??CrossCallReturnLabel_641
          CFI (cfiCond1420) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1420) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1420) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1420) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1420) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1420) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1420) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1420) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1420) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1420) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1420) CFA_SP SP+-4
          CFI (cfiCond1420) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1421 Using cfiCommon0
          CFI (cfiCond1421) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1421) Conditional ??CrossCallReturnLabel_646, ??CrossCallReturnLabel_642
          CFI (cfiCond1421) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1421) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1421) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1421) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1421) CFA_SP SP+-4
          CFI (cfiCond1421) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1422 Using cfiCommon0
          CFI (cfiCond1422) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1422) Conditional ??CrossCallReturnLabel_646, ??CrossCallReturnLabel_638
          CFI (cfiCond1422) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1422) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1422) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1422) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1422) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1422) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1422) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1422) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1422) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1422) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1422) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1422) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1422) CFA_SP SP+-4
          CFI (cfiCond1422) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1423 Using cfiCommon0
          CFI (cfiCond1423) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1423) Conditional ??CrossCallReturnLabel_646, ??CrossCallReturnLabel_639
          CFI (cfiCond1423) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1423) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1423) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1423) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1423) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1423) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1423) CFA_SP SP+-4
          CFI (cfiCond1423) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1424 Using cfiCommon0
          CFI (cfiCond1424) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1424) Conditional ??CrossCallReturnLabel_645, ??CrossCallReturnLabel_152
          CFI (cfiCond1424) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1424) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1424) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1424) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1424) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1424) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1424) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1424) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1424) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1424) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1424) CFA_SP SP+-4
          CFI (cfiCond1424) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1425 Using cfiCommon0
          CFI (cfiCond1425) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1425) Conditional ??CrossCallReturnLabel_645, ??CrossCallReturnLabel_153
          CFI (cfiCond1425) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1425) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1425) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1425) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1425) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1425) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1425) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1425) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1425) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1425) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1425) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1425) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1425) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1425) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1425) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1425) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1425) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1425) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1425) CFA_SP SP+-4
          CFI (cfiCond1425) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1426 Using cfiCommon0
          CFI (cfiCond1426) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1426) Conditional ??CrossCallReturnLabel_643, ??CrossCallReturnLabel_106
          CFI (cfiCond1426) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1426) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1426) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1426) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1426) CFA_SP SP+-4
          CFI (cfiCond1426) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1427 Using cfiCommon0
          CFI (cfiCond1427) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1427) Conditional ??CrossCallReturnLabel_643, ??CrossCallReturnLabel_107
          CFI (cfiCond1427) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1427) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1427) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1427) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1427) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1427) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1427) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1427) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1427) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1427) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1427) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1427) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1427) CFA_SP SP+-4
          CFI (cfiCond1427) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1428 Using cfiCommon0
          CFI (cfiCond1428) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1428) Conditional ??CrossCallReturnLabel_644, ??CrossCallReturnLabel_108
          CFI (cfiCond1428) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1428) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1428) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1428) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1428) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1428) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1428) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1428) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1428) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1428) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1428) CFA_SP SP+-4
          CFI (cfiCond1428) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1429 Using cfiCommon0
          CFI (cfiCond1429) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1429) Conditional ??CrossCallReturnLabel_644, ??CrossCallReturnLabel_109
          CFI (cfiCond1429) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1429) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1429) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1429) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1429) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1429) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1429) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1429) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1429) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1429) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1429) CFA_SP SP+-4
          CFI (cfiCond1429) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1430 Using cfiCommon1
          CFI (cfiPicker1430) NoFunction
          CFI (cfiPicker1430) Picker
        LCALL   ??Subroutine257_0 & 0xFFFF
??CrossCallReturnLabel_652:
        MOV     R1,A
        MOV     A,R2
        RET
          CFI EndBlock cfiCond1419
          CFI EndBlock cfiCond1420
          CFI EndBlock cfiCond1421
          CFI EndBlock cfiCond1422
          CFI EndBlock cfiCond1423
          CFI EndBlock cfiCond1424
          CFI EndBlock cfiCond1425
          CFI EndBlock cfiCond1426
          CFI EndBlock cfiCond1427
          CFI EndBlock cfiCond1428
          CFI EndBlock cfiCond1429
          CFI EndBlock cfiPicker1430

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine37:
          CFI Block cfiCond1431 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_51
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1432 Using cfiCommon0
          CFI (cfiCond1432) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1432) Conditional ??CrossCallReturnLabel_52
          CFI (cfiCond1432) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1432) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1432) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1432) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1432) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1432) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1432) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1432) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1432) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1432) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1432) CFA_SP SP+-2
          CFI (cfiCond1432) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1433 Using cfiCommon1
          CFI (cfiPicker1433) NoFunction
          CFI (cfiPicker1433) Picker
        LCALL   ?Subroutine159 & 0xFFFF
??CrossCallReturnLabel_269:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1431
          CFI EndBlock cfiCond1432
          CFI EndBlock cfiPicker1433

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine22:
          CFI Block cfiCond1434 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_22
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1435 Using cfiCommon0
          CFI (cfiCond1435) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1435) Conditional ??CrossCallReturnLabel_23
          CFI (cfiCond1435) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1435) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1435) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1435) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1435) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1435) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1435) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1435) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1435) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1435) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1435) CFA_SP SP+-2
          CFI (cfiCond1435) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1436 Using cfiCommon0
          CFI (cfiCond1436) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1436) Conditional ??CrossCallReturnLabel_24
          CFI (cfiCond1436) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1436) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1436) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1436) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1436) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1436) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1436) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1436) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1436) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1436) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1436) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1436) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1436) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1436) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1436) CFA_SP SP+-2
          CFI (cfiCond1436) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1437 Using cfiCommon1
          CFI (cfiPicker1437) NoFunction
          CFI (cfiPicker1437) Picker
        LCALL   ?Subroutine164 & 0xFFFF
??CrossCallReturnLabel_279:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1434
          CFI EndBlock cfiCond1435
          CFI EndBlock cfiCond1436
          CFI EndBlock cfiPicker1437

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine164:
          CFI Block cfiCond1438 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_278
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1439 Using cfiCommon0
          CFI (cfiCond1439) Function ZDO_ParseAddrRsp
          CFI (cfiCond1439) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_22
          CFI (cfiCond1439) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1439) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1439) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1439) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1439) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1439) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1439) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1439) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1439) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1439) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1439) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1439) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1439) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1439) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1439) CFA_SP SP+-4
          CFI (cfiCond1439) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1440 Using cfiCommon0
          CFI (cfiCond1440) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1440) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_23
          CFI (cfiCond1440) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1440) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1440) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1440) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1440) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1440) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1440) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1440) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1440) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1440) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1440) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1440) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1440) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1440) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1440) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1440) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1440) CFA_SP SP+-4
          CFI (cfiCond1440) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1441 Using cfiCommon0
          CFI (cfiCond1441) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1441) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_24
          CFI (cfiCond1441) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1441) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1441) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1441) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1441) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1441) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1441) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1441) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1441) CFA_SP SP+-4
          CFI (cfiCond1441) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1442 Using cfiCommon1
          CFI (cfiPicker1442) NoFunction
          CFI (cfiPicker1442) Picker
        LCALL   ?Subroutine197 & 0xFFFF
??CrossCallReturnLabel_317:
        RET
          CFI EndBlock cfiCond1438
          CFI EndBlock cfiCond1439
          CFI EndBlock cfiCond1440
          CFI EndBlock cfiCond1441
          CFI EndBlock cfiPicker1442

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine197:
          CFI Block cfiCond1443 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_278
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1444 Using cfiCommon0
          CFI (cfiCond1444) Function ZDO_ParseAddrRsp
          CFI (cfiCond1444) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_22
          CFI (cfiCond1444) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1444) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1444) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1444) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1444) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1444) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1444) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1444) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1444) CFA_SP SP+-6
          CFI (cfiCond1444) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1445 Using cfiCommon0
          CFI (cfiCond1445) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1445) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_23
          CFI (cfiCond1445) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1445) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1445) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1445) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1445) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1445) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1445) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1445) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1445) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1445) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1445) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1445) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1445) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1445) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1445) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1445) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1445) CFA_SP SP+-6
          CFI (cfiCond1445) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1446 Using cfiCommon0
          CFI (cfiCond1446) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1446) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_24
          CFI (cfiCond1446) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1446) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1446) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1446) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1446) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1446) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1446) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1446) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1446) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1446) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1446) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1446) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1446) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1446) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1446) CFA_SP SP+-6
          CFI (cfiCond1446) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1447 Using cfiCommon0
          CFI (cfiCond1447) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond1447) Conditional ??CrossCallReturnLabel_318, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_51
          CFI (cfiCond1447) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1447) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1447) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1447) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1447) CFA_SP SP+-6
          CFI (cfiCond1447) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1448 Using cfiCommon0
          CFI (cfiCond1448) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1448) Conditional ??CrossCallReturnLabel_318, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_52
          CFI (cfiCond1448) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1448) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1448) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1448) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1448) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1448) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1448) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1448) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1448) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1448) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1448) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1448) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1448) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1448) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1448) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1448) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1448) CFA_SP SP+-6
          CFI (cfiCond1448) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1449 Using cfiCommon0
          CFI (cfiCond1449) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond1449) Conditional ??CrossCallReturnLabel_318, ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_27
          CFI (cfiCond1449) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1449) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1449) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1449) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1449) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1449) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1449) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1449) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1449) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1449) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1449) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1449) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1449) CFA_SP SP+-6
          CFI (cfiCond1449) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1450 Using cfiCommon0
          CFI (cfiCond1450) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1450) Conditional ??CrossCallReturnLabel_318, ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_28
          CFI (cfiCond1450) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1450) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1450) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1450) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1450) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1450) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1450) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1450) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1450) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1450) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1450) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1450) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1450) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1450) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1450) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1450) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1450) CFA_SP SP+-6
          CFI (cfiCond1450) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1451 Using cfiCommon1
          CFI (cfiPicker1451) NoFunction
          CFI (cfiPicker1451) Picker
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1443
          CFI EndBlock cfiCond1444
          CFI EndBlock cfiCond1445
          CFI EndBlock cfiCond1446
          CFI EndBlock cfiCond1447
          CFI EndBlock cfiCond1448
          CFI EndBlock cfiCond1449
          CFI EndBlock cfiCond1450
          CFI EndBlock cfiPicker1451
// 2960 
// 2961 /*********************************************************************
// 2962  * @fn          ZDO_ParseMgmNwkDiscRsp
// 2963  *
// 2964  * @brief       This function parses the incoming Management
// 2965  *              Network Discover response.
// 2966  *
// 2967  * @param       inMsg - incoming message
// 2968  *
// 2969  * @return      pointer to parsed response.  This structure was
// 2970  *          allocated using osal_mem_alloc, so it must be freed
// 2971  *          by the calling function [osal_mem_free()].
// 2972  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2973 ZDO_MgmNwkDiscRsp_t *ZDO_ParseMgmNwkDiscRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmNwkDiscRsp:
          CFI Block cfiBlock1452 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
        CODE
// 2974 {
        FUNCALL ZDO_ParseMgmNwkDiscRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmNwkDiscRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 2975   ZDO_MgmNwkDiscRsp_t *pRsp;
// 2976   uint8 status;
// 2977   uint8 networkCount = 0;
        MOV     ?V1,#0x0
// 2978   uint8 startIndex = 0;
        MOV     ?V0,#0x0
// 2979   uint8 networkListCount = 0;
        MOV     ?V4,#0x0
// 2980   uint8 *msg;
// 2981 
// 2982   msg = inMsg->asdu;
        LCALL   ?Subroutine57 & 0xFFFF
// 2983   status = *msg++;
??CrossCallReturnLabel_654:
        MOV     ?V5,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 2984 
// 2985   if ( status == ZSuccess )
        JNZ     ??ZDO_ParseMgmNwkDiscRsp_0
// 2986   {
// 2987     networkCount = *msg++;
        MOVX    A,@DPTR
        MOV     ?V1,A
// 2988     startIndex = *msg++;
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0,A
// 2989     networkListCount = *msg++;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V4,A
        MOV     A,R6
        ADD     A,#0x3
        MOV     R6,A
        JNC     ??ZDO_ParseMgmNwkDiscRsp_0
        INC     R7
// 2990   }
// 2991 
// 2992   // Allocate a buffer big enough to handle the list.
// 2993   pRsp = (ZDO_MgmNwkDiscRsp_t *)osal_mem_alloc( sizeof( ZDO_MgmNwkDiscRsp_t )
// 2994                                   + (networkListCount * sizeof( mgmtNwkDiscItem_t )) );
??ZDO_ParseMgmNwkDiscRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     ?V2,?V4
        MOV     ?V3,#0x0
        MOV     A,#0x4
        MOV     R0,#?V2
        LCALL   ?S_SHL
        MOV     A,?V2
        LCALL   ??Subroutine264_0 & 0xFFFF
??CrossCallReturnLabel_659:
        ADDC    A,?V3
        MOV     R3,A
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V2,R2
        MOV     ?V3,R3
// 2995   if ( pRsp )
        MOV     A,R2
        ORL     A,?V3
        JNZ     $+5
        LJMP    ??ZDO_ParseMgmNwkDiscRsp_1 & 0xFFFF
// 2996   {
// 2997     uint8 x;
// 2998     mgmtNwkDiscItem_t *pList;
// 2999 
// 3000     pRsp->status = status;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V5
        MOVX    @DPTR,A
// 3001     pRsp->networkCount = networkCount;
        INC     DPTR
        MOV     A,?V1
        LCALL   ?Subroutine39 & 0xFFFF
// 3002     pRsp->startIndex = startIndex;
??CrossCallReturnLabel_56:
        MOV     A,?V0
        LCALL   ?Subroutine29 & 0xFFFF
// 3003     pRsp->networkListCount = networkListCount;
??CrossCallReturnLabel_35:
        MOV     A,?V4
        MOVX    @DPTR,A
// 3004     pList = pRsp->list;
        LCALL   ?Subroutine152 & 0xFFFF
// 3005 
// 3006     for ( x = 0; x < networkListCount; x++ )
??CrossCallReturnLabel_257:
        MOV     ?V5,#0x0
        LJMP    ??ZDO_ParseMgmNwkDiscRsp_2 & 0xFFFF
// 3007     {
// 3008       osal_cpyExtAddr(pList->extendedPANID, msg);   //Copy extended PAN ID
??ZDO_ParseMgmNwkDiscRsp_3:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0
        MOV     R3,?V1
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 3009       pList->PANId = BUILD_UINT16( msg[0], msg[1] );
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_108:
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine25 & 0xFFFF
// 3010       msg += Z_EXTADDR_LEN;
// 3011 
// 3012       pList->logicalChannel = *msg++;
??CrossCallReturnLabel_28:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3013       pList->stackProfile = (*msg) & 0x0F;
        MOV     A,R6
        ADD     A,#0x9
        MOV     R0,A
        LCALL   ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_204:
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_633:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine50 & 0xFFFF
// 3014       pList->version = (*msg++ >> 4) & 0x0F;
??CrossCallReturnLabel_79:
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_226:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 3015       pList->beaconOrder = (*msg) & 0x0F;
        MOV     A,R6
        ADD     A,#0xa
        INC     R0
        LCALL   ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_205:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0xd
        LCALL   ??Subroutine259_0 & 0xFFFF
??CrossCallReturnLabel_629:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine50 & 0xFFFF
// 3016       pList->superFrameOrder = (*msg++ >> 4) & 0x0F;
??CrossCallReturnLabel_80:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0xe
        LCALL   ??Subroutine259_0 & 0xFFFF
??CrossCallReturnLabel_630:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 3017       pList->permitJoining = *msg++;
        MOV     A,R6
        ADD     A,#0xb
        LCALL   ??Subroutine249_0 & 0xFFFF
??CrossCallReturnLabel_551:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        LCALL   ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_220:
        LCALL   ??Subroutine260_0 & 0xFFFF
??CrossCallReturnLabel_621:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0xc
        MOV     R6,A
        JNC     ??ZDO_ParseMgmNwkDiscRsp_4
        INC     R7
// 3018       pList++;
??ZDO_ParseMgmNwkDiscRsp_4:
        MOV     A,?V0
        ADD     A,#0x10
        MOV     ?V0,A
        JNC     ??ZDO_ParseMgmNwkDiscRsp_5
        INC     ?V1
// 3019     }
??ZDO_ParseMgmNwkDiscRsp_5:
        INC     ?V5
??ZDO_ParseMgmNwkDiscRsp_2:
        MOV     A,?V5
        CLR     C
        SUBB    A,?V4
        JNC     $+5
        LJMP    ??ZDO_ParseMgmNwkDiscRsp_3 & 0xFFFF
// 3020   }
// 3021 
// 3022   return ( pRsp );
??ZDO_ParseMgmNwkDiscRsp_1:
        LJMP    ?Subroutine3 & 0xFFFF
// 3023 }
          CFI EndBlock cfiBlock1452

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine152:
          CFI Block cfiCond1453 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_256
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1454 Using cfiCommon0
          CFI (cfiCond1454) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1454) Conditional ??CrossCallReturnLabel_257
          CFI (cfiCond1454) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1454) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1454) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1454) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1454) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1454) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1454) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1454) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1454) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1454) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1454) CFA_SP SP+-2
          CFI (cfiCond1454) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1455 Using cfiCommon1
          CFI (cfiPicker1455) NoFunction
          CFI (cfiPicker1455) Picker
        MOV     A,R2
        ADD     A,#0x4
        MOV     ?V0,A
        CLR     A
        ADDC    A,?V3
        MOV     ?V1,A
        RET
          CFI EndBlock cfiCond1453
          CFI EndBlock cfiCond1454
          CFI EndBlock cfiPicker1455

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine128:
          CFI Block cfiCond1456 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_204
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1457 Using cfiCommon0
          CFI (cfiCond1457) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1457) Conditional ??CrossCallReturnLabel_205
          CFI (cfiCond1457) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1457) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1457) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1457) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1457) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1457) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1457) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1457) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1457) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1457) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1457) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1457) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1457) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1457) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1457) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1457) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1457) CFA_SP SP+-2
          CFI (cfiCond1457) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1458 Using cfiCommon1
          CFI (cfiPicker1458) NoFunction
          CFI (cfiPicker1458) Picker
        CLR     A
        ADDC    A,R7
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        ANL     A,#0xf
        RET
          CFI EndBlock cfiCond1456
          CFI EndBlock cfiCond1457
          CFI EndBlock cfiPicker1458

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine57:
          CFI Block cfiCond1459 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_653
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1460 Using cfiCommon0
          CFI (cfiCond1460) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1460) Conditional ??CrossCallReturnLabel_654
          CFI (cfiCond1460) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1460) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1460) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1460) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1460) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1460) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1460) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1460) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1460) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1460) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1460) CFA_SP SP+-2
          CFI (cfiCond1460) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1461 Using cfiCommon0
          CFI (cfiCond1461) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1461) Conditional ??CrossCallReturnLabel_655
          CFI (cfiCond1461) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1461) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1461) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1461) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1461) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1461) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1461) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1461) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1461) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1461) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1461) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1461) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1461) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1461) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1461) CFA_SP SP+-2
          CFI (cfiCond1461) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1462 Using cfiCommon0
          CFI (cfiCond1462) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1462) Conditional ??CrossCallReturnLabel_656
          CFI (cfiCond1462) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1462) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1462) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1462) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1462) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1462) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1462) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1462) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1462) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1462) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1462) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1462) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1462) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1462) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1462) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1462) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1462) CFA_SP SP+-2
          CFI (cfiCond1462) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1463 Using cfiCommon1
          CFI (cfiPicker1463) NoFunction
          CFI (cfiPicker1463) Picker
        LCALL   ?Subroutine186 & 0xFFFF
??CrossCallReturnLabel_306:
          CFI EndBlock cfiCond1459
          CFI EndBlock cfiCond1460
          CFI EndBlock cfiCond1461
          CFI EndBlock cfiCond1462
          CFI EndBlock cfiPicker1463
        REQUIRE ??Subroutine263_0
        ; // Fall through to label ??Subroutine263_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine263_0:
          CFI Block cfiCond1464 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_657
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1465 Using cfiCommon0
          CFI (cfiCond1465) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1465) Conditional ??CrossCallReturnLabel_653
          CFI (cfiCond1465) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1465) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1465) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1465) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1465) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1465) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1465) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1465) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1465) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1465) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1465) CFA_SP SP+-2
          CFI (cfiCond1465) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1466 Using cfiCommon0
          CFI (cfiCond1466) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1466) Conditional ??CrossCallReturnLabel_654
          CFI (cfiCond1466) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1466) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1466) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1466) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1466) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1466) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1466) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1466) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1466) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1466) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1466) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1466) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1466) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1466) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1466) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1466) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1466) CFA_SP SP+-2
          CFI (cfiCond1466) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1467 Using cfiCommon0
          CFI (cfiCond1467) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1467) Conditional ??CrossCallReturnLabel_655
          CFI (cfiCond1467) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1467) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1467) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1467) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1467) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1467) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1467) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1467) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1467) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1467) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1467) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1467) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1467) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1467) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1467) CFA_SP SP+-2
          CFI (cfiCond1467) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1468 Using cfiCommon0
          CFI (cfiCond1468) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1468) Conditional ??CrossCallReturnLabel_656
          CFI (cfiCond1468) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1468) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1468) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1468) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1468) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1468) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1468) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1468) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1468) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1468) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1468) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1468) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1468) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1468) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1468) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1468) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1468) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1468) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1468) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1468) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1468) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1468) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1468) CFA_SP SP+-2
          CFI (cfiCond1468) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1469 Using cfiCommon1
          CFI (cfiPicker1469) NoFunction
          CFI (cfiPicker1469) Picker
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1464
          CFI EndBlock cfiCond1465
          CFI EndBlock cfiCond1466
          CFI EndBlock cfiCond1467
          CFI EndBlock cfiCond1468
          CFI EndBlock cfiPicker1469

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine50:
          CFI Block cfiCond1470 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_79
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1471 Using cfiCommon0
          CFI (cfiCond1471) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1471) Conditional ??CrossCallReturnLabel_80
          CFI (cfiCond1471) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1471) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1471) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1471) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1471) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1471) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1471) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1471) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1471) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1471) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1471) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1471) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1471) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1471) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1471) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1471) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1471) CFA_SP SP+-2
          CFI (cfiCond1471) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1472 Using cfiCommon1
          CFI (cfiPicker1472) NoFunction
          CFI (cfiPicker1472) Picker
        LCALL   ?Subroutine195 & 0xFFFF
??CrossCallReturnLabel_314:
        SWAP    A
        ANL     A,#0xf
        RET
          CFI EndBlock cfiCond1470
          CFI EndBlock cfiCond1471
          CFI EndBlock cfiPicker1472

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine39:
          CFI Block cfiCond1473 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_55
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1474 Using cfiCommon0
          CFI (cfiCond1474) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1474) Conditional ??CrossCallReturnLabel_56
          CFI (cfiCond1474) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1474) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1474) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1474) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1474) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1474) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1474) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1474) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1474) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1474) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1474) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1474) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1474) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1474) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1474) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1474) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1474) CFA_SP SP+-2
          CFI (cfiCond1474) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1475 Using cfiCommon0
          CFI (cfiCond1475) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1475) Conditional ??CrossCallReturnLabel_57
          CFI (cfiCond1475) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1475) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1475) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1475) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1475) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1475) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1475) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1475) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1475) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1475) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1475) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1475) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1475) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1475) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1475) CFA_SP SP+-2
          CFI (cfiCond1475) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1476 Using cfiCommon1
          CFI (cfiPicker1476) NoFunction
          CFI (cfiPicker1476) Picker
        LCALL   ?Subroutine160 & 0xFFFF
??CrossCallReturnLabel_271:
        INC     DPTR
        RET
          CFI EndBlock cfiCond1473
          CFI EndBlock cfiCond1474
          CFI EndBlock cfiCond1475
          CFI EndBlock cfiPicker1476

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine160:
          CFI Block cfiCond1477 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_273
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1478 Using cfiCommon0
          CFI (cfiCond1478) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1478) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_55
          CFI (cfiCond1478) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1478) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1478) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1478) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1478) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1478) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1478) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1478) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1478) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1478) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1478) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1478) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1478) CFA_SP SP+-4
          CFI (cfiCond1478) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1479 Using cfiCommon0
          CFI (cfiCond1479) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1479) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_56
          CFI (cfiCond1479) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1479) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1479) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1479) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1479) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1479) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1479) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1479) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1479) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1479) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1479) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1479) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1479) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1479) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1479) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1479) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1479) CFA_SP SP+-4
          CFI (cfiCond1479) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1480 Using cfiCommon0
          CFI (cfiCond1480) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1480) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_57
          CFI (cfiCond1480) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1480) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1480) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1480) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1480) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1480) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1480) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1480) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1480) CFA_SP SP+-4
          CFI (cfiCond1480) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1481 Using cfiCommon0
          CFI (cfiCond1481) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1481) Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_2
          CFI (cfiCond1481) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1481) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1481) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1481) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1481) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1481) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1481) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1481) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1481) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1481) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1481) CFA_SP SP+-4
          CFI (cfiCond1481) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1482 Using cfiCommon0
          CFI (cfiCond1482) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1482) Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_3
          CFI (cfiCond1482) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1482) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1482) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1482) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1482) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1482) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1482) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1482) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1482) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1482) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1482) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1482) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1482) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1482) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1482) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1482) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1482) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1482) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1482) CFA_SP SP+-4
          CFI (cfiCond1482) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1483 Using cfiCommon1
          CFI (cfiPicker1483) NoFunction
          CFI (cfiPicker1483) Picker
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        RET
          CFI EndBlock cfiCond1477
          CFI EndBlock cfiCond1478
          CFI EndBlock cfiCond1479
          CFI EndBlock cfiCond1480
          CFI EndBlock cfiCond1481
          CFI EndBlock cfiCond1482
          CFI EndBlock cfiPicker1483

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine29:
          CFI Block cfiCond1484 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_34
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1485 Using cfiCommon0
          CFI (cfiCond1485) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1485) Conditional ??CrossCallReturnLabel_35
          CFI (cfiCond1485) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1485) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1485) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1485) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1485) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1485) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1485) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1485) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1485) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1485) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1485) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1485) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1485) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1485) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1485) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1485) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1485) CFA_SP SP+-2
          CFI (cfiCond1485) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1486 Using cfiCommon0
          CFI (cfiCond1486) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1486) Conditional ??CrossCallReturnLabel_36
          CFI (cfiCond1486) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1486) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1486) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1486) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1486) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1486) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1486) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1486) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1486) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1486) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1486) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1486) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1486) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1486) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1486) CFA_SP SP+-2
          CFI (cfiCond1486) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1487 Using cfiCommon1
          CFI (cfiPicker1487) NoFunction
          CFI (cfiPicker1487) Picker
        LCALL   ?Subroutine154 & 0xFFFF
??CrossCallReturnLabel_258:
        RET
          CFI EndBlock cfiCond1484
          CFI EndBlock cfiCond1485
          CFI EndBlock cfiCond1486
          CFI EndBlock cfiPicker1487

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine154:
          CFI Block cfiCond1488 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_258, ??CrossCallReturnLabel_34
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1489 Using cfiCommon0
          CFI (cfiCond1489) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1489) Conditional ??CrossCallReturnLabel_258, ??CrossCallReturnLabel_35
          CFI (cfiCond1489) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1489) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1489) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1489) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1489) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1489) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1489) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1489) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1489) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1489) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1489) CFA_SP SP+-4
          CFI (cfiCond1489) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1490 Using cfiCommon0
          CFI (cfiCond1490) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1490) Conditional ??CrossCallReturnLabel_258, ??CrossCallReturnLabel_36
          CFI (cfiCond1490) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1490) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1490) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1490) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1490) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1490) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1490) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1490) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1490) CFA_SP SP+-4
          CFI (cfiCond1490) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1491 Using cfiCommon0
          CFI (cfiCond1491) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1491) Conditional ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_2
          CFI (cfiCond1491) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1491) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1491) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1491) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1491) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1491) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1491) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1491) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1491) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1491) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1491) CFA_SP SP+-4
          CFI (cfiCond1491) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1492 Using cfiCommon0
          CFI (cfiCond1492) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1492) Conditional ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_3
          CFI (cfiCond1492) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1492) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1492) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1492) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1492) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1492) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1492) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1492) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1492) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1492) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1492) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1492) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1492) CFA_SP SP+-4
          CFI (cfiCond1492) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1493 Using cfiCommon0
          CFI (cfiCond1493) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1493) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_10
          CFI (cfiCond1493) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1493) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1493) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1493) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1493) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1493) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1493) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1493) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1493) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1493) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1493) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1493) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1493) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1493) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1493) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1493) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1493) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1493) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1493) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1493) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1493) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1493) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1493) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1493) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1493) CFA_SP SP+-4
          CFI (cfiCond1493) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1494 Using cfiCommon0
          CFI (cfiCond1494) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1494) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_11
          CFI (cfiCond1494) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1494) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1494) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1494) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1494) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1494) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1494) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1494) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1494) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1494) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1494) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1494) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1494) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1494) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1494) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1494) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1494) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1494) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1494) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1494) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1494) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1494) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1494) CFA_SP SP+-4
          CFI (cfiCond1494) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1495 Using cfiCommon0
          CFI (cfiCond1495) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1495) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_12
          CFI (cfiCond1495) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1495) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1495) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1495) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1495) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1495) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1495) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1495) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1495) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1495) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1495) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1495) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1495) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1495) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1495) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1495) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1495) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1495) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1495) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1495) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1495) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1495) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1495) CFA_SP SP+-4
          CFI (cfiCond1495) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1496 Using cfiCommon1
          CFI (cfiPicker1496) NoFunction
          CFI (cfiPicker1496) Picker
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1488
          CFI EndBlock cfiCond1489
          CFI EndBlock cfiCond1490
          CFI EndBlock cfiCond1491
          CFI EndBlock cfiCond1492
          CFI EndBlock cfiCond1493
          CFI EndBlock cfiCond1494
          CFI EndBlock cfiCond1495
          CFI EndBlock cfiPicker1496

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine25:
          CFI Block cfiCond1497 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
          CFI Conditional ??CrossCallReturnLabel_27
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1498 Using cfiCommon0
          CFI (cfiCond1498) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1498) Conditional ??CrossCallReturnLabel_28
          CFI (cfiCond1498) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1498) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1498) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1498) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1498) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1498) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1498) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1498) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1498) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1498) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1498) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1498) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1498) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1498) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1498) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1498) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1498) CFA_SP SP+-2
          CFI (cfiCond1498) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1499 Using cfiCommon1
          CFI (cfiPicker1499) NoFunction
          CFI (cfiPicker1499) Picker
        LCALL   ?Subroutine159 & 0xFFFF
??CrossCallReturnLabel_270:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1497
          CFI EndBlock cfiCond1498
          CFI EndBlock cfiPicker1499

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine159:
          CFI Block cfiCond1500 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_51
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1501 Using cfiCommon0
          CFI (cfiCond1501) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1501) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_52
          CFI (cfiCond1501) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1501) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1501) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1501) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1501) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1501) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1501) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1501) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1501) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1501) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1501) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1501) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1501) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1501) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1501) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1501) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1501) CFA_SP SP+-4
          CFI (cfiCond1501) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1502 Using cfiCommon0
          CFI (cfiCond1502) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond1502) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_27
          CFI (cfiCond1502) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1502) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1502) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1502) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1502) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1502) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1502) CFA_SP SP+-4
          CFI (cfiCond1502) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1503 Using cfiCommon0
          CFI (cfiCond1503) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1503) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_28
          CFI (cfiCond1503) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1503) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1503) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1503) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1503) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1503) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1503) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1503) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1503) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1503) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1503) CFA_SP SP+-4
          CFI (cfiCond1503) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1504 Using cfiCommon1
          CFI (cfiPicker1504) NoFunction
          CFI (cfiPicker1504) Picker
        LCALL   ?Subroutine197 & 0xFFFF
??CrossCallReturnLabel_318:
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1500
          CFI EndBlock cfiCond1501
          CFI EndBlock cfiCond1502
          CFI EndBlock cfiCond1503
          CFI EndBlock cfiPicker1504
// 3024 
// 3025 /*********************************************************************
// 3026  * @fn          ZDO_ParseMgmtRtgRsp
// 3027  *
// 3028  * @brief       This function parses the incoming Management
// 3029  *              Routing response.
// 3030  *
// 3031  * @param       inMsg - incoming message
// 3032  *
// 3033  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3034  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3035  *          by the calling function [osal_mem_free()].
// 3036  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3037 ZDO_MgmtRtgRsp_t *ZDO_ParseMgmtRtgRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtRtgRsp:
          CFI Block cfiBlock1505 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
        CODE
// 3038 {
        FUNCALL ZDO_ParseMgmtRtgRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
// 3039   ZDO_MgmtRtgRsp_t *pRsp;
// 3040   uint8 status;
// 3041   uint8 rtgCount = 0;
        MOV     ?V2,#0x0
// 3042   uint8 startIndex = 0;
        MOV     ?V1,#0x0
// 3043   uint8 rtgListCount = 0;
        MOV     ?V0,#0x0
// 3044   uint8 *msg;
// 3045 
// 3046   msg = inMsg->asdu;
        LCALL   ?Subroutine57 & 0xFFFF
// 3047 
// 3048   status = *msg++;
??CrossCallReturnLabel_655:
        MOV     ?V3,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 3049   if ( status == ZSuccess )
        JNZ     ??ZDO_ParseMgmtRtgRsp_0
// 3050   {
// 3051     rtgCount = *msg++;
        LCALL   ??Subroutine212_0 & 0xFFFF
// 3052     startIndex = *msg++;
??CrossCallReturnLabel_338:
        MOV     ?V1,A
// 3053     rtgListCount = *msg++;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0,A
        MOV     A,R6
        ADD     A,#0x3
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtRtgRsp_0
        INC     R7
// 3054   }
// 3055 
// 3056   // Allocate a buffer big enough to handle the list
// 3057   pRsp = (ZDO_MgmtRtgRsp_t *)osal_mem_alloc(
// 3058           sizeof( ZDO_MgmtRtgRsp_t ) + (rtgListCount * sizeof( rtgItem_t )) );
??ZDO_ParseMgmtRtgRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V0
        MOV     B,#0x7
        LCALL   ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_254:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
// 3059   if ( pRsp )
        MOV     A,R2
        ORL     A,R3
        JZ      ??ZDO_ParseMgmtRtgRsp_1
// 3060   {
// 3061     uint8 x;
// 3062     rtgItem_t *pList = pRsp->list;
        MOV     A,R2
        ADD     A,#0x4
        MOV     R0,A
        CLR     A
        ADDC    A,R3
        MOV     R1,A
// 3063     pRsp->status = status;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V3
        MOVX    @DPTR,A
// 3064     pRsp->rtgCount = rtgCount;
        INC     DPTR
        MOV     A,?V2
        LCALL   ?Subroutine39 & 0xFFFF
// 3065     pRsp->startIndex = startIndex;
??CrossCallReturnLabel_57:
        MOV     A,?V1
        LCALL   ?Subroutine29 & 0xFFFF
// 3066     pRsp->rtgListCount = rtgListCount;
??CrossCallReturnLabel_36:
        MOV     A,?V0
        MOVX    @DPTR,A
// 3067 
// 3068     for ( x = 0; x < rtgListCount; x++ )
        MOV     ?V1,#0x0
        SJMP    ??ZDO_ParseMgmtRtgRsp_2
// 3069     {
// 3070       uint8 statOpt;
// 3071 
// 3072       pList->dstAddress = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtRtgRsp_3:
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_148:
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        LCALL   ?Subroutine54 & 0xFFFF
// 3073       msg += 2;
// 3074       statOpt = *msg++;
??CrossCallReturnLabel_84:
        MOV     R4,A
        MOV     A,R6
        ADD     A,#0x3
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtRtgRsp_4
        INC     R7
// 3075       pList->status = (statOpt & 0x07);
??ZDO_ParseMgmtRtgRsp_4:
        MOV     A,#0x7
        ANL     A,R4
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3076       pList->options = ((statOpt >> 3) & 0x07);
        MOV     A,R4
        RRC     A
        RRC     A
        RRC     A
        ANL     A,#0x1f
        ANL     A,#0x7
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3077       pList->nextHopAddress = BUILD_UINT16( msg[0], msg[1] );
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_149:
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine269_0 & 0xFFFF
// 3078       msg += 2;
??CrossCallReturnLabel_686:
        JNC     ??ZDO_ParseMgmtRtgRsp_5
        INC     R7
// 3079       pList++;
??ZDO_ParseMgmtRtgRsp_5:
        MOV     A,R0
        ADD     A,#0x7
        MOV     R0,A
        JNC     ??ZDO_ParseMgmtRtgRsp_6
        INC     R1
// 3080     }
??ZDO_ParseMgmtRtgRsp_6:
        INC     ?V1
??ZDO_ParseMgmtRtgRsp_2:
        MOV     A,?V1
        CLR     C
        SUBB    A,?V0
        JC      ??ZDO_ParseMgmtRtgRsp_3
// 3081   }
// 3082 
// 3083   return ( pRsp );
??ZDO_ParseMgmtRtgRsp_1:
        LJMP    ??Subroutine253_0 & 0xFFFF
// 3084 }
          CFI EndBlock cfiBlock1505

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine151:
          CFI Block cfiCond1506 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_253
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1507 Using cfiCommon0
          CFI (cfiCond1507) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1507) Conditional ??CrossCallReturnLabel_254
          CFI (cfiCond1507) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1507) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1507) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1507) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1507) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1507) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1507) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1507) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1507) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1507) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1507) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1507) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1507) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1507) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1507) CFA_SP SP+-2
          CFI (cfiCond1507) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1508 Using cfiCommon0
          CFI (cfiCond1508) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1508) Conditional ??CrossCallReturnLabel_255
          CFI (cfiCond1508) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1508) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1508) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1508) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1508) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1508) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1508) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1508) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1508) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1508) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1508) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1508) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1508) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1508) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1508) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1508) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1508) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1508) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1508) CFA_SP SP+-2
          CFI (cfiCond1508) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1509 Using cfiCommon1
          CFI (cfiPicker1509) NoFunction
          CFI (cfiPicker1509) Picker
        MUL     AB
        MOV     R1,B
        LCALL   ??Subroutine264_0 & 0xFFFF
??CrossCallReturnLabel_661:
        ADDC    A,R1
        MOV     R3,A
        RET
          CFI EndBlock cfiCond1506
          CFI EndBlock cfiCond1507
          CFI EndBlock cfiCond1508
          CFI EndBlock cfiPicker1509

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine194:
          CFI Block cfiCond1510 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_662
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1511 Using cfiCommon0
          CFI (cfiCond1511) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1511) Conditional ??CrossCallReturnLabel_663
          CFI (cfiCond1511) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1511) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1511) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1511) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1511) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1511) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1511) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1511) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1511) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1511) CFA_SP SP+-2
          CFI (cfiCond1511) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1512 Using cfiCommon1
          CFI (cfiPicker1512) NoFunction
          CFI (cfiPicker1512) Picker
        MOV     R4,?V2
        MOV     R5,#0x0
        MOV     A,R6
          CFI EndBlock cfiCond1510
          CFI EndBlock cfiCond1511
          CFI EndBlock cfiPicker1512
        REQUIRE ??Subroutine264_0
        ; // Fall through to label ??Subroutine264_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine264_0:
          CFI Block cfiCond1513 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_658
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1514 Using cfiCommon0
          CFI (cfiCond1514) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1514) Conditional ??CrossCallReturnLabel_659
          CFI (cfiCond1514) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1514) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1514) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1514) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1514) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1514) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1514) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1514) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1514) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1514) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1514) CFA_SP SP+-2
          CFI (cfiCond1514) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1515 Using cfiCommon0
          CFI (cfiCond1515) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1515) Conditional ??CrossCallReturnLabel_661, ??CrossCallReturnLabel_253
          CFI (cfiCond1515) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1515) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1515) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1515) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1515) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1515) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1515) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1515) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1515) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1515) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1515) CFA_SP SP+-4
          CFI (cfiCond1515) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1516 Using cfiCommon0
          CFI (cfiCond1516) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1516) Conditional ??CrossCallReturnLabel_661, ??CrossCallReturnLabel_254
          CFI (cfiCond1516) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1516) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1516) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1516) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1516) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1516) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1516) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1516) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1516) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1516) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1516) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1516) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1516) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1516) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1516) CFA_SP SP+-4
          CFI (cfiCond1516) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1517 Using cfiCommon0
          CFI (cfiCond1517) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1517) Conditional ??CrossCallReturnLabel_661, ??CrossCallReturnLabel_255
          CFI (cfiCond1517) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1517) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1517) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1517) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1517) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1517) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1517) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1517) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1517) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1517) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1517) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1517) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1517) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1517) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1517) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1517) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1517) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1517) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1517) CFA_SP SP+-4
          CFI (cfiCond1517) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1518 Using cfiCommon0
          CFI (cfiCond1518) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1518) Conditional ??CrossCallReturnLabel_660
          CFI (cfiCond1518) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1518) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1518) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1518) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1518) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1518) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1518) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1518) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1518) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1518) CFA_SP SP+-2
          CFI (cfiCond1518) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1519 Using cfiCommon0
          CFI (cfiCond1519) Function ZDO_ParseEPListRsp
          CFI (cfiCond1519) Conditional ??CrossCallReturnLabel_662
          CFI (cfiCond1519) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1519) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1519) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1519) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1519) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1519) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1519) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1519) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1519) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1519) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1519) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1519) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1519) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1519) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1519) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1519) CFA_SP SP+-2
          CFI (cfiCond1519) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1520 Using cfiCommon0
          CFI (cfiCond1520) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1520) Conditional ??CrossCallReturnLabel_663
          CFI (cfiCond1520) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1520) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1520) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1520) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1520) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1520) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1520) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1520) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1520) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1520) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1520) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1520) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1520) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1520) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1520) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1520) CFA_SP SP+-2
          CFI (cfiCond1520) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1521 Using cfiCommon1
          CFI (cfiPicker1521) NoFunction
          CFI (cfiPicker1521) Picker
        ADD     A,#0x4
        MOV     R2,A
        CLR     A
        RET
          CFI EndBlock cfiCond1513
          CFI EndBlock cfiCond1514
          CFI EndBlock cfiCond1515
          CFI EndBlock cfiCond1516
          CFI EndBlock cfiCond1517
          CFI EndBlock cfiCond1518
          CFI EndBlock cfiCond1519
          CFI EndBlock cfiCond1520
          CFI EndBlock cfiPicker1521

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine90:
          CFI Block cfiCond1522 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_148
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1523 Using cfiCommon0
          CFI (cfiCond1523) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1523) Conditional ??CrossCallReturnLabel_149
          CFI (cfiCond1523) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1523) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1523) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1523) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1523) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1523) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1523) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1523) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1523) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1523) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1523) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1523) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1523) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1523) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1523) CFA_SP SP+-2
          CFI (cfiCond1523) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1524 Using cfiCommon1
          CFI (cfiPicker1524) NoFunction
          CFI (cfiPicker1524) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,?V2
        MOV     DPL,R0
        MOV     DPH,R1
        RET
          CFI EndBlock cfiCond1522
          CFI EndBlock cfiCond1523
          CFI EndBlock cfiPicker1524

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine54:
          CFI Block cfiCond1525 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_83
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1526 Using cfiCommon0
          CFI (cfiCond1526) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1526) Conditional ??CrossCallReturnLabel_84
          CFI (cfiCond1526) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1526) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1526) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1526) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1526) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1526) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1526) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1526) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1526) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1526) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1526) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1526) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1526) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1526) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1526) CFA_SP SP+-2
          CFI (cfiCond1526) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1527 Using cfiCommon1
          CFI (cfiPicker1527) NoFunction
          CFI (cfiPicker1527) Picker
        LCALL   ?Subroutine198 & 0xFFFF
??CrossCallReturnLabel_319:
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1525
          CFI EndBlock cfiCond1526
          CFI EndBlock cfiPicker1527
// 3085 
// 3086 /*********************************************************************
// 3087  * @fn          ZDO_ParseMgmtBindRsp
// 3088  *
// 3089  * @brief       This function parses the incoming Management
// 3090  *              Binding response.
// 3091  *
// 3092  * @param       inMsg - pointer to message to parse
// 3093  *
// 3094  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3095  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3096  *          by the calling function [osal_mem_free()].
// 3097  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3098 ZDO_MgmtBindRsp_t *ZDO_ParseMgmtBindRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtBindRsp:
          CFI Block cfiBlock1528 Using cfiCommon0
          CFI Function ZDO_ParseMgmtBindRsp
        CODE
// 3099 {
        FUNCALL ZDO_ParseMgmtBindRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
// 3100   ZDO_MgmtBindRsp_t *pRsp;
// 3101   uint8 status;
// 3102   uint8 bindingCount = 0;
        MOV     ?V6,#0x0
// 3103   uint8 startIndex = 0;
        MOV     ?V5,#0x0
// 3104   uint8 bindingListCount = 0;
        MOV     ?V4,#0x0
// 3105   uint8 *msg;
// 3106 
// 3107   msg = inMsg->asdu;
        LCALL   ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_190:
        LCALL   ?Subroutine94 & 0xFFFF
// 3108 
// 3109   status = *msg++;
??CrossCallReturnLabel_342:
        MOV     DPL,?V2
        MOV     DPH,A
        LCALL   ?Subroutine99 & 0xFFFF
// 3110   if ( status == ZSuccess )
??CrossCallReturnLabel_155:
        JNZ     ??ZDO_ParseMgmtBindRsp_0
// 3111   {
// 3112     bindingCount = *msg++;
        MOVX    A,@DPTR
        MOV     ?V6,A
// 3113     startIndex = *msg++;
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V5,A
// 3114     bindingListCount = *msg++;
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V4,A
        MOV     A,?V2
        ADD     A,#0x3
        MOV     ?V2,A
        JNC     ??ZDO_ParseMgmtBindRsp_0
        INC     ?V3
// 3115   }
// 3116 
// 3117   // Allocate a buffer big enough to handle the list
// 3118   pRsp = (ZDO_MgmtBindRsp_t *)osal_mem_alloc(
// 3119           (sizeof ( ZDO_MgmtBindRsp_t ) + (bindingListCount * sizeof( apsBindingItem_t ))) );
??ZDO_ParseMgmtBindRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V4
        MOV     B,#0x15
        LCALL   ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_255:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V0,R2
        MOV     ?V1,R3
// 3120   if ( pRsp )
        MOV     A,R2
        ORL     A,?V1
        JNZ     $+5
        LJMP    ??ZDO_ParseMgmtBindRsp_1 & 0xFFFF
// 3121   {
// 3122     uint8 x;
// 3123     apsBindingItem_t *pList = pRsp->list;
        MOV     A,R2
        ADD     A,#0x4
        MOV     R6,A
        CLR     A
        ADDC    A,?V1
        MOV     R7,A
// 3124     pRsp->status = status;
        LCALL   ?Subroutine12 & 0xFFFF
// 3125     pRsp->bindingCount = bindingCount;
// 3126     pRsp->startIndex = startIndex;
// 3127     pRsp->bindingListCount = bindingListCount;
// 3128 
// 3129     for ( x = 0; x < bindingListCount; x++ )
??CrossCallReturnLabel_3:
        SJMP    ??ZDO_ParseMgmtBindRsp_2
// 3130     {
// 3131       osal_cpyExtAddr( pList->srcAddr, msg );
// 3132       msg += Z_EXTADDR_LEN;
// 3133       pList->srcEP = *msg++;
// 3134 
// 3135       // Get the Cluster ID
// 3136 
// 3137       pList->clusterID = BUILD_UINT16( msg[0], msg[1] );
// 3138       msg += 2;
// 3139       pList->dstAddr.addrMode = *msg++;
// 3140       if ( pList->dstAddr.addrMode == Addr64Bit )
// 3141       {
// 3142         osal_cpyExtAddr( pList->dstAddr.addr.extAddr, msg );
// 3143         msg += Z_EXTADDR_LEN;
// 3144         pList->dstEP = *msg++;
// 3145       }
// 3146       else
// 3147       {
// 3148         pList->dstAddr.addr.shortAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtBindRsp_3:
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_153:
        LCALL   ?Subroutine53 & 0xFFFF
// 3149         msg += 2;
??CrossCallReturnLabel_380:
        MOV     A,?V2
        ADD     A,#0x2
        MOV     ?V2,A
        JNC     ??ZDO_ParseMgmtBindRsp_4
        INC     ?V3
// 3150       }
// 3151 
// 3152       pList++;
??ZDO_ParseMgmtBindRsp_4:
        MOV     A,R6
        ADD     A,#0x15
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtBindRsp_5
        INC     R7
??ZDO_ParseMgmtBindRsp_5:
        INC     ?V5
??ZDO_ParseMgmtBindRsp_2:
        MOV     A,?V5
        CLR     C
        SUBB    A,?V4
        JNC     ??ZDO_ParseMgmtBindRsp_1
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V2
        MOV     R5,?V3
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_137:
        MOV     A,?V2
        ADD     A,#0x9
        MOV     ?V2,A
        JNC     ??ZDO_ParseMgmtBindRsp_6
        INC     ?V3
??ZDO_ParseMgmtBindRsp_6:
        MOV     DPL,A
        MOV     DPH,?V3
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_107:
        LCALL   ??Subroutine221_0 & 0xFFFF
??CrossCallReturnLabel_369:
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_196:
        MOV     A,?V2
        ADD     A,#0x3
        MOV     ?V2,A
        JNC     ??ZDO_ParseMgmtBindRsp_7
        INC     ?V3
??ZDO_ParseMgmtBindRsp_7:
        MOV     A,#0x3
        XRL     A,R0
        JNZ     ??ZDO_ParseMgmtBindRsp_3
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V2
        MOV     R5,?V3
        LCALL   ?Subroutine144 & 0xFFFF
??CrossCallReturnLabel_232:
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine139 & 0xFFFF
// 3153     }
// 3154   }
??CrossCallReturnLabel_532:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,?V2
        ADD     A,#0x9
        MOV     ?V2,A
        JNC     ??ZDO_ParseMgmtBindRsp_4
        INC     ?V3
??ZDO_ParseMgmtBindRsp_8:
        LJMP    ??ZDO_ParseMgmtBindRsp_4 & 0xFFFF
// 3155 
// 3156   return ( pRsp );
??ZDO_ParseMgmtBindRsp_1:
        MOV     R2,?V0
        MOV     R3,?V1
        LJMP    ??Subroutine226_0 & 0xFFFF
// 3157 }
          CFI EndBlock cfiBlock1528

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine122:
          CFI Block cfiCond1529 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_195
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1530 Using cfiCommon0
          CFI (cfiCond1530) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1530) Conditional ??CrossCallReturnLabel_196
          CFI (cfiCond1530) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1530) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1530) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1530) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1530) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1530) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1530) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1530) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1530) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1530) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1530) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1530) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1530) CFA_SP SP+-2
          CFI (cfiCond1530) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1531 Using cfiCommon1
          CFI (cfiPicker1531) NoFunction
          CFI (cfiPicker1531) Picker
        MOV     R0,A
        LCALL   ?Subroutine184 & 0xFFFF
??CrossCallReturnLabel_301:
        MOV     DPH,A
        MOV     A,R0
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond1529
          CFI EndBlock cfiCond1530
          CFI EndBlock cfiPicker1531

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine99:
          CFI Block cfiCond1532 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_154
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1533 Using cfiCommon0
          CFI (cfiCond1533) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1533) Conditional ??CrossCallReturnLabel_155
          CFI (cfiCond1533) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1533) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1533) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1533) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1533) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1533) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1533) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1533) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1533) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1533) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1533) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1533) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1533) CFA_SP SP+-2
          CFI (cfiCond1533) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1534 Using cfiCommon1
          CFI (cfiPicker1534) NoFunction
          CFI (cfiPicker1534) Picker
        MOVX    A,@DPTR
        MOV     ?V7,A
        INC     DPTR
        MOV     ?V2,DPL
        MOV     ?V3,DPH
        RET
          CFI EndBlock cfiCond1532
          CFI EndBlock cfiCond1533
          CFI EndBlock cfiPicker1534

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine97:
          CFI Block cfiCond1535 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_152
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1536 Using cfiCommon0
          CFI (cfiCond1536) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1536) Conditional ??CrossCallReturnLabel_153
          CFI (cfiCond1536) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1536) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1536) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1536) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1536) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1536) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1536) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1536) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1536) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1536) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1536) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1536) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1536) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1536) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1536) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1536) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1536) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1536) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1536) CFA_SP SP+-2
          CFI (cfiCond1536) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1537 Using cfiCommon1
          CFI (cfiPicker1537) NoFunction
          CFI (cfiPicker1537) Picker
        LCALL   ?Subroutine172 & 0xFFFF
??CrossCallReturnLabel_645:
        MOV     R0,A
        MOV     A,R6
        ADD     A,#0xb
        RET
          CFI EndBlock cfiCond1535
          CFI EndBlock cfiCond1536
          CFI EndBlock cfiPicker1537

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine83:
          CFI Block cfiCond1538 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_136
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1539 Using cfiCommon0
          CFI (cfiCond1539) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1539) Conditional ??CrossCallReturnLabel_137
          CFI (cfiCond1539) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1539) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1539) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1539) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1539) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1539) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1539) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1539) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1539) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1539) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1539) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1539) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1539) CFA_SP SP+-2
          CFI (cfiCond1539) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1540 Using cfiCommon1
          CFI (cfiPicker1540) NoFunction
          CFI (cfiPicker1540) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine178 & 0xFFFF
??CrossCallReturnLabel_294:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond1538
          CFI EndBlock cfiCond1539
          CFI EndBlock cfiPicker1540

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine178:
          CFI Block cfiCond1541 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_292
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1542 Using cfiCommon0
          CFI (cfiCond1542) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond1542) Conditional ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_168
          CFI (cfiCond1542) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1542) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1542) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1542) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1542) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1542) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1542) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1542) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1542) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1542) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1542) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1542) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1542) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1542) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1542) CFA_SP SP+-4
          CFI (cfiCond1542) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1543 Using cfiCommon0
          CFI (cfiCond1543) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond1543) Conditional ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_169
          CFI (cfiCond1543) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1543) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1543) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1543) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1543) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1543) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1543) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1543) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1543) CFA_SP SP+-4
          CFI (cfiCond1543) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1544 Using cfiCommon0
          CFI (cfiCond1544) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1544) Conditional ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_170
          CFI (cfiCond1544) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1544) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1544) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1544) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1544) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1544) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1544) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1544) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1544) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1544) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1544) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1544) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1544) CFA_SP SP+-4
          CFI (cfiCond1544) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1545 Using cfiCommon0
          CFI (cfiCond1545) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1545) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_136
          CFI (cfiCond1545) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1545) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1545) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1545) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1545) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1545) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1545) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1545) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1545) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1545) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1545) CFA_SP SP+-4
          CFI (cfiCond1545) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1546 Using cfiCommon0
          CFI (cfiCond1546) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1546) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_137
          CFI (cfiCond1546) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1546) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1546) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1546) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1546) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1546) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1546) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1546) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1546) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1546) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1546) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1546) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1546) CFA_SP SP+-4
          CFI (cfiCond1546) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1547 Using cfiCommon0
          CFI (cfiCond1547) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1547) Conditional ??CrossCallReturnLabel_293
          CFI (cfiCond1547) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1547) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1547) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1547) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1547) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1547) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1547) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1547) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1547) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1547) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1547) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1547) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1547) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1547) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1547) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1547) CFA_SP SP+-2
          CFI (cfiCond1547) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker1548 Using cfiCommon1
          CFI (cfiPicker1548) NoFunction
          CFI (cfiPicker1548) Picker
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        RET
          CFI EndBlock cfiCond1541
          CFI EndBlock cfiCond1542
          CFI EndBlock cfiCond1543
          CFI EndBlock cfiCond1544
          CFI EndBlock cfiCond1545
          CFI EndBlock cfiCond1546
          CFI EndBlock cfiCond1547
          CFI EndBlock cfiPicker1548

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine67:
          CFI Block cfiCond1549 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_106
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1550 Using cfiCommon0
          CFI (cfiCond1550) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1550) Conditional ??CrossCallReturnLabel_107
          CFI (cfiCond1550) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1550) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1550) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1550) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1550) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1550) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1550) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1550) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1550) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1550) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1550) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1550) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1550) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1550) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1550) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1550) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1550) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1550) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1550) CFA_SP SP+-2
          CFI (cfiCond1550) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1551 Using cfiCommon1
          CFI (cfiPicker1551) NoFunction
          CFI (cfiPicker1551) Picker
        LCALL   ?Subroutine172 & 0xFFFF
??CrossCallReturnLabel_643:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1549
          CFI EndBlock cfiCond1550
          CFI EndBlock cfiPicker1551

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine12:
          CFI Block cfiCond1552 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_2
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1553 Using cfiCommon0
          CFI (cfiCond1553) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1553) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond1553) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1553) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1553) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1553) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1553) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1553) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1553) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1553) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1553) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1553) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1553) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1553) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1553) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1553) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1553) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1553) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1553) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1553) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1553) CFA_SP SP+-2
          CFI (cfiCond1553) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1554 Using cfiCommon1
          CFI (cfiPicker1554) NoFunction
          CFI (cfiPicker1554) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V7
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V6
        LCALL   ?Subroutine160 & 0xFFFF
??CrossCallReturnLabel_272:
        INC     DPTR
        MOV     A,?V5
        LCALL   ?Subroutine154 & 0xFFFF
??CrossCallReturnLabel_259:
        MOV     A,?V4
        MOVX    @DPTR,A
        MOV     ?V5,#0x0
        RET
          CFI EndBlock cfiCond1552
          CFI EndBlock cfiCond1553
          CFI EndBlock cfiPicker1554
// 3158 
// 3159 /*********************************************************************
// 3160  * @fn          ZDO_ParseUserDescRsp
// 3161  *
// 3162  * @brief       This function parses the incoming User
// 3163  *              Descriptor Response.
// 3164  *
// 3165  * @param       inMsg - incoming response message
// 3166  *
// 3167  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3168  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3169  *          by the calling function [osal_mem_free()].
// 3170  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3171 ZDO_UserDescRsp_t *ZDO_ParseUserDescRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseUserDescRsp:
          CFI Block cfiBlock1555 Using cfiCommon0
          CFI Function ZDO_ParseUserDescRsp
        CODE
// 3172 {
        FUNCALL ZDO_ParseUserDescRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseUserDescRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
// 3173   ZDO_UserDescRsp_t *pRsp;
// 3174   uint8 *msg;
// 3175   uint8 descLen = 0;
        MOV     ?V2,#0x0
// 3176 
// 3177   msg = inMsg->asdu;
        LCALL   ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_191:
        LCALL   ??Subroutine231_0 & 0xFFFF
??CrossCallReturnLabel_427:
        MOV     ?V0,R0
        MOV     ?V1,R1
// 3178 
// 3179   if ( msg[0] == ZSuccess )
        MOV     DPL,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        JNZ     ??ZDO_ParseUserDescRsp_0
// 3180   {
// 3181     descLen = msg[3];
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V2,A
// 3182   }
// 3183 
// 3184   pRsp = (ZDO_UserDescRsp_t *)osal_mem_alloc( sizeof ( ZDO_UserDescRsp_t ) + descLen );
??ZDO_ParseUserDescRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V2
        LCALL   ??Subroutine264_0 & 0xFFFF
??CrossCallReturnLabel_660:
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     R6,?V4
        MOV     R7,?V5
// 3185   if ( pRsp )
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_ParseUserDescRsp_1
// 3186   {
// 3187     pRsp->status = msg[0];
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ?Subroutine178 & 0xFFFF
??CrossCallReturnLabel_293:
        LCALL   ?Subroutine55 & 0xFFFF
// 3188     pRsp->nwkAddr = BUILD_UINT16( msg[1], msg[2] );
??CrossCallReturnLabel_85:
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        LCALL   ?Subroutine24 & 0xFFFF
// 3189     pRsp->length = descLen;
// 3190     if ( descLen )
??CrossCallReturnLabel_26:
        JZ      ??ZDO_ParseUserDescRsp_1
// 3191     {
// 3192       osal_memcpy( pRsp->desc, &msg[4], descLen );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,?V0
        ADD     A,#0x4
        JNC     ??ZDO_ParseUserDescRsp_2
        INC     ?V1
??ZDO_ParseUserDescRsp_2:
        MOV     ?V4,A
        MOV     ?V5,?V1
        MOV     ?V6,R0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 18)
        LCALL   ?Subroutine194 & 0xFFFF
// 3193     }
// 3194   }
??CrossCallReturnLabel_663:
        ADDC    A,R7
        MOV     R3,A
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
// 3195 
// 3196   return ( pRsp );
??ZDO_ParseUserDescRsp_1:
        LJMP    ?Subroutine6 & 0xFFFF
// 3197 }
          CFI EndBlock cfiBlock1555

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine120:
          CFI Block cfiCond1556 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_189
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1557 Using cfiCommon0
          CFI (cfiCond1557) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1557) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond1557) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1557) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1557) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1557) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1557) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1557) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1557) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1557) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1557) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1557) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1557) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1557) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1557) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1557) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1557) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1557) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1557) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1557) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1557) CFA_SP SP+-2
          CFI (cfiCond1557) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1558 Using cfiCommon0
          CFI (cfiCond1558) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1558) Conditional ??CrossCallReturnLabel_191
          CFI (cfiCond1558) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1558) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1558) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1558) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1558) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1558) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1558) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1558) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1558) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1558) CFA_SP SP+-2
          CFI (cfiCond1558) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1559 Using cfiCommon0
          CFI (cfiCond1559) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1559) Conditional ??CrossCallReturnLabel_192
          CFI (cfiCond1559) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1559) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1559) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1559) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1559) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1559) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1559) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1559) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1559) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1559) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1559) CFA_SP SP+-2
          CFI (cfiCond1559) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1560 Using cfiCommon1
          CFI (cfiPicker1560) NoFunction
          CFI (cfiPicker1560) Picker
        LCALL   ?Subroutine186 & 0xFFFF
??CrossCallReturnLabel_307:
        RET
          CFI EndBlock cfiCond1556
          CFI EndBlock cfiCond1557
          CFI EndBlock cfiCond1558
          CFI EndBlock cfiCond1559
          CFI EndBlock cfiPicker1560

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine186:
          CFI Block cfiCond1561 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1562 Using cfiCommon0
          CFI (cfiCond1562) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1562) Conditional ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_1
          CFI (cfiCond1562) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1562) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1562) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1562) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1562) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1562) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1562) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1562) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1562) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1562) CFA_SP SP+-4
          CFI (cfiCond1562) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1563 Using cfiCommon0
          CFI (cfiCond1563) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1563) Conditional ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_653
          CFI (cfiCond1563) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1563) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1563) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1563) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1563) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1563) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1563) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1563) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1563) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1563) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1563) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1563) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1563) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1563) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1563) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1563) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1563) CFA_SP SP+-4
          CFI (cfiCond1563) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1564 Using cfiCommon0
          CFI (cfiCond1564) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1564) Conditional ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_654
          CFI (cfiCond1564) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1564) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1564) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1564) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1564) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1564) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1564) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1564) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1564) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1564) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1564) CFA_SP SP+-4
          CFI (cfiCond1564) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1565 Using cfiCommon0
          CFI (cfiCond1565) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1565) Conditional ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_655
          CFI (cfiCond1565) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1565) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1565) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1565) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1565) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1565) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1565) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1565) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1565) CFA_SP SP+-4
          CFI (cfiCond1565) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1566 Using cfiCommon0
          CFI (cfiCond1566) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1566) Conditional ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_656
          CFI (cfiCond1566) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1566) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1566) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1566) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1566) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1566) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1566) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1566) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1566) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1566) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1566) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1566) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1566) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1566) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1566) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1566) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1566) CFA_SP SP+-4
          CFI (cfiCond1566) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1567 Using cfiCommon0
          CFI (cfiCond1567) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1567) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_189
          CFI (cfiCond1567) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1567) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1567) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1567) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1567) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1567) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1567) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1567) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1567) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1567) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1567) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1567) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1567) CFA_SP SP+-4
          CFI (cfiCond1567) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1568 Using cfiCommon0
          CFI (cfiCond1568) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1568) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_190
          CFI (cfiCond1568) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1568) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1568) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1568) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1568) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1568) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1568) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1568) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1568) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1568) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1568) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1568) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1568) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1568) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1568) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1568) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1568) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1568) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1568) CFA_SP SP+-4
          CFI (cfiCond1568) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1569 Using cfiCommon0
          CFI (cfiCond1569) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1569) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_191
          CFI (cfiCond1569) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1569) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1569) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1569) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1569) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1569) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1569) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1569) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1569) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1569) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1569) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1569) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1569) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1569) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1569) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1569) CFA_SP SP+-4
          CFI (cfiCond1569) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1570 Using cfiCommon0
          CFI (cfiCond1570) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1570) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_192
          CFI (cfiCond1570) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1570) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1570) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1570) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1570) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1570) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1570) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1570) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1570) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1570) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1570) CFA_SP SP+-4
          CFI (cfiCond1570) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1571 Using cfiCommon1
          CFI (cfiPicker1571) NoFunction
          CFI (cfiPicker1571) Picker
        LCALL   ?Subroutine204 & 0xFFFF
??CrossCallReturnLabel_666:
        ADDC    A,R3
        RET
          CFI EndBlock cfiCond1561
          CFI EndBlock cfiCond1562
          CFI EndBlock cfiCond1563
          CFI EndBlock cfiCond1564
          CFI EndBlock cfiCond1565
          CFI EndBlock cfiCond1566
          CFI EndBlock cfiCond1567
          CFI EndBlock cfiCond1568
          CFI EndBlock cfiCond1569
          CFI EndBlock cfiCond1570
          CFI EndBlock cfiPicker1571

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine204:
          CFI Block cfiCond1572 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1573 Using cfiCommon0
          CFI (cfiCond1573) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1573) Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_1
          CFI (cfiCond1573) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1573) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1573) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1573) CFA_SP SP+-6
          CFI (cfiCond1573) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1574 Using cfiCommon0
          CFI (cfiCond1574) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1574) Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_653
          CFI (cfiCond1574) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1574) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1574) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1574) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1574) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1574) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1574) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1574) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1574) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1574) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1574) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1574) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1574) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1574) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1574) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1574) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1574) CFA_SP SP+-6
          CFI (cfiCond1574) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1575 Using cfiCommon0
          CFI (cfiCond1575) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1575) Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_654
          CFI (cfiCond1575) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1575) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1575) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1575) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1575) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1575) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1575) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1575) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1575) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1575) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1575) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1575) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1575) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1575) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1575) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1575) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1575) CFA_SP SP+-6
          CFI (cfiCond1575) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1576 Using cfiCommon0
          CFI (cfiCond1576) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1576) Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_655
          CFI (cfiCond1576) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1576) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1576) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1576) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1576) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1576) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1576) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1576) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1576) CFA_SP SP+-6
          CFI (cfiCond1576) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1577 Using cfiCommon0
          CFI (cfiCond1577) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1577) Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_656
          CFI (cfiCond1577) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1577) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1577) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1577) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1577) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1577) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1577) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1577) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1577) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1577) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1577) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1577) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1577) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1577) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1577) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1577) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1577) CFA_SP SP+-6
          CFI (cfiCond1577) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1578 Using cfiCommon0
          CFI (cfiCond1578) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1578) Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_189
          CFI (cfiCond1578) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1578) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1578) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1578) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1578) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1578) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1578) CFA_SP SP+-6
          CFI (cfiCond1578) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1579 Using cfiCommon0
          CFI (cfiCond1579) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1579) Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_190
          CFI (cfiCond1579) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1579) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1579) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1579) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1579) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1579) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1579) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1579) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1579) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1579) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1579) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1579) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1579) CFA_SP SP+-6
          CFI (cfiCond1579) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1580 Using cfiCommon0
          CFI (cfiCond1580) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1580) Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_191
          CFI (cfiCond1580) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1580) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1580) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1580) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1580) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1580) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1580) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1580) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1580) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1580) CFA_SP SP+-6
          CFI (cfiCond1580) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1581 Using cfiCommon0
          CFI (cfiCond1581) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1581) Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_192
          CFI (cfiCond1581) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1581) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1581) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1581) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1581) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1581) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1581) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1581) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1581) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1581) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1581) CFA_SP SP+-6
          CFI (cfiCond1581) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1582 Using cfiCommon0
          CFI (cfiCond1582) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1582) Conditional ??CrossCallReturnLabel_665, ??CrossCallReturnLabel_303, ??CrossCallReturnLabel_562
          CFI (cfiCond1582) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1582) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1582) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1582) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1582) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1582) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1582) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1582) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1582) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1582) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1582) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1582) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1582) CFA_SP SP+-6
          CFI (cfiCond1582) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1583 Using cfiCommon0
          CFI (cfiCond1583) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1583) Conditional ??CrossCallReturnLabel_665, ??CrossCallReturnLabel_303, ??CrossCallReturnLabel_563
          CFI (cfiCond1583) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1583) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1583) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1583) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1583) CFA_SP SP+-6
          CFI (cfiCond1583) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1584 Using cfiCommon0
          CFI (cfiCond1584) Function ZDO_ParseEPListRsp
          CFI (cfiCond1584) Conditional ??CrossCallReturnLabel_665, ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_186
          CFI (cfiCond1584) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1584) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1584) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1584) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1584) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1584) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1584) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1584) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1584) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1584) CFA_SP SP+-6
          CFI (cfiCond1584) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1585 Using cfiCommon0
          CFI (cfiCond1585) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1585) Conditional ??CrossCallReturnLabel_665, ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_187
          CFI (cfiCond1585) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1585) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1585) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1585) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1585) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1585) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1585) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1585) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1585) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1585) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1585) CFA_SP SP+-6
          CFI (cfiCond1585) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1586 Using cfiCommon0
          CFI (cfiCond1586) Function ZDO_ParseEndDeviceTimeoutRsp
          CFI (cfiCond1586) Conditional ??CrossCallReturnLabel_665, ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_188
          CFI (cfiCond1586) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1586) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1586) CFA_SP SP+-11
          CFI Block cfiPicker1587 Using cfiCommon1
          CFI (cfiPicker1587) NoFunction
          CFI (cfiPicker1587) Picker
        MOV     A,R2
          CFI EndBlock cfiCond1572
          CFI EndBlock cfiCond1573
          CFI EndBlock cfiCond1574
          CFI EndBlock cfiCond1575
          CFI EndBlock cfiCond1576
          CFI EndBlock cfiCond1577
          CFI EndBlock cfiCond1578
          CFI EndBlock cfiCond1579
          CFI EndBlock cfiCond1580
          CFI EndBlock cfiCond1581
          CFI EndBlock cfiCond1582
          CFI EndBlock cfiCond1583
          CFI EndBlock cfiCond1584
          CFI EndBlock cfiCond1585
          CFI EndBlock cfiCond1586
          CFI EndBlock cfiPicker1587
        REQUIRE ??Subroutine265_0
        ; // Fall through to label ??Subroutine265_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine265_0:
          CFI Block cfiCond1588 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_667, ??CrossCallReturnLabel_385
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1589 Using cfiCommon0
          CFI (cfiCond1589) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond1589) Conditional ??CrossCallReturnLabel_667, ??CrossCallReturnLabel_386
          CFI (cfiCond1589) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1589) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1589) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1589) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1589) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1589) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1589) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1589) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1589) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1589) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1589) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1589) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1589) CFA_SP SP+-4
          CFI (cfiCond1589) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1590 Using cfiCommon0
          CFI (cfiCond1590) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1590) Conditional ??CrossCallReturnLabel_667, ??CrossCallReturnLabel_388
          CFI (cfiCond1590) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1590) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1590) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1590) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1590) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1590) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1590) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1590) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1590) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1590) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1590) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1590) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1590) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1590) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1590) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1590) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1590) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1590) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1590) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1590) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1590) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1590) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1590) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1590) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1590) CFA_SP SP+-4
          CFI (cfiCond1590) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1591 Using cfiCommon0
          CFI (cfiCond1591) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1591) Conditional ??CrossCallReturnLabel_667, ??CrossCallReturnLabel_389
          CFI (cfiCond1591) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1591) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1591) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1591) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1591) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1591) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1591) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1591) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1591) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1591) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1591) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1591) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1591) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1591) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1591) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1591) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1591) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1591) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1591) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1591) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1591) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1591) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1591) CFA_SP SP+-4
          CFI (cfiCond1591) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1592 Using cfiCommon0
          CFI (cfiCond1592) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond1592) Conditional ??CrossCallReturnLabel_667, ??CrossCallReturnLabel_390
          CFI (cfiCond1592) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1592) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1592) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1592) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1592) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1592) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1592) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1592) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1592) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1592) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1592) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1592) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1592) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1592) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1592) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1592) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1592) CFA_SP SP+-4
          CFI (cfiCond1592) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1593 Using cfiCommon0
          CFI (cfiCond1593) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond1593) Conditional ??CrossCallReturnLabel_667, ??CrossCallReturnLabel_391
          CFI (cfiCond1593) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1593) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1593) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1593) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1593) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1593) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1593) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1593) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1593) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1593) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1593) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1593) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1593) CFA_SP SP+-4
          CFI (cfiCond1593) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1594 Using cfiCommon0
          CFI (cfiCond1594) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1594) Conditional ??CrossCallReturnLabel_667, ??CrossCallReturnLabel_387
          CFI (cfiCond1594) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1594) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1594) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1594) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1594) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1594) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1594) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1594) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1594) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1594) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1594) CFA_SP SP+-4
          CFI (cfiCond1594) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1595 Using cfiCommon0
          CFI (cfiCond1595) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond1595) Conditional ??CrossCallReturnLabel_664, ??CrossCallReturnLabel_302, ??CrossCallReturnLabel_197
          CFI (cfiCond1595) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1595) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1595) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1595) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1595) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1595) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1595) CFA_SP SP+-6
          CFI (cfiCond1595) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1596 Using cfiCommon0
          CFI (cfiCond1596) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond1596) Conditional ??CrossCallReturnLabel_664, ??CrossCallReturnLabel_302, ??CrossCallReturnLabel_198
          CFI (cfiCond1596) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1596) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1596) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1596) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1596) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1596) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1596) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1596) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1596) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1596) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1596) CFA_SP SP+-6
          CFI (cfiCond1596) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1597 Using cfiCommon0
          CFI (cfiCond1597) Function ZDO_ParseAddrRsp
          CFI (cfiCond1597) Conditional ??CrossCallReturnLabel_664, ??CrossCallReturnLabel_302, ??CrossCallReturnLabel_199
          CFI (cfiCond1597) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1597) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1597) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1597) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1597) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1597) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1597) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1597) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1597) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1597) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1597) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1597) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1597) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1597) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1597) CFA_SP SP+-6
          CFI (cfiCond1597) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1598 Using cfiCommon0
          CFI (cfiCond1598) Function ZDO_ParseAddrRsp
          CFI (cfiCond1598) Conditional ??CrossCallReturnLabel_664, ??CrossCallReturnLabel_302, ??CrossCallReturnLabel_200
          CFI (cfiCond1598) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1598) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1598) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1598) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1598) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1598) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1598) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1598) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1598) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1598) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1598) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1598) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1598) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1598) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1598) CFA_SP SP+-6
          CFI (cfiCond1598) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1599 Using cfiCommon0
          CFI (cfiCond1599) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond1599) Conditional ??CrossCallReturnLabel_664, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_120
          CFI (cfiCond1599) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1599) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1599) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1599) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1599) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1599) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1599) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1599) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1599) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1599) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1599) CFA_SP SP+-6
          CFI (cfiCond1599) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1600 Using cfiCommon0
          CFI (cfiCond1600) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond1600) Conditional ??CrossCallReturnLabel_664, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_121
          CFI (cfiCond1600) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1600) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1600) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1600) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1600) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1600) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1600) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1600) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1600) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1600) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1600) CFA_SP SP+-6
          CFI (cfiCond1600) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1601 Using cfiCommon0
          CFI (cfiCond1601) Function ZDO_ProcessUserDescSet
          CFI (cfiCond1601) Conditional ??CrossCallReturnLabel_664, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_122
          CFI (cfiCond1601) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1601) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1601) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1601) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1601) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1601) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1601) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1601) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1601) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1601) CFA_SP SP+-6
          CFI (cfiCond1601) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1602 Using cfiCommon0
          CFI (cfiCond1602) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1602) Conditional ??CrossCallReturnLabel_664, ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_195
          CFI (cfiCond1602) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1602) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1602) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1602) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1602) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1602) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1602) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1602) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1602) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1602) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1602) CFA_SP SP+-6
          CFI (cfiCond1602) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1603 Using cfiCommon0
          CFI (cfiCond1603) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1603) Conditional ??CrossCallReturnLabel_664, ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_196
          CFI (cfiCond1603) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1603) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1603) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1603) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1603) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1603) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1603) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1603) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1603) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1603) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1603) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1603) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1603) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1603) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1603) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1603) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1603) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1603) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1603) CFA_SP SP+-6
          CFI (cfiCond1603) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1604 Using cfiCommon0
          CFI (cfiCond1604) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1604) Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_0
          CFI (cfiCond1604) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1604) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1604) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1604) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1604) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1604) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1604) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1604) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1604) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1604) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1604) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1604) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1604) CFA_SP SP+-6
          CFI (cfiCond1604) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1605 Using cfiCommon0
          CFI (cfiCond1605) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1605) Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_1
          CFI (cfiCond1605) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1605) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1605) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1605) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1605) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1605) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1605) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1605) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1605) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1605) CFA_SP SP+-6
          CFI (cfiCond1605) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1606 Using cfiCommon0
          CFI (cfiCond1606) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1606) Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_653
          CFI (cfiCond1606) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1606) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1606) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1606) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1606) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1606) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1606) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1606) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1606) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1606) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1606) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1606) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1606) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1606) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1606) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1606) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1606) CFA_SP SP+-6
          CFI (cfiCond1606) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1607 Using cfiCommon0
          CFI (cfiCond1607) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1607) Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_654
          CFI (cfiCond1607) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1607) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1607) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1607) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1607) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1607) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1607) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1607) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1607) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1607) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1607) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1607) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1607) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1607) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1607) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1607) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1607) CFA_SP SP+-6
          CFI (cfiCond1607) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1608 Using cfiCommon0
          CFI (cfiCond1608) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1608) Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_655
          CFI (cfiCond1608) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1608) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1608) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1608) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1608) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1608) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1608) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1608) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1608) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1608) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1608) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1608) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1608) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1608) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1608) CFA_SP SP+-6
          CFI (cfiCond1608) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1609 Using cfiCommon0
          CFI (cfiCond1609) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1609) Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_656
          CFI (cfiCond1609) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1609) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1609) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1609) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1609) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1609) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1609) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1609) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1609) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1609) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1609) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1609) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1609) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1609) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1609) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1609) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1609) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1609) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1609) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1609) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1609) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1609) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1609) CFA_SP SP+-6
          CFI (cfiCond1609) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1610 Using cfiCommon0
          CFI (cfiCond1610) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1610) Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_189
          CFI (cfiCond1610) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1610) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1610) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1610) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1610) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1610) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1610) CFA_SP SP+-6
          CFI (cfiCond1610) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1611 Using cfiCommon0
          CFI (cfiCond1611) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1611) Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_190
          CFI (cfiCond1611) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1611) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1611) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1611) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1611) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1611) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1611) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1611) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1611) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1611) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1611) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1611) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1611) CFA_SP SP+-6
          CFI (cfiCond1611) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1612 Using cfiCommon0
          CFI (cfiCond1612) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1612) Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_191
          CFI (cfiCond1612) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1612) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1612) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1612) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1612) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1612) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1612) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1612) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1612) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1612) CFA_SP SP+-6
          CFI (cfiCond1612) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1613 Using cfiCommon0
          CFI (cfiCond1613) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1613) Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_192
          CFI (cfiCond1613) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1613) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1613) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1613) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1613) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1613) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1613) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1613) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1613) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1613) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1613) CFA_SP SP+-6
          CFI (cfiCond1613) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1614 Using cfiCommon0
          CFI (cfiCond1614) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1614) Conditional ??CrossCallReturnLabel_665, ??CrossCallReturnLabel_303, ??CrossCallReturnLabel_562
          CFI (cfiCond1614) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1614) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1614) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1614) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1614) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1614) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1614) CFA_SP SP+-6
          CFI (cfiCond1614) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1615 Using cfiCommon0
          CFI (cfiCond1615) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1615) Conditional ??CrossCallReturnLabel_665, ??CrossCallReturnLabel_303, ??CrossCallReturnLabel_563
          CFI (cfiCond1615) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1615) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1615) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1615) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1615) CFA_SP SP+-6
          CFI (cfiCond1615) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1616 Using cfiCommon0
          CFI (cfiCond1616) Function ZDO_ParseEPListRsp
          CFI (cfiCond1616) Conditional ??CrossCallReturnLabel_665, ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_186
          CFI (cfiCond1616) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1616) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1616) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1616) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1616) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1616) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1616) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1616) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1616) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1616) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1616) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1616) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1616) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1616) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1616) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1616) CFA_SP SP+-6
          CFI (cfiCond1616) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1617 Using cfiCommon0
          CFI (cfiCond1617) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1617) Conditional ??CrossCallReturnLabel_665, ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_187
          CFI (cfiCond1617) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1617) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1617) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1617) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1617) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1617) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1617) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1617) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1617) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1617) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1617) CFA_SP SP+-6
          CFI (cfiCond1617) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1618 Using cfiCommon0
          CFI (cfiCond1618) Function ZDO_ParseEndDeviceTimeoutRsp
          CFI (cfiCond1618) Conditional ??CrossCallReturnLabel_665, ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_188
          CFI (cfiCond1618) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1618) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1618) CFA_SP SP+-11
          CFI Block cfiPicker1619 Using cfiCommon1
          CFI (cfiPicker1619) NoFunction
          CFI (cfiPicker1619) Picker
        ADD     A,#0x13
        MOV     DPL,A
        CLR     A
        RET
          CFI EndBlock cfiCond1588
          CFI EndBlock cfiCond1589
          CFI EndBlock cfiCond1590
          CFI EndBlock cfiCond1591
          CFI EndBlock cfiCond1592
          CFI EndBlock cfiCond1593
          CFI EndBlock cfiCond1594
          CFI EndBlock cfiCond1595
          CFI EndBlock cfiCond1596
          CFI EndBlock cfiCond1597
          CFI EndBlock cfiCond1598
          CFI EndBlock cfiCond1599
          CFI EndBlock cfiCond1600
          CFI EndBlock cfiCond1601
          CFI EndBlock cfiCond1602
          CFI EndBlock cfiCond1603
          CFI EndBlock cfiCond1604
          CFI EndBlock cfiCond1605
          CFI EndBlock cfiCond1606
          CFI EndBlock cfiCond1607
          CFI EndBlock cfiCond1608
          CFI EndBlock cfiCond1609
          CFI EndBlock cfiCond1610
          CFI EndBlock cfiCond1611
          CFI EndBlock cfiCond1612
          CFI EndBlock cfiCond1613
          CFI EndBlock cfiCond1614
          CFI EndBlock cfiCond1615
          CFI EndBlock cfiCond1616
          CFI EndBlock cfiCond1617
          CFI EndBlock cfiCond1618
          CFI EndBlock cfiPicker1619

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine55:
          CFI Block cfiCond1620 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_86
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1621 Using cfiCommon0
          CFI (cfiCond1621) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1621) Conditional ??CrossCallReturnLabel_85
          CFI (cfiCond1621) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1621) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1621) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1621) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1621) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1621) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1621) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1621) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1621) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1621) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1621) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1621) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1621) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1621) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1621) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1621) CFA_SP SP+-2
          CFI (cfiCond1621) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker1622 Using cfiCommon1
          CFI (cfiPicker1622) NoFunction
          CFI (cfiPicker1622) Picker
        LCALL   ?Subroutine162 & 0xFFFF
??CrossCallReturnLabel_275:
        RET
          CFI EndBlock cfiCond1620
          CFI EndBlock cfiCond1621
          CFI EndBlock cfiPicker1622

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine162:
          CFI Block cfiCond1623 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_60
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1624 Using cfiCommon0
          CFI (cfiCond1624) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1624) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_61
          CFI (cfiCond1624) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1624) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1624) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1624) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1624) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1624) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1624) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1624) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1624) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1624) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1624) CFA_SP SP+-4
          CFI (cfiCond1624) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1625 Using cfiCommon0
          CFI (cfiCond1625) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1625) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_86
          CFI (cfiCond1625) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1625) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1625) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1625) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1625) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1625) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1625) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1625) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1625) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1625) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1625) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1625) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1625) CFA_SP SP+-4
          CFI (cfiCond1625) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1626 Using cfiCommon0
          CFI (cfiCond1626) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1626) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_85
          CFI (cfiCond1626) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1626) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1626) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1626) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1626) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1626) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1626) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1626) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1626) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1626) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1626) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1626) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1626) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1626) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1626) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1626) CFA_SP SP+-4
          CFI (cfiCond1626) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker1627 Using cfiCommon1
          CFI (cfiPicker1627) NoFunction
          CFI (cfiPicker1627) Picker
        MOVX    @DPTR,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        RET
          CFI EndBlock cfiCond1623
          CFI EndBlock cfiCond1624
          CFI EndBlock cfiCond1625
          CFI EndBlock cfiCond1626
          CFI EndBlock cfiPicker1627

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine24:
          CFI Block cfiCond1628 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_25
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1629 Using cfiCommon0
          CFI (cfiCond1629) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1629) Conditional ??CrossCallReturnLabel_26
          CFI (cfiCond1629) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1629) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1629) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1629) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1629) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1629) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1629) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1629) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1629) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1629) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1629) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1629) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1629) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1629) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1629) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1629) CFA_SP SP+-2
          CFI (cfiCond1629) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker1630 Using cfiCommon1
          CFI (cfiPicker1630) NoFunction
          CFI (cfiPicker1630) Picker
        LCALL   ?Subroutine176 & 0xFFFF
??CrossCallReturnLabel_691:
        MOV     A,R2
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        LCALL   ?Subroutine157 & 0xFFFF
??CrossCallReturnLabel_265:
        INC     DPTR
        MOV     A,?V2
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond1628
          CFI EndBlock cfiCond1629
          CFI EndBlock cfiPicker1630
// 3198 
// 3199 /*********************************************************************
// 3200  * @fn          ZDO_ParseSimpleDescBuf
// 3201  *
// 3202  * @brief       Parse a byte sequence representation of a Simple Descriptor.
// 3203  *
// 3204  * @param       buf  - pointer to a byte array representing a Simple Desc.
// 3205  * @param       desc - SimpleDescriptionFormat_t *
// 3206  *
// 3207  *              This routine allocates storage for the cluster IDs because
// 3208  *              they are 16-bit and need to be aligned to be properly processed.
// 3209  *              This routine returns non-zero if an allocation fails.
// 3210  *
// 3211  *              NOTE: This means that the caller or user of the input structure
// 3212  *                    is responsible for freeing the memory
// 3213  *
// 3214  * @return      0: success
// 3215  *              1: failure due to malloc failure.
// 3216  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3217 uint8 ZDO_ParseSimpleDescBuf( uint8 *buf, SimpleDescriptionFormat_t *desc )
ZDO_ParseSimpleDescBuf:
          CFI Block cfiBlock1631 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
        CODE
// 3218 {
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0,R4
        MOV     ?V1,R5
// 3219   uint8 num, i;
// 3220 
// 3221   desc->EndPoint = *buf++;
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine267_0 & 0xFFFF
??CrossCallReturnLabel_678:
        LCALL   ?Subroutine45 & 0xFFFF
// 3222   desc->AppProfId = BUILD_UINT16( buf[0], buf[1] );
??CrossCallReturnLabel_70:
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_682:
        LCALL   ?Subroutine52 & 0xFFFF
// 3223   buf += 2;
??CrossCallReturnLabel_81:
        JNC     ??ZDO_ParseSimpleDescBuf_0
        INC     R7
// 3224   desc->AppDeviceId = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_0:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_683:
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine34 & 0xFFFF
// 3225   buf += 2;
// 3226   desc->AppDevVer = *buf >> 4;
??CrossCallReturnLabel_46:
        SWAP    A
        ANL     A,#0xf
// 3227 
// 3228   desc->Reserved = 0;
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine22 & 0xFFFF
// 3229   buf++;
// 3230 
// 3231   // move in input cluster list (if any). allocate aligned memory.
// 3232   num = desc->AppNumInClusters = *buf++;
??CrossCallReturnLabel_24:
        MOV     ?V4,A
        MOV     A,R6
        ADD     A,#0x4
        MOV     R6,A
        JNC     ??ZDO_ParseSimpleDescBuf_1
        INC     R7
??ZDO_ParseSimpleDescBuf_1:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V4
        MOVX    @DPTR,A
// 3233   if ( num )
        JZ      ??ZDO_ParseSimpleDescBuf_2
// 3234   {
// 3235     if (!(desc->pAppInClusterList = (uint16 *)osal_mem_alloc(num*sizeof(uint16))))
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ??Subroutine266_0 & 0xFFFF
??CrossCallReturnLabel_672:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     A,?V0
        ADD     A,#0x7
        MOV     R0,A
        CLR     A
        ADDC    A,?V1
        MOV     R1,A
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ??Subroutine237_0 & 0xFFFF
??CrossCallReturnLabel_472:
        JNZ     $+5
        LJMP    ??ZDO_ParseSimpleDescBuf_3 & 0xFFFF
// 3236     {
// 3237       // malloc failed. we're done.
// 3238       return 1;
// 3239     }
// 3240     for (i=0; i<num; ++i)
        MOV     R2,#0x0
        SJMP    ??ZDO_ParseSimpleDescBuf_4
// 3241     {
// 3242       desc->pAppInClusterList[i] = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_5:
        LCALL   ?Subroutine63 & 0xFFFF
// 3243       buf += 2;
// 3244     }
??CrossCallReturnLabel_97:
        LCALL   ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_684:
        JNC     ??ZDO_ParseSimpleDescBuf_6
        INC     R7
??ZDO_ParseSimpleDescBuf_6:
        INC     R2
??ZDO_ParseSimpleDescBuf_4:
        MOV     A,R2
        CLR     C
        SUBB    A,?V4
        JC      ??ZDO_ParseSimpleDescBuf_5
// 3245   }
// 3246 
// 3247   // move in output cluster list (if any). allocate aligned memory.
// 3248   num = desc->AppNumOutClusters = *buf++;
??ZDO_ParseSimpleDescBuf_2:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     ?V2,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3249   if (num)
        JZ      ??ZDO_ParseSimpleDescBuf_7
// 3250   {
// 3251     if (!(desc->pAppOutClusterList = (uint16 *)osal_mem_alloc(num*sizeof(uint16))))
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ??Subroutine266_0 & 0xFFFF
??CrossCallReturnLabel_673:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     R0,?V4
        MOV     R1,?V5
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine245_0 & 0xFFFF
??CrossCallReturnLabel_519:
        JNZ     ??ZDO_ParseSimpleDescBuf_8
// 3252     {
// 3253       // malloc failed. free input cluster list memory if there is any
// 3254       if ( desc->pAppInClusterList != NULL )
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine234_0 & 0xFFFF
??CrossCallReturnLabel_443:
        JZ      ??ZDO_ParseSimpleDescBuf_3
// 3255       {
// 3256         osal_mem_free(desc->pAppInClusterList);
        MOV     A,?V0
        ADD     A,#0x7
        MOV     ?V2,A
        CLR     A
        ADDC    A,?V1
        MOV     ?V3,A
        ; Setup parameters for call to function osal_mem_free
        MOV     DPL,?V2
        MOV     DPH,A
        LCALL   ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_502:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 3257 
// 3258         desc->pAppInClusterList = NULL;
        MOV     DPL,?V2
        MOV     DPH,?V3
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 3259       }
// 3260       return 1;
??ZDO_ParseSimpleDescBuf_3:
        MOV     R1,#0x1
        SJMP    ??ZDO_ParseSimpleDescBuf_9
// 3261     }
// 3262     for (i=0; i<num; ++i)
??ZDO_ParseSimpleDescBuf_8:
        MOV     R2,#0x0
        SJMP    ??ZDO_ParseSimpleDescBuf_10
// 3263     {
// 3264       desc->pAppOutClusterList[i] = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_11:
        LCALL   ?Subroutine63 & 0xFFFF
// 3265       buf += 2;
// 3266     }
??CrossCallReturnLabel_98:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_685:
        JNC     ??ZDO_ParseSimpleDescBuf_12
        INC     R7
??ZDO_ParseSimpleDescBuf_12:
        INC     R2
??ZDO_ParseSimpleDescBuf_10:
        MOV     A,R2
        CLR     C
        SUBB    A,?V2
        JC      ??ZDO_ParseSimpleDescBuf_11
// 3267   }
// 3268   return 0;
??ZDO_ParseSimpleDescBuf_7:
        MOV     R1,#0x0
??ZDO_ParseSimpleDescBuf_9:
        LJMP    ??Subroutine253_0 & 0xFFFF
// 3269 }
          CFI EndBlock cfiBlock1631

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine138:
          CFI Block cfiCond1632 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_674
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1633 Using cfiCommon0
          CFI (cfiCond1633) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1633) Conditional ??CrossCallReturnLabel_675
          CFI (cfiCond1633) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1633) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1633) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1633) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1633) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1633) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1633) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1633) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1633) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1633) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1633) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1633) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1633) CFA_SP SP+-2
          CFI (cfiCond1633) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1634 Using cfiCommon1
          CFI (cfiPicker1634) NoFunction
          CFI (cfiPicker1634) Picker
        MOV     R2,A
          CFI EndBlock cfiCond1632
          CFI EndBlock cfiCond1633
          CFI EndBlock cfiPicker1634
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        REQUIRE ??Subroutine266_0
        ; // Fall through to label ??Subroutine266_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine266_0:
          CFI Block cfiCond1635 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_668
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1636 Using cfiCommon0
          CFI (cfiCond1636) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1636) Conditional ??CrossCallReturnLabel_669
          CFI (cfiCond1636) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1636) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1636) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1636) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1636) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1636) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1636) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1636) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1636) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1636) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1636) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1636) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1636) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1636) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1636) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1636) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1636) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1636) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1636) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1636) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1636) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1636) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1636) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1636) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1636) CFA_SP SP+-2
          CFI (cfiCond1636) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1637 Using cfiCommon0
          CFI (cfiCond1637) Function ZDO_CopyMatchInfo
          CFI (cfiCond1637) Conditional ??CrossCallReturnLabel_670
          CFI (cfiCond1637) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1637) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1637) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1637) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1637) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1637) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1637) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1637) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1637) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1637) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1637) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1637) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1637) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1637) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1637) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1637) CFA_SP SP+-2
          CFI (cfiCond1637) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1638 Using cfiCommon0
          CFI (cfiCond1638) Function ZDO_CopyMatchInfo
          CFI (cfiCond1638) Conditional ??CrossCallReturnLabel_671
          CFI (cfiCond1638) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1638) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1638) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1638) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1638) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1638) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1638) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1638) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1638) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1638) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1638) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1638) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1638) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1638) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1638) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1638) CFA_SP SP+-2
          CFI (cfiCond1638) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1639 Using cfiCommon0
          CFI (cfiCond1639) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1639) Conditional ??CrossCallReturnLabel_672
          CFI (cfiCond1639) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1639) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1639) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1639) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1639) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1639) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1639) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1639) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1639) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1639) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1639) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1639) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1639) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1639) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1639) CFA_SP SP+-2
          CFI (cfiCond1639) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1640 Using cfiCommon0
          CFI (cfiCond1640) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1640) Conditional ??CrossCallReturnLabel_673
          CFI (cfiCond1640) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1640) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1640) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1640) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1640) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1640) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1640) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1640) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1640) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1640) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1640) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1640) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1640) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1640) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1640) CFA_SP SP+-2
          CFI (cfiCond1640) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1641 Using cfiCommon0
          CFI (cfiCond1641) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1641) Conditional ??CrossCallReturnLabel_674
          CFI (cfiCond1641) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1641) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1641) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1641) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1641) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1641) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1641) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1641) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1641) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1641) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1641) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1641) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1641) CFA_SP SP+-2
          CFI (cfiCond1641) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1642 Using cfiCommon0
          CFI (cfiCond1642) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1642) Conditional ??CrossCallReturnLabel_675
          CFI (cfiCond1642) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1642) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1642) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1642) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1642) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1642) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1642) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1642) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1642) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1642) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1642) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1642) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1642) CFA_SP SP+-2
          CFI (cfiCond1642) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1643 Using cfiCommon1
          CFI (cfiPicker1643) NoFunction
          CFI (cfiPicker1643) Picker
        ADD     A,0xE0 /* A   */
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        RET
          CFI EndBlock cfiCond1635
          CFI EndBlock cfiCond1636
          CFI EndBlock cfiCond1637
          CFI EndBlock cfiCond1638
          CFI EndBlock cfiCond1639
          CFI EndBlock cfiCond1640
          CFI EndBlock cfiCond1641
          CFI EndBlock cfiCond1642
          CFI EndBlock cfiPicker1643

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine111:
          CFI Block cfiCond1644 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_679
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1645 Using cfiCommon0
          CFI (cfiCond1645) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1645) Conditional ??CrossCallReturnLabel_680
          CFI (cfiCond1645) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1645) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1645) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1645) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1645) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1645) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1645) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1645) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1645) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1645) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1645) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1645) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1645) CFA_SP SP+-2
          CFI (cfiCond1645) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1646 Using cfiCommon1
          CFI (cfiPicker1646) NoFunction
          CFI (cfiPicker1646) Picker
        INC     DPTR
          CFI EndBlock cfiCond1644
          CFI EndBlock cfiCond1645
          CFI EndBlock cfiPicker1646
        REQUIRE ??Subroutine267_0
        ; // Fall through to label ??Subroutine267_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine267_0:
          CFI Block cfiCond1647 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_676
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1648 Using cfiCommon0
          CFI (cfiCond1648) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1648) Conditional ??CrossCallReturnLabel_677
          CFI (cfiCond1648) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1648) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1648) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1648) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1648) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1648) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1648) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1648) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1648) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1648) CFA_SP SP+-2
          CFI (cfiCond1648) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1649 Using cfiCommon0
          CFI (cfiCond1649) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1649) Conditional ??CrossCallReturnLabel_678
          CFI (cfiCond1649) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1649) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1649) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1649) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1649) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1649) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1649) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1649) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1649) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1649) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1649) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1649) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1649) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1649) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1649) CFA_SP SP+-2
          CFI (cfiCond1649) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1650 Using cfiCommon0
          CFI (cfiCond1650) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1650) Conditional ??CrossCallReturnLabel_679
          CFI (cfiCond1650) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1650) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1650) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1650) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1650) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1650) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1650) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1650) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1650) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1650) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1650) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1650) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1650) CFA_SP SP+-2
          CFI (cfiCond1650) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1651 Using cfiCommon0
          CFI (cfiCond1651) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1651) Conditional ??CrossCallReturnLabel_680
          CFI (cfiCond1651) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1651) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1651) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1651) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1651) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1651) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1651) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1651) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1651) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1651) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1651) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1651) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1651) CFA_SP SP+-2
          CFI (cfiCond1651) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1652 Using cfiCommon1
          CFI (cfiPicker1652) NoFunction
          CFI (cfiPicker1652) Picker
        MOVX    A,@DPTR
        MOV     DPL,R4
        MOV     DPH,R5
        RET
          CFI EndBlock cfiCond1647
          CFI EndBlock cfiCond1648
          CFI EndBlock cfiCond1649
          CFI EndBlock cfiCond1650
          CFI EndBlock cfiCond1651
          CFI EndBlock cfiPicker1652

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine84:
          CFI Block cfiCond1653 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_682
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1654 Using cfiCommon0
          CFI (cfiCond1654) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1654) Conditional ??CrossCallReturnLabel_683
          CFI (cfiCond1654) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1654) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1654) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1654) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1654) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1654) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1654) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1654) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1654) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1654) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1654) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1654) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1654) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1654) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1654) CFA_SP SP+-2
          CFI (cfiCond1654) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1655 Using cfiCommon1
          CFI (cfiPicker1655) NoFunction
          CFI (cfiPicker1655) Picker
        MOVX    A,@DPTR
        MOV     R2,A
          CFI EndBlock cfiCond1653
          CFI EndBlock cfiCond1654
          CFI EndBlock cfiPicker1655
        REQUIRE ??Subroutine268_0
        ; // Fall through to label ??Subroutine268_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine268_0:
          CFI Block cfiCond1656 Using cfiCommon0
          CFI Function ZDO_ParseServerDiscRsp
          CFI Conditional ??CrossCallReturnLabel_681
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1657 Using cfiCommon0
          CFI (cfiCond1657) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1657) Conditional ??CrossCallReturnLabel_682
          CFI (cfiCond1657) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1657) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1657) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1657) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1657) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1657) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1657) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1657) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1657) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1657) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1657) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1657) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1657) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1657) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1657) CFA_SP SP+-2
          CFI (cfiCond1657) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1658 Using cfiCommon0
          CFI (cfiCond1658) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1658) Conditional ??CrossCallReturnLabel_683
          CFI (cfiCond1658) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1658) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1658) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1658) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1658) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1658) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1658) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1658) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1658) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1658) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1658) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1658) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1658) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1658) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1658) CFA_SP SP+-2
          CFI (cfiCond1658) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1659 Using cfiCommon1
          CFI (cfiPicker1659) NoFunction
          CFI (cfiPicker1659) Picker
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        RET
          CFI EndBlock cfiCond1656
          CFI EndBlock cfiCond1657
          CFI EndBlock cfiCond1658
          CFI EndBlock cfiPicker1659

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine63:
          CFI Block cfiCond1660 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_97
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1661 Using cfiCommon0
          CFI (cfiCond1661) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1661) Conditional ??CrossCallReturnLabel_98
          CFI (cfiCond1661) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1661) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1661) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1661) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1661) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1661) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1661) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1661) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1661) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1661) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1661) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1661) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1661) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1661) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1661) CFA_SP SP+-2
          CFI (cfiCond1661) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1662 Using cfiCommon1
          CFI (cfiPicker1662) NoFunction
          CFI (cfiPicker1662) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R4,A
        LCALL   ?Subroutine176 & 0xFFFF
??CrossCallReturnLabel_692:
        MOV     A,R4
        ADD     A,R0
        CLR     A
        ADDC    A,R1
        MOV     R5,A
        MOV     A,R2
        ADD     A,0xE0 /* A   */
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        RET
          CFI EndBlock cfiCond1660
          CFI EndBlock cfiCond1661
          CFI EndBlock cfiPicker1662

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine176:
          CFI Block cfiCond1663 Using cfiCommon0
          CFI Function ZDO_ProcessEndDeviceTimeoutReq
          CFI Conditional ??CrossCallReturnLabel_690
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1664 Using cfiCommon0
          CFI (cfiCond1664) Function ZDO_ParseEPListRsp
          CFI (cfiCond1664) Conditional ??CrossCallReturnLabel_691, ??CrossCallReturnLabel_25
          CFI (cfiCond1664) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1664) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1664) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1664) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1664) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1664) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1664) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1664) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1664) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1664) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1664) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1664) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1664) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1664) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1664) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1664) CFA_SP SP+-4
          CFI (cfiCond1664) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1665 Using cfiCommon0
          CFI (cfiCond1665) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1665) Conditional ??CrossCallReturnLabel_691, ??CrossCallReturnLabel_26
          CFI (cfiCond1665) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1665) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1665) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1665) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1665) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1665) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1665) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1665) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1665) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1665) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1665) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1665) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1665) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1665) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1665) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1665) CFA_SP SP+-4
          CFI (cfiCond1665) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1666 Using cfiCommon0
          CFI (cfiCond1666) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1666) Conditional ??CrossCallReturnLabel_692, ??CrossCallReturnLabel_97
          CFI (cfiCond1666) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1666) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1666) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1666) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1666) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1666) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1666) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1666) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1666) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1666) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1666) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1666) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1666) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1666) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1666) CFA_SP SP+-4
          CFI (cfiCond1666) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1667 Using cfiCommon0
          CFI (cfiCond1667) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1667) Conditional ??CrossCallReturnLabel_692, ??CrossCallReturnLabel_98
          CFI (cfiCond1667) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1667) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1667) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1667) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1667) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1667) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1667) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1667) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1667) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1667) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1667) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1667) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1667) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1667) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1667) CFA_SP SP+-4
          CFI (cfiCond1667) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1668 Using cfiCommon0
          CFI (cfiCond1668) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1668) Conditional ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_688
          CFI (cfiCond1668) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1668) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1668) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1668) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1668) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1668) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1668) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1668) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1668) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1668) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1668) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1668) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1668) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1668) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1668) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1668) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1668) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1668) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1668) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1668) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1668) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1668) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1668) CFA_SP SP+-4
          CFI (cfiCond1668) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1669 Using cfiCommon0
          CFI (cfiCond1669) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1669) Conditional ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_689
          CFI (cfiCond1669) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1669) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1669) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1669) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1669) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1669) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1669) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1669) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1669) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1669) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1669) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1669) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1669) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1669) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1669) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1669) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1669) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1669) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1669) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1669) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1669) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1669) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1669) CFA_SP SP+-4
          CFI (cfiCond1669) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1670 Using cfiCommon0
          CFI (cfiCond1670) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1670) Conditional ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_687
          CFI (cfiCond1670) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1670) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1670) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1670) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1670) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1670) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1670) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1670) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1670) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1670) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1670) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1670) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1670) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1670) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1670) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1670) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1670) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1670) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1670) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1670) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1670) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1670) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1670) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1670) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1670) CFA_SP SP+-4
          CFI (cfiCond1670) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker1671 Using cfiCommon1
          CFI (cfiPicker1671) NoFunction
          CFI (cfiPicker1671) Picker
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        CLR     A
        XCH     A,R0
        MOV     R1,A
        RET
          CFI EndBlock cfiCond1663
          CFI EndBlock cfiCond1664
          CFI EndBlock cfiCond1665
          CFI EndBlock cfiCond1666
          CFI EndBlock cfiCond1667
          CFI EndBlock cfiCond1668
          CFI EndBlock cfiCond1669
          CFI EndBlock cfiCond1670
          CFI EndBlock cfiPicker1671

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine45:
          CFI Block cfiCond1672 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_69
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1673 Using cfiCommon0
          CFI (cfiCond1673) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1673) Conditional ??CrossCallReturnLabel_70
          CFI (cfiCond1673) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1673) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1673) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1673) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1673) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1673) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1673) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1673) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1673) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1673) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1673) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1673) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1673) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1673) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1673) CFA_SP SP+-2
          CFI (cfiCond1673) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1674 Using cfiCommon1
          CFI (cfiPicker1674) NoFunction
          CFI (cfiPicker1674) Picker
        LCALL   ?Subroutine198 & 0xFFFF
??CrossCallReturnLabel_321:
        MOV     R6,DPL
        MOV     R7,DPH
        RET
          CFI EndBlock cfiCond1672
          CFI EndBlock cfiCond1673
          CFI EndBlock cfiPicker1674

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine198:
          CFI Block cfiCond1675 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_83
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1676 Using cfiCommon0
          CFI (cfiCond1676) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1676) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_84
          CFI (cfiCond1676) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1676) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1676) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1676) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1676) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1676) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1676) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1676) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1676) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1676) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1676) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1676) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1676) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1676) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1676) CFA_SP SP+-4
          CFI (cfiCond1676) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1677 Using cfiCommon0
          CFI (cfiCond1677) Function ZDO_ParseAddrRsp
          CFI (cfiCond1677) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_69
          CFI (cfiCond1677) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1677) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1677) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1677) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1677) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1677) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1677) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1677) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1677) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1677) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1677) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1677) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1677) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1677) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1677) CFA_SP SP+-4
          CFI (cfiCond1677) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1678 Using cfiCommon0
          CFI (cfiCond1678) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1678) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_70
          CFI (cfiCond1678) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1678) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1678) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1678) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1678) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1678) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1678) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1678) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1678) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1678) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1678) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1678) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1678) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1678) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1678) CFA_SP SP+-4
          CFI (cfiCond1678) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1679 Using cfiCommon0
          CFI (cfiCond1679) Function ZDO_ParseEPListRsp
          CFI (cfiCond1679) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_25
          CFI (cfiCond1679) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1679) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1679) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1679) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1679) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1679) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1679) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1679) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1679) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1679) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1679) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1679) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1679) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1679) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1679) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1679) CFA_SP SP+-6
          CFI (cfiCond1679) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1680 Using cfiCommon0
          CFI (cfiCond1680) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1680) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_26
          CFI (cfiCond1680) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1680) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1680) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1680) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1680) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1680) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1680) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1680) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1680) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1680) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1680) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1680) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1680) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1680) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1680) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1680) CFA_SP SP+-6
          CFI (cfiCond1680) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1681 Using cfiCommon0
          CFI (cfiCond1681) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1681) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_45
          CFI (cfiCond1681) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1681) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1681) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1681) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1681) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1681) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1681) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1681) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1681) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1681) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1681) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1681) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1681) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1681) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1681) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1681) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1681) CFA_SP SP+-6
          CFI (cfiCond1681) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1682 Using cfiCommon0
          CFI (cfiCond1682) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1682) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_46
          CFI (cfiCond1682) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1682) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1682) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1682) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1682) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1682) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1682) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1682) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1682) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1682) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1682) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1682) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1682) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1682) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1682) CFA_SP SP+-6
          CFI (cfiCond1682) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1683 Using cfiCommon1
          CFI (cfiPicker1683) NoFunction
          CFI (cfiPicker1683) Picker
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        RET
          CFI EndBlock cfiCond1675
          CFI EndBlock cfiCond1676
          CFI EndBlock cfiCond1677
          CFI EndBlock cfiCond1678
          CFI EndBlock cfiCond1679
          CFI EndBlock cfiCond1680
          CFI EndBlock cfiCond1681
          CFI EndBlock cfiCond1682
          CFI EndBlock cfiPicker1683

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine34:
          CFI Block cfiCond1684 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_45
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1685 Using cfiCommon0
          CFI (cfiCond1685) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1685) Conditional ??CrossCallReturnLabel_46
          CFI (cfiCond1685) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1685) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1685) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1685) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1685) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1685) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1685) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1685) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1685) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1685) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1685) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1685) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1685) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1685) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1685) CFA_SP SP+-2
          CFI (cfiCond1685) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1686 Using cfiCommon1
          CFI (cfiPicker1686) NoFunction
          CFI (cfiPicker1686) Picker
        LCALL   ?Subroutine157 & 0xFFFF
??CrossCallReturnLabel_266:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1684
          CFI EndBlock cfiCond1685
          CFI EndBlock cfiPicker1686

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine157:
          CFI Block cfiCond1687 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_25
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1688 Using cfiCommon0
          CFI (cfiCond1688) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1688) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_26
          CFI (cfiCond1688) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1688) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1688) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1688) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1688) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1688) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1688) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1688) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1688) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1688) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1688) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1688) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1688) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1688) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1688) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1688) CFA_SP SP+-4
          CFI (cfiCond1688) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1689 Using cfiCommon0
          CFI (cfiCond1689) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1689) Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_45
          CFI (cfiCond1689) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1689) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1689) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1689) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1689) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1689) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1689) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1689) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1689) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1689) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1689) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1689) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1689) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1689) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1689) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1689) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1689) CFA_SP SP+-4
          CFI (cfiCond1689) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1690 Using cfiCommon0
          CFI (cfiCond1690) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1690) Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_46
          CFI (cfiCond1690) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1690) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1690) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1690) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1690) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1690) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1690) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1690) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1690) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1690) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1690) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1690) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1690) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1690) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1690) CFA_SP SP+-4
          CFI (cfiCond1690) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1691 Using cfiCommon1
          CFI (cfiPicker1691) NoFunction
          CFI (cfiPicker1691) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine198 & 0xFFFF
??CrossCallReturnLabel_320:
        INC     DPTR
        RET
          CFI EndBlock cfiCond1687
          CFI EndBlock cfiCond1688
          CFI EndBlock cfiCond1689
          CFI EndBlock cfiCond1690
          CFI EndBlock cfiPicker1691

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine27:
          CFI Block cfiCond1692 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_684
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1693 Using cfiCommon0
          CFI (cfiCond1693) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1693) Conditional ??CrossCallReturnLabel_685
          CFI (cfiCond1693) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1693) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1693) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1693) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1693) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1693) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1693) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1693) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1693) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1693) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1693) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1693) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1693) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1693) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1693) CFA_SP SP+-2
          CFI (cfiCond1693) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1694 Using cfiCommon1
          CFI (cfiPicker1694) NoFunction
          CFI (cfiPicker1694) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R3,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     DPL,R3
        MOV     DPH,A
        MOV     A,R4
          CFI EndBlock cfiCond1692
          CFI EndBlock cfiCond1693
          CFI EndBlock cfiPicker1694
        REQUIRE ??Subroutine269_0
        ; // Fall through to label ??Subroutine269_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine269_0:
          CFI Block cfiCond1695 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_686
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1696 Using cfiCommon0
          CFI (cfiCond1696) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1696) Conditional ??CrossCallReturnLabel_684
          CFI (cfiCond1696) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1696) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1696) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1696) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1696) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1696) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1696) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1696) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1696) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1696) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1696) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1696) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1696) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1696) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1696) CFA_SP SP+-2
          CFI (cfiCond1696) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1697 Using cfiCommon0
          CFI (cfiCond1697) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1697) Conditional ??CrossCallReturnLabel_685
          CFI (cfiCond1697) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1697) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1697) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1697) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1697) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1697) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1697) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1697) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1697) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1697) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1697) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1697) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1697) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1697) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1697) CFA_SP SP+-2
          CFI (cfiCond1697) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1698 Using cfiCommon1
          CFI (cfiPicker1698) NoFunction
          CFI (cfiPicker1698) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        RET
          CFI EndBlock cfiCond1695
          CFI EndBlock cfiCond1696
          CFI EndBlock cfiCond1697
          CFI EndBlock cfiPicker1698
// 3270 
// 3271 /*********************************************************************
// 3272  * @fn          ZDO_ParseDeviceAnnce
// 3273  *
// 3274  * @brief       Parse a Device Announce message.
// 3275  *
// 3276  * @param       inMsg - Incoming message
// 3277  * @param       pAnnce - place to put the parsed information
// 3278  *
// 3279  * @return      none
// 3280  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3281 void ZDO_ParseDeviceAnnce( zdoIncomingMsg_t *inMsg, ZDO_DeviceAnnce_t *pAnnce )
ZDO_ParseDeviceAnnce:
          CFI Block cfiBlock1699 Using cfiCommon0
          CFI Function ZDO_ParseDeviceAnnce
        CODE
// 3282 {
        FUNCALL ZDO_ParseDeviceAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     ?V0,R4
        MOV     ?V1,R5
// 3283   uint8 *msg;
// 3284 
// 3285   // Parse incoming message
// 3286   msg = inMsg->asdu;
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_187:
        LCALL   ?Subroutine81 & 0xFFFF
// 3287   pAnnce->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_133:
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_642:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine52 & 0xFFFF
// 3288   msg += 2;
??CrossCallReturnLabel_82:
        JNC     ??ZDO_ParseDeviceAnnce_0
        INC     R7
// 3289   osal_cpyExtAddr( pAnnce->extAddr, msg );
??ZDO_ParseDeviceAnnce_0:
        ; Setup parameters for call to function sAddrExtCpy
        LCALL   ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_608:
        ADDC    A,?V1
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 3290   msg += Z_EXTADDR_LEN;
// 3291   pAnnce->capabilities = *msg;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_144:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3292 }
        LJMP    ??Subroutine210_0 & 0xFFFF
          CFI EndBlock cfiBlock1699

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine119:
          CFI Block cfiCond1700 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_186
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1701 Using cfiCommon0
          CFI (cfiCond1701) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1701) Conditional ??CrossCallReturnLabel_187
          CFI (cfiCond1701) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1701) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1701) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1701) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1701) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1701) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1701) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1701) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1701) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1701) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1701) CFA_SP SP+-2
          CFI (cfiCond1701) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1702 Using cfiCommon0
          CFI (cfiCond1702) Function ZDO_ParseEndDeviceTimeoutRsp
          CFI (cfiCond1702) Conditional ??CrossCallReturnLabel_188
          CFI (cfiCond1702) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1702) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1702) CFA_SP SP+-7
          CFI Block cfiPicker1703 Using cfiCommon1
          CFI (cfiPicker1703) NoFunction
          CFI (cfiPicker1703) Picker
        LCALL   ?Subroutine185 & 0xFFFF
??CrossCallReturnLabel_304:
        RET
          CFI EndBlock cfiCond1700
          CFI EndBlock cfiCond1701
          CFI EndBlock cfiCond1702
          CFI EndBlock cfiPicker1703

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine185:
          CFI Block cfiCond1704 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_303, ??CrossCallReturnLabel_562
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1705 Using cfiCommon0
          CFI (cfiCond1705) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1705) Conditional ??CrossCallReturnLabel_303, ??CrossCallReturnLabel_563
          CFI (cfiCond1705) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1705) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1705) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1705) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1705) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1705) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1705) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1705) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1705) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1705) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1705) CFA_SP SP+-4
          CFI (cfiCond1705) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1706 Using cfiCommon0
          CFI (cfiCond1706) Function ZDO_ParseEPListRsp
          CFI (cfiCond1706) Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_186
          CFI (cfiCond1706) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1706) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1706) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1706) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1706) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1706) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1706) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1706) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1706) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1706) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1706) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1706) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1706) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1706) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1706) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1706) CFA_SP SP+-4
          CFI (cfiCond1706) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1707 Using cfiCommon0
          CFI (cfiCond1707) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1707) Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_187
          CFI (cfiCond1707) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1707) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1707) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1707) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1707) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1707) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1707) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1707) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1707) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1707) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1707) CFA_SP SP+-4
          CFI (cfiCond1707) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1708 Using cfiCommon0
          CFI (cfiCond1708) Function ZDO_ParseEndDeviceTimeoutRsp
          CFI (cfiCond1708) Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_188
          CFI (cfiCond1708) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1708) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1708) CFA_SP SP+-9
          CFI Block cfiPicker1709 Using cfiCommon1
          CFI (cfiPicker1709) NoFunction
          CFI (cfiPicker1709) Picker
        LCALL   ?Subroutine204 & 0xFFFF
??CrossCallReturnLabel_665:
        ADDC    A,R3
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond1704
          CFI EndBlock cfiCond1705
          CFI EndBlock cfiCond1706
          CFI EndBlock cfiCond1707
          CFI EndBlock cfiCond1708
          CFI EndBlock cfiPicker1709

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine52:
          CFI Block cfiCond1710 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_81
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1711 Using cfiCommon0
          CFI (cfiCond1711) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1711) Conditional ??CrossCallReturnLabel_82
          CFI (cfiCond1711) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1711) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1711) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1711) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1711) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1711) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1711) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1711) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1711) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1711) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1711) CFA_SP SP+-2
          CFI (cfiCond1711) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1712 Using cfiCommon1
          CFI (cfiPicker1712) NoFunction
          CFI (cfiPicker1712) Picker
        LCALL   ??Subroutine222_0 & 0xFFFF
??CrossCallReturnLabel_523:
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        RET
          CFI EndBlock cfiCond1710
          CFI EndBlock cfiCond1711
          CFI EndBlock cfiPicker1712
// 3293 
// 3294 /*********************************************************************
// 3295  * @fn          ZDO_ParseMgmtNwkUpdateNotify
// 3296  *
// 3297  * @brief       This function handles parsing of the incoming Management
// 3298  *              Network Update notify.
// 3299  *
// 3300  * @param       inMsg - incoming message (request)
// 3301  *
// 3302  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3303  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3304  *          by the calling function [osal_mem_free()].
// 3305  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3306 ZDO_MgmtNwkUpdateNotify_t *ZDO_ParseMgmtNwkUpdateNotify( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtNwkUpdateNotify:
          CFI Block cfiBlock1713 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
        CODE
// 3307 {
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 0
// 3308   uint8 status;
// 3309   uint32 scannedChannels = 0;
        MOV     ?V4,#0x0
        MOV     ?V5,#0x0
        MOV     ?V6,#0x0
        MOV     ?V7,#0x0
// 3310   uint16 totalTransmissions = 0;
        MOV     ?V0,#0x0
        MOV     ?V1,#0x0
// 3311   uint16 transmissionFailures = 0;
        MOV     ?V2,#0x0
        MOV     ?V3,#0x0
// 3312   uint8 listCount = 0;
        MOV     ?V11,#0x0
// 3313   uint8 *msg = inMsg->asdu;
        LCALL   ?Subroutine57 & 0xFFFF
// 3314   ZDO_MgmtNwkUpdateNotify_t *pRsp;
// 3315 
// 3316   status = *msg++;
??CrossCallReturnLabel_656:
        MOV     ?V10,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 3317   if ( status == ZSuccess )
        JNZ     ??ZDO_ParseMgmtNwkUpdateNotify_0
// 3318   {
// 3319     scannedChannels = osal_build_uint32( msg, 4 );
        ; Setup parameters for call to function osal_build_uint32
        MOV     R1,#0x4
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??osal_build_uint32::?relay`; Banked call to: osal_build_uint32
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     ?V6,R4
        MOV     ?V7,R5
// 3320     msg += 4;
        MOV     A,R6
        ADD     A,#0x4
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtNwkUpdateNotify_1
        INC     R7
// 3321     totalTransmissions = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtNwkUpdateNotify_1:
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_688:
        MOV     ?V0,A
        CLR     A
        ADDC    A,R1
        MOV     ?V1,A
// 3322     msg += 2;
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtNwkUpdateNotify_2
        INC     R7
// 3323     transmissionFailures = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtNwkUpdateNotify_2:
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_689:
        MOV     ?V2,A
        CLR     A
        ADDC    A,R1
        MOV     ?V3,A
// 3324     msg += 2;
// 3325     listCount = *msg++;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V11,A
        MOV     A,R6
        ADD     A,#0x3
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtNwkUpdateNotify_0
        INC     R7
// 3326   }
// 3327 
// 3328   pRsp = (ZDO_MgmtNwkUpdateNotify_t *)osal_mem_alloc( sizeof ( ZDO_MgmtNwkUpdateNotify_t ) + listCount );
??ZDO_ParseMgmtNwkUpdateNotify_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V11
        LCALL   ??Subroutine258_0 & 0xFFFF
??CrossCallReturnLabel_617:
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V8,R2
        MOV     ?V9,R3
// 3329 
// 3330   if ( pRsp )
        MOV     A,R2
        ORL     A,?V9
        JZ      ??ZDO_ParseMgmtNwkUpdateNotify_3
// 3331   {
// 3332     pRsp->status = status;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V10
        MOVX    @DPTR,A
// 3333     pRsp->scannedChannels = scannedChannels;
        INC     DPTR
        MOV     R0,#?V4
        LCALL   ?L_MOV_TO_X
// 3334     pRsp->totalTransmissions = totalTransmissions;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V1
        LCALL   ?Subroutine16 & 0xFFFF
// 3335     pRsp->transmissionFailures = transmissionFailures;
??CrossCallReturnLabel_11:
        MOV     A,?V2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V3
        LCALL   ?Subroutine16 & 0xFFFF
// 3336     pRsp->listCount = listCount;
??CrossCallReturnLabel_12:
        INC     DPTR
        INC     DPTR
        MOV     A,?V11
        MOVX    @DPTR,A
// 3337 
// 3338     // Allocate a buffer big enough to handle the list.
// 3339     if ( listCount > 0 )
        JZ      ??ZDO_ParseMgmtNwkUpdateNotify_3
// 3340     {
// 3341       osal_memcpy( pRsp->energyValues, msg, listCount );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V0,R6
        MOV     ?V1,R7
        MOV     ?V2,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     R4,?V11
        MOV     R5,#0x0
        LCALL   ?Subroutine187 & 0xFFFF
// 3342     }
// 3343   }
??CrossCallReturnLabel_619:
        ADDC    A,?V9
        MOV     R3,A
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
// 3344 
// 3345   return ( pRsp );
??ZDO_ParseMgmtNwkUpdateNotify_3:
        MOV     R2,?V8
        MOV     R3,?V9
        LJMP    ?Subroutine7 & 0xFFFF
// 3346 }
          CFI EndBlock cfiBlock1713

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine74:
          CFI Block cfiCond1714 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_688
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1715 Using cfiCommon0
          CFI (cfiCond1715) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1715) Conditional ??CrossCallReturnLabel_689
          CFI (cfiCond1715) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1715) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1715) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1715) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1715) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1715) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1715) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1715) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1715) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1715) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1715) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1715) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1715) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1715) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1715) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1715) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1715) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1715) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1715) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1715) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1715) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1715) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1715) CFA_SP SP+-2
          CFI (cfiCond1715) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1716 Using cfiCommon1
          CFI (cfiPicker1716) NoFunction
          CFI (cfiPicker1716) Picker
        MOV     DPL,R6
        MOV     DPH,R7
          CFI EndBlock cfiCond1714
          CFI EndBlock cfiCond1715
          CFI EndBlock cfiPicker1716
        REQUIRE ??Subroutine270_0
        ; // Fall through to label ??Subroutine270_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine270_0:
          CFI Block cfiCond1717 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_687
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1718 Using cfiCommon0
          CFI (cfiCond1718) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1718) Conditional ??CrossCallReturnLabel_688
          CFI (cfiCond1718) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1718) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1718) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1718) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1718) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1718) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1718) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1718) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1718) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1718) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1718) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1718) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1718) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1718) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1718) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1718) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1718) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1718) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1718) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1718) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1718) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1718) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1718) CFA_SP SP+-2
          CFI (cfiCond1718) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1719 Using cfiCommon0
          CFI (cfiCond1719) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1719) Conditional ??CrossCallReturnLabel_689
          CFI (cfiCond1719) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1719) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1719) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1719) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1719) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1719) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1719) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1719) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1719) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1719) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1719) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1719) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1719) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1719) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1719) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1719) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1719) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1719) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1719) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1719) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1719) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1719) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1719) CFA_SP SP+-2
          CFI (cfiCond1719) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1720 Using cfiCommon1
          CFI (cfiPicker1720) NoFunction
          CFI (cfiPicker1720) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        LCALL   ?Subroutine176 & 0xFFFF
??CrossCallReturnLabel_693:
        MOV     A,R2
        ADD     A,R0
        RET
          CFI EndBlock cfiCond1717
          CFI EndBlock cfiCond1718
          CFI EndBlock cfiCond1719
          CFI EndBlock cfiPicker1720

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine16:
          CFI Block cfiCond1721 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_10
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1722 Using cfiCommon0
          CFI (cfiCond1722) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1722) Conditional ??CrossCallReturnLabel_11
          CFI (cfiCond1722) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1722) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1722) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1722) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1722) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1722) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1722) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1722) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1722) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1722) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1722) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1722) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1722) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1722) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1722) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1722) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1722) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1722) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1722) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1722) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1722) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1722) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1722) CFA_SP SP+-2
          CFI (cfiCond1722) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1723 Using cfiCommon0
          CFI (cfiCond1723) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1723) Conditional ??CrossCallReturnLabel_12
          CFI (cfiCond1723) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1723) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1723) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1723) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1723) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1723) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1723) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1723) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1723) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1723) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1723) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1723) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1723) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1723) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1723) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1723) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1723) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1723) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1723) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1723) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1723) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1723) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1723) CFA_SP SP+-2
          CFI (cfiCond1723) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1724 Using cfiCommon1
          CFI (cfiPicker1724) NoFunction
          CFI (cfiPicker1724) Picker
        LCALL   ?Subroutine154 & 0xFFFF
??CrossCallReturnLabel_260:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1721
          CFI EndBlock cfiCond1722
          CFI EndBlock cfiCond1723
          CFI EndBlock cfiPicker1724
// 3347 
// 3348 /*********************************************************************
// 3349  * @fn          ZDO_ParseMgmtNwkUpdateReq
// 3350  *
// 3351  * @brief       This function handles parsing the incoming Management
// 3352  *              Network Update request and starts the request (if needed).
// 3353  *
// 3354  * @param       inMsg - incoming message (request)
// 3355  * @param       pReq - pointer to place to parse message to
// 3356  *
// 3357  * @return      none
// 3358  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3359 void ZDO_ParseMgmtNwkUpdateReq( zdoIncomingMsg_t *inMsg, ZDO_MgmtNwkUpdateReq_t *pReq )
ZDO_ParseMgmtNwkUpdateReq:
          CFI Block cfiBlock1725 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateReq
        CODE
// 3360 {
        FUNCALL ZDO_ParseMgmtNwkUpdateReq, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     ?V0,R4
        MOV     ?V1,R5
// 3361   uint8 *msg = inMsg->asdu;
        LCALL   ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_192:
        LCALL   ?Subroutine93 & 0xFFFF
// 3362 
// 3363   pReq->channelMask = osal_build_uint32( msg, 4 );
??CrossCallReturnLabel_151:
        LCALL   `??osal_build_uint32::?relay`; Banked call to: osal_build_uint32
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ?XSTORE_R0123
// 3364   msg += 4;
// 3365   pReq->scanDuration = *msg++;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3366 
// 3367   if ( pReq->scanDuration <= 0x05 )
        CLR     C
        SUBB    A,#0x6
        JNC     ??ZDO_ParseMgmtNwkUpdateReq_0
// 3368   {
// 3369     // Request is to scan over channelMask
// 3370     pReq->scanCount = *msg;
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine173 & 0xFFFF
// 3371   }
??CrossCallReturnLabel_288:
        SJMP    ??ZDO_ParseMgmtNwkUpdateReq_1
// 3372   else if ( ( pReq->scanDuration == 0xFE ) || ( pReq->scanDuration == 0xFF ) )
??ZDO_ParseMgmtNwkUpdateReq_0:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0xfe
        JZ      ??ZDO_ParseMgmtNwkUpdateReq_2
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        CPL     A
        JNZ     ??ZDO_ParseMgmtNwkUpdateReq_3
// 3373   {
// 3374     // Request is to change Channel (0xFE) or apsChannelMask and NwkManagerAddr (0xFF)
// 3375     pReq->nwkUpdateId = *msg++;
??ZDO_ParseMgmtNwkUpdateReq_2:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_145:
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x6
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtNwkUpdateReq_4
        INC     R7
// 3376 
// 3377     if ( pReq->scanDuration == 0xFF )
??ZDO_ParseMgmtNwkUpdateReq_4:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        CPL     A
        JNZ     ??ZDO_ParseMgmtNwkUpdateReq_3
// 3378     {
// 3379       pReq->nwkManagerAddr = BUILD_UINT16( msg[0], msg[1] );
        LCALL   ?Subroutine68 & 0xFFFF
// 3380     }
// 3381   }
??CrossCallReturnLabel_109:
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
??ZDO_ParseMgmtNwkUpdateReq_1:
        MOVX    @DPTR,A
// 3382 }
??ZDO_ParseMgmtNwkUpdateReq_3:
        LJMP    ??Subroutine210_0 & 0xFFFF
          CFI EndBlock cfiBlock1725

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine93:
          CFI Block cfiCond1726 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_150
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1727 Using cfiCommon0
          CFI (cfiCond1727) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1727) Conditional ??CrossCallReturnLabel_151
          CFI (cfiCond1727) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1727) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1727) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1727) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1727) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1727) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1727) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1727) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1727) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1727) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1727) CFA_SP SP+-2
          CFI (cfiCond1727) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1728 Using cfiCommon1
          CFI (cfiPicker1728) NoFunction
          CFI (cfiPicker1728) Picker
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        ; Setup parameters for call to function osal_build_uint32
        ; Setup parameters for call to function osal_build_uint32
        MOV     R1,#0x4
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        RET
          CFI EndBlock cfiCond1726
          CFI EndBlock cfiCond1727
          CFI EndBlock cfiPicker1728

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine88:
          CFI Block cfiCond1729 Using cfiCommon0
          CFI Function ZDO_ParseDeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_144
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1730 Using cfiCommon0
          CFI (cfiCond1730) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1730) Conditional ??CrossCallReturnLabel_145
          CFI (cfiCond1730) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1730) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1730) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1730) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1730) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1730) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1730) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1730) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1730) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1730) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1730) CFA_SP SP+-2
          CFI (cfiCond1730) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1731 Using cfiCommon1
          CFI (cfiPicker1731) NoFunction
          CFI (cfiPicker1731) Picker
        LCALL   ?Subroutine173 & 0xFFFF
??CrossCallReturnLabel_289:
        INC     DPTR
        RET
          CFI EndBlock cfiCond1729
          CFI EndBlock cfiCond1730
          CFI EndBlock cfiPicker1731

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine173:
          CFI Block cfiCond1732 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateReq
          CFI Conditional ??CrossCallReturnLabel_288
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1733 Using cfiCommon0
          CFI (cfiCond1733) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1733) Conditional ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_144
          CFI (cfiCond1733) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1733) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1733) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1733) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1733) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1733) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1733) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1733) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1733) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1733) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1733) CFA_SP SP+-4
          CFI (cfiCond1733) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1734 Using cfiCommon0
          CFI (cfiCond1734) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1734) Conditional ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_145
          CFI (cfiCond1734) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1734) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1734) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1734) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1734) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1734) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1734) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1734) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1734) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1734) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1734) CFA_SP SP+-4
          CFI (cfiCond1734) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1735 Using cfiCommon1
          CFI (cfiPicker1735) NoFunction
          CFI (cfiPicker1735) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1732
          CFI EndBlock cfiCond1733
          CFI EndBlock cfiCond1734
          CFI EndBlock cfiPicker1735

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine68:
          CFI Block cfiCond1736 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_108
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1737 Using cfiCommon0
          CFI (cfiCond1737) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1737) Conditional ??CrossCallReturnLabel_109
          CFI (cfiCond1737) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1737) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1737) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1737) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1737) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1737) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1737) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1737) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1737) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1737) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1737) CFA_SP SP+-2
          CFI (cfiCond1737) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1738 Using cfiCommon1
          CFI (cfiPicker1738) NoFunction
          CFI (cfiPicker1738) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine172 & 0xFFFF
??CrossCallReturnLabel_644:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1736
          CFI EndBlock cfiCond1737
          CFI EndBlock cfiPicker1738
// 3383 
// 3384 /*********************************************************************
// 3385  * @fn          ZDO_ParseEndDeviceTimeoutRsp
// 3386  *
// 3387  * @brief       Parse the End_Device_Timeout_rsp message.
// 3388  *
// 3389  * @param       inMsg - incoming message.
// 3390  * @param       pRsp - place to put the parsed information.
// 3391  *
// 3392  * @return      none
// 3393  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3394 void ZDO_ParseEndDeviceTimeoutRsp( zdoIncomingMsg_t *inMsg, uint16 *pRsp )
ZDO_ParseEndDeviceTimeoutRsp:
          CFI Block cfiBlock1739 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceTimeoutRsp
        CODE
// 3395 {
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 3396   *pRsp = inMsg->asdu[0];
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_188:
        LCALL   ??Subroutine228_0 & 0xFFFF
??CrossCallReturnLabel_396:
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
// 3397 }
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock1739

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zdpExternalStateTaskID>`:
        DATA16
        DW -1

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3e8:
        DD 1000

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_Init::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_StartDevice::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_StartDevice

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zdoSendStateChangeMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zdoSendStateChangeMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_UpdateNwkStatus::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_UpdateNwkStatus

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_CompareClusterLists::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_CompareClusterLists

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_AnyClusterMatches::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_AnyClusterMatches

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessNodeDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessNodeDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessPowerDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessPowerDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessSimpleDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessSimpleDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessActiveEPReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessActiveEPReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ConvertOTAClusters::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ConvertOTAClusters

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMatchDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMatchDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessBindUnbindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessBindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_UpdateAddrManager::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_UpdateAddrManager

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessServerDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessServerDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessEndDeviceTimeoutReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessEndDeviceTimeoutReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_EndDeviceTimeoutCB::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_EndDeviceTimeoutCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtLqiReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtLqiReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtNwkDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtNwkDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_FinishProcessingMgmtNwkDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_FinishProcessingMgmtNwkDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtRtgReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtRtgReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtBindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtDirectJoinReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtDirectJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtLeaveReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtLeaveReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtPermitJoinReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtPermitJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??NLME_PermitJoiningTimeout::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    NLME_PermitJoiningTimeout

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessUserDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessUserDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessUserDescSet::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessUserDescSet

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessDeviceAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessDeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_BuildSimpleDescBuf::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_BuildSimpleDescBuf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_MatchEndDeviceBind::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_MatchEndDeviceBind

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_RemoveMatchMemory::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_RemoveMatchMemory

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_CopyMatchInfo::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_CopyMatchInfo

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDMatchSendState::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDMatchSendState

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_EndDeviceBindMatchTimeoutCB::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_EndDeviceBindMatchTimeoutCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseEndDeviceBindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseEndDeviceBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseBindUnbindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseBindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseAddrRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseAddrRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseNodeDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseNodeDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParsePowerDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParsePowerDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseSimpleDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseSimpleDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseEPListRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseEPListRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseServerDiscRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseServerDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtLqiRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtLqiRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmNwkDiscRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmNwkDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtRtgRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtRtgRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtBindRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtBindRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseUserDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseUserDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseSimpleDescBuf::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseSimpleDescBuf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseDeviceAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseDeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtNwkUpdateNotify::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtNwkUpdateNotify

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtNwkUpdateReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtNwkUpdateReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseEndDeviceTimeoutRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseEndDeviceTimeoutRsp

        END
// 3398 
// 3399 /*********************************************************************
// 3400 *********************************************************************/
// 
// 13 307 bytes in segment BANKED_CODE
//    318 bytes in segment BANK_RELAYS
//      2 bytes in segment XDATA_I
//      2 bytes in segment XDATA_ID
//      4 bytes in segment XDATA_ROM_C
//     62 bytes in segment XDATA_Z
// 
// 13 627 bytes of CODE  memory
//      0 bytes of CONST memory (+ 4 bytes shared)
//     64 bytes of XDATA memory
//
//Errors: none
//Warnings: none
